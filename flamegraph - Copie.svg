<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1334" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1317.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1317.00"> </text><svg id="frames" x="10" width="1180" total_samples="12564"><g><title>`0x7FFAE374379F (2 samples, 0.02%)</title><rect x="0.0080%" y="1237" width="0.0159%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.2580%" y="1247.50"></text></g><g><title>`0x7FFAE36E8842 (3 samples, 0.02%)</title><rect x="0.0557%" y="1157" width="0.0239%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="3"/><text x="0.3057%" y="1167.50"></text></g><g><title>`0x7FFAE36ED255 (3 samples, 0.02%)</title><rect x="0.0557%" y="1141" width="0.0239%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="3"/><text x="0.3057%" y="1151.50"></text></g><g><title>`0x7FFAE374B611 (3 samples, 0.02%)</title><rect x="0.0557%" y="1125" width="0.0239%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="3"/><text x="0.3057%" y="1135.50"></text></g><g><title>`0x7FFAE374BBB8 (3 samples, 0.02%)</title><rect x="0.0557%" y="1109" width="0.0239%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="3"/><text x="0.3057%" y="1119.50"></text></g><g><title>`0x7FFAE36E9F82 (2 samples, 0.02%)</title><rect x="0.0637%" y="1093" width="0.0159%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="2"/><text x="0.3137%" y="1103.50"></text></g><g><title>`0x7FFAE0A92E8D (2 samples, 0.02%)</title><rect x="0.0796%" y="1061" width="0.0159%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="2"/><text x="0.3296%" y="1071.50"></text></g><g><title>`0x7FFAE37BB734 (6 samples, 0.05%)</title><rect x="0.0557%" y="1205" width="0.0478%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="6"/><text x="0.3057%" y="1215.50"></text></g><g><title>`0x7FFAE3735D80 (6 samples, 0.05%)</title><rect x="0.0557%" y="1189" width="0.0478%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="6"/><text x="0.3057%" y="1199.50"></text></g><g><title>`0x7FFAE36E84E0 (6 samples, 0.05%)</title><rect x="0.0557%" y="1173" width="0.0478%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="6"/><text x="0.3057%" y="1183.50"></text></g><g><title>`0x7FFAE36E88D4 (3 samples, 0.02%)</title><rect x="0.0796%" y="1157" width="0.0239%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="3"/><text x="0.3296%" y="1167.50"></text></g><g><title>`0x7FFAE371AE03 (3 samples, 0.02%)</title><rect x="0.0796%" y="1141" width="0.0239%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="3"/><text x="0.3296%" y="1151.50"></text></g><g><title>`0x7FFAE371BCA6 (3 samples, 0.02%)</title><rect x="0.0796%" y="1125" width="0.0239%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="3"/><text x="0.3296%" y="1135.50"></text></g><g><title>`0x7FFAE371BC7A (3 samples, 0.02%)</title><rect x="0.0796%" y="1109" width="0.0239%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="3"/><text x="0.3296%" y="1119.50"></text></g><g><title>`0x7FFAE375193C (3 samples, 0.02%)</title><rect x="0.0796%" y="1093" width="0.0239%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="3"/><text x="0.3296%" y="1103.50"></text></g><g><title>`0x7FFAE3752983 (3 samples, 0.02%)</title><rect x="0.0796%" y="1077" width="0.0239%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="3"/><text x="0.3296%" y="1087.50"></text></g><g><title>`0x7FFAE374548B (7 samples, 0.06%)</title><rect x="0.0557%" y="1221" width="0.0557%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="7"/><text x="0.3057%" y="1231.50"></text></g><g><title>`0x7FFAE3745595 (2 samples, 0.02%)</title><rect x="0.1114%" y="1221" width="0.0159%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="2"/><text x="0.3614%" y="1231.50"></text></g><g><title>`0x7FFAE3715FCE (17 samples, 0.14%)</title><rect x="0.0080%" y="1269" width="0.1353%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="17"/><text x="0.2580%" y="1279.50"></text></g><g><title>`0x7FFAE374364E (17 samples, 0.14%)</title><rect x="0.0080%" y="1253" width="0.1353%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="17"/><text x="0.2580%" y="1263.50"></text></g><g><title>`0x7FFAE3743864 (15 samples, 0.12%)</title><rect x="0.0239%" y="1237" width="0.1194%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="15"/><text x="0.2739%" y="1247.50"></text></g><g><title>`0x7FFAE375C32A (2 samples, 0.02%)</title><rect x="0.1512%" y="1205" width="0.0159%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="2"/><text x="0.4012%" y="1215.50"></text></g><g><title>`0x7FFAE3772AA1 (3 samples, 0.02%)</title><rect x="0.1512%" y="1237" width="0.0239%" height="15" fill="rgb(221,5,38)" fg:x="19" fg:w="3"/><text x="0.4012%" y="1247.50"></text></g><g><title>`0x7FFAE375B4B0 (3 samples, 0.02%)</title><rect x="0.1512%" y="1221" width="0.0239%" height="15" fill="rgb(247,18,42)" fg:x="19" fg:w="3"/><text x="0.4012%" y="1231.50"></text></g><g><title>`0x7FFAE374BA3E (2 samples, 0.02%)</title><rect x="0.1831%" y="1045" width="0.0159%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="2"/><text x="0.4331%" y="1055.50"></text></g><g><title>`0x7FFAE36E8860 (6 samples, 0.05%)</title><rect x="0.1751%" y="1109" width="0.0478%" height="15" fill="rgb(249,31,29)" fg:x="22" fg:w="6"/><text x="0.4251%" y="1119.50"></text></g><g><title>`0x7FFAE375C404 (6 samples, 0.05%)</title><rect x="0.1751%" y="1093" width="0.0478%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="6"/><text x="0.4251%" y="1103.50"></text></g><g><title>`0x7FFAE374E52D (5 samples, 0.04%)</title><rect x="0.1831%" y="1077" width="0.0398%" height="15" fill="rgb(238,160,17)" fg:x="23" fg:w="5"/><text x="0.4331%" y="1087.50"></text></g><g><title>`0x7FFAE375065C (5 samples, 0.04%)</title><rect x="0.1831%" y="1061" width="0.0398%" height="15" fill="rgb(214,148,48)" fg:x="23" fg:w="5"/><text x="0.4331%" y="1071.50"></text></g><g><title>`0x7FFAE374BBB8 (3 samples, 0.02%)</title><rect x="0.1990%" y="1045" width="0.0239%" height="15" fill="rgb(232,36,49)" fg:x="25" fg:w="3"/><text x="0.4490%" y="1055.50"></text></g><g><title>`0x7FFAE1340046 (7 samples, 0.06%)</title><rect x="0.1751%" y="1221" width="0.0557%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1231.50"></text></g><g><title>`0x7FFAE132553D (7 samples, 0.06%)</title><rect x="0.1751%" y="1205" width="0.0557%" height="15" fill="rgb(229,88,8)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1215.50"></text></g><g><title>`0x7FFAE12B423B (7 samples, 0.06%)</title><rect x="0.1751%" y="1189" width="0.0557%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1199.50"></text></g><g><title>`0x7FFAE1316225 (7 samples, 0.06%)</title><rect x="0.1751%" y="1173" width="0.0557%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1183.50"></text></g><g><title>`0x7FFAE09828E6 (7 samples, 0.06%)</title><rect x="0.1751%" y="1157" width="0.0557%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1167.50"></text></g><g><title>`0x7FFAE3735D80 (7 samples, 0.06%)</title><rect x="0.1751%" y="1141" width="0.0557%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1151.50"></text></g><g><title>`0x7FFAE36E84E0 (7 samples, 0.06%)</title><rect x="0.1751%" y="1125" width="0.0557%" height="15" fill="rgb(226,3,54)" fg:x="22" fg:w="7"/><text x="0.4251%" y="1135.50"></text></g><g><title>`0x7FFAE1340093 (2 samples, 0.02%)</title><rect x="0.2308%" y="1221" width="0.0159%" height="15" fill="rgb(245,192,40)" fg:x="29" fg:w="2"/><text x="0.4808%" y="1231.50"></text></g><g><title>`0x7FFAE2FC18AB (2 samples, 0.02%)</title><rect x="0.2308%" y="1205" width="0.0159%" height="15" fill="rgb(238,167,29)" fg:x="29" fg:w="2"/><text x="0.4808%" y="1215.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::str::iter::Split&lt;ref$ (2 samples, 0.02%)</title><rect x="0.2547%" y="1045" width="0.0159%" height="15" fill="rgb(232,182,51)" fg:x="32" fg:w="2"/><text x="0.5047%" y="1055.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next(core::str::iter::Split&lt;ref$ (2 samples, 0.02%)</title><rect x="0.2547%" y="1029" width="0.0159%" height="15" fill="rgb(231,60,39)" fg:x="32" fg:w="2"/><text x="0.5047%" y="1039.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (2 samples, 0.02%)</title><rect x="0.2547%" y="1013" width="0.0159%" height="15" fill="rgb(208,69,12)" fg:x="32" fg:w="2"/><text x="0.5047%" y="1023.50"></text></g><g><title>ant_colony.exe`core::str::pattern::impl$33::next_match (2 samples, 0.02%)</title><rect x="0.2547%" y="997" width="0.0159%" height="15" fill="rgb(235,93,37)" fg:x="32" fg:w="2"/><text x="0.5047%" y="1007.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.2547%" y="981" width="0.0159%" height="15" fill="rgb(213,116,39)" fg:x="32" fg:w="2"/><text x="0.5047%" y="991.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_buf (2 samples, 0.02%)</title><rect x="0.2706%" y="949" width="0.0159%" height="15" fill="rgb(222,207,29)" fg:x="34" fg:w="2"/><text x="0.5206%" y="959.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::read_buf (2 samples, 0.02%)</title><rect x="0.2706%" y="933" width="0.0159%" height="15" fill="rgb(206,96,30)" fg:x="34" fg:w="2"/><text x="0.5206%" y="943.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read_buf (2 samples, 0.02%)</title><rect x="0.2706%" y="917" width="0.0159%" height="15" fill="rgb(218,138,4)" fg:x="34" fg:w="2"/><text x="0.5206%" y="927.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (2 samples, 0.02%)</title><rect x="0.2706%" y="901" width="0.0159%" height="15" fill="rgb(250,191,14)" fg:x="34" fg:w="2"/><text x="0.5206%" y="911.50"></text></g><g><title>`0x7FFAE3841BC4 (2 samples, 0.02%)</title><rect x="0.2706%" y="885" width="0.0159%" height="15" fill="rgb(239,60,40)" fg:x="34" fg:w="2"/><text x="0.5206%" y="895.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (3 samples, 0.02%)</title><rect x="0.2706%" y="1045" width="0.0239%" height="15" fill="rgb(206,27,48)" fg:x="34" fg:w="3"/><text x="0.5206%" y="1055.50"></text></g><g><title>ant_colony.exe`std::fs::impl$8::read_to_string (3 samples, 0.02%)</title><rect x="0.2706%" y="1029" width="0.0239%" height="15" fill="rgb(225,35,8)" fg:x="34" fg:w="3"/><text x="0.5206%" y="1039.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_to_string (3 samples, 0.02%)</title><rect x="0.2706%" y="1013" width="0.0239%" height="15" fill="rgb(250,213,24)" fg:x="34" fg:w="3"/><text x="0.5206%" y="1023.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_string (3 samples, 0.02%)</title><rect x="0.2706%" y="997" width="0.0239%" height="15" fill="rgb(247,123,22)" fg:x="34" fg:w="3"/><text x="0.5206%" y="1007.50"></text></g><g><title>ant_colony.exe`std::io::append_to_string (3 samples, 0.02%)</title><rect x="0.2706%" y="981" width="0.0239%" height="15" fill="rgb(231,138,38)" fg:x="34" fg:w="3"/><text x="0.5206%" y="991.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (3 samples, 0.02%)</title><rect x="0.2706%" y="965" width="0.0239%" height="15" fill="rgb(231,145,46)" fg:x="34" fg:w="3"/><text x="0.5206%" y="975.50"></text></g><g><title>`0x7FFAE36EF164 (18 samples, 0.14%)</title><rect x="0.3422%" y="853" width="0.1433%" height="15" fill="rgb(251,118,11)" fg:x="43" fg:w="18"/><text x="0.5922%" y="863.50"></text></g><g><title>`0x7FFAE36EF2A4 (15 samples, 0.12%)</title><rect x="0.3661%" y="837" width="0.1194%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="15"/><text x="0.6161%" y="847.50"></text></g><g><title>`0x7FFAE36EFFFF (11 samples, 0.09%)</title><rect x="0.3980%" y="821" width="0.0876%" height="15" fill="rgb(247,81,37)" fg:x="50" fg:w="11"/><text x="0.6480%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity (20 samples, 0.16%)</title><rect x="0.3422%" y="933" width="0.1592%" height="15" fill="rgb(209,12,38)" fg:x="43" fg:w="20"/><text x="0.5922%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity_in (20 samples, 0.16%)</title><rect x="0.3422%" y="917" width="0.1592%" height="15" fill="rgb(227,1,9)" fg:x="43" fg:w="20"/><text x="0.5922%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity_in (20 samples, 0.16%)</title><rect x="0.3422%" y="901" width="0.1592%" height="15" fill="rgb(248,47,43)" fg:x="43" fg:w="20"/><text x="0.5922%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (20 samples, 0.16%)</title><rect x="0.3422%" y="885" width="0.1592%" height="15" fill="rgb(221,10,30)" fg:x="43" fg:w="20"/><text x="0.5922%" y="895.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (20 samples, 0.16%)</title><rect x="0.3422%" y="869" width="0.1592%" height="15" fill="rgb(210,229,1)" fg:x="43" fg:w="20"/><text x="0.5922%" y="879.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;*, core::str::iter::Split&lt;ref$ (9 samples, 0.07%)</title><rect x="0.5014%" y="933" width="0.0716%" height="15" fill="rgb(222,148,37)" fg:x="63" fg:w="9"/><text x="0.7514%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::extend_desugared(core::str::iter::Split&lt;ref$ (9 samples, 0.07%)</title><rect x="0.5014%" y="917" width="0.0716%" height="15" fill="rgb(234,67,33)" fg:x="63" fg:w="9"/><text x="0.7514%" y="927.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next&lt;ref$&lt;str$&gt; &gt;(core::str::iter::Split&lt;ref$ (9 samples, 0.07%)</title><rect x="0.5014%" y="901" width="0.0716%" height="15" fill="rgb(247,98,35)" fg:x="63" fg:w="9"/><text x="0.7514%" y="911.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (7 samples, 0.06%)</title><rect x="0.5174%" y="885" width="0.0557%" height="15" fill="rgb(247,138,52)" fg:x="65" fg:w="7"/><text x="0.7674%" y="895.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (5 samples, 0.04%)</title><rect x="0.5333%" y="869" width="0.0398%" height="15" fill="rgb(213,79,30)" fg:x="67" fg:w="5"/><text x="0.7833%" y="879.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (3 samples, 0.02%)</title><rect x="0.5890%" y="901" width="0.0239%" height="15" fill="rgb(246,177,23)" fg:x="74" fg:w="3"/><text x="0.8390%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (37 samples, 0.29%)</title><rect x="0.3263%" y="997" width="0.2945%" height="15" fill="rgb(230,62,27)" fg:x="41" fg:w="37"/><text x="0.5763%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_slice (37 samples, 0.29%)</title><rect x="0.3263%" y="981" width="0.2945%" height="15" fill="rgb(216,154,8)" fg:x="41" fg:w="37"/><text x="0.5763%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;str$&gt;,core::str::iter::Split&lt;ref$&lt;str$&gt; &gt; &gt;(core::str::iter::Split&lt;ref$ (37 samples, 0.29%)</title><rect x="0.3263%" y="965" width="0.2945%" height="15" fill="rgb(244,35,45)" fg:x="41" fg:w="37"/><text x="0.5763%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::str::iter::Split&lt;ref$ (35 samples, 0.28%)</title><rect x="0.3422%" y="949" width="0.2786%" height="15" fill="rgb(251,115,12)" fg:x="43" fg:w="35"/><text x="0.5922%" y="959.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next&lt;ref$&lt;str$&gt; &gt;(core::str::iter::Split&lt;ref$ (6 samples, 0.05%)</title><rect x="0.5731%" y="933" width="0.0478%" height="15" fill="rgb(240,54,50)" fg:x="72" fg:w="6"/><text x="0.8231%" y="943.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (5 samples, 0.04%)</title><rect x="0.5810%" y="917" width="0.0398%" height="15" fill="rgb(233,84,52)" fg:x="73" fg:w="5"/><text x="0.8310%" y="927.50"></text></g><g><title>ant_colony.exe`core::num::impl$31::from_str(ref$ (7 samples, 0.06%)</title><rect x="0.6288%" y="997" width="0.0557%" height="15" fill="rgb(207,117,47)" fg:x="79" fg:w="7"/><text x="0.8788%" y="1007.50"></text></g><g><title>ant_colony.exe`core::num::impl$32::from_str_radix(ref$ (7 samples, 0.06%)</title><rect x="0.6288%" y="981" width="0.0557%" height="15" fill="rgb(249,43,39)" fg:x="79" fg:w="7"/><text x="0.8788%" y="991.50"></text></g><g><title>ant_colony.exe`core::num::impl$32::from_ascii_radix(ref$&lt;slice2$ (7 samples, 0.06%)</title><rect x="0.6288%" y="965" width="0.0557%" height="15" fill="rgb(209,38,44)" fg:x="79" fg:w="7"/><text x="0.8788%" y="975.50"></text></g><g><title>ant_colony.exe`core::char::methods::impl$0::to_digit (3 samples, 0.02%)</title><rect x="0.6606%" y="949" width="0.0239%" height="15" fill="rgb(236,212,23)" fg:x="83" fg:w="3"/><text x="0.9106%" y="959.50"></text></g><g><title>ant_colony.exe`core::num::impl$8::wrapping_sub (3 samples, 0.02%)</title><rect x="0.6606%" y="933" width="0.0239%" height="15" fill="rgb(242,79,21)" fg:x="83" fg:w="3"/><text x="0.9106%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;ref$ (46 samples, 0.37%)</title><rect x="0.3263%" y="1013" width="0.3661%" height="15" fill="rgb(211,96,35)" fg:x="41" fg:w="46"/><text x="0.5763%" y="1023.50"></text></g><g><title>`0x7FFAE3725B10 (5 samples, 0.04%)</title><rect x="0.6925%" y="837" width="0.0398%" height="15" fill="rgb(253,215,40)" fg:x="87" fg:w="5"/><text x="0.9425%" y="847.50"></text></g><g><title>`0x7FFAE3725FC4 (16 samples, 0.13%)</title><rect x="0.7323%" y="837" width="0.1273%" height="15" fill="rgb(211,81,21)" fg:x="92" fg:w="16"/><text x="0.9823%" y="847.50"></text></g><g><title>`0x7FFAE38481EC (16 samples, 0.13%)</title><rect x="0.7323%" y="821" width="0.1273%" height="15" fill="rgb(208,190,38)" fg:x="92" fg:w="16"/><text x="0.9823%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::new_empty (24 samples, 0.19%)</title><rect x="0.6925%" y="1013" width="0.1910%" height="15" fill="rgb(235,213,38)" fg:x="87" fg:w="24"/><text x="0.9425%" y="1023.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (24 samples, 0.19%)</title><rect x="0.6925%" y="997" width="0.1910%" height="15" fill="rgb(237,122,38)" fg:x="87" fg:w="24"/><text x="0.9425%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (24 samples, 0.19%)</title><rect x="0.6925%" y="981" width="0.1910%" height="15" fill="rgb(244,218,35)" fg:x="87" fg:w="24"/><text x="0.9425%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::with_capacity_zeroed_in (24 samples, 0.19%)</title><rect x="0.6925%" y="965" width="0.1910%" height="15" fill="rgb(240,68,47)" fg:x="87" fg:w="24"/><text x="0.9425%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (24 samples, 0.19%)</title><rect x="0.6925%" y="949" width="0.1910%" height="15" fill="rgb(210,16,53)" fg:x="87" fg:w="24"/><text x="0.9425%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (24 samples, 0.19%)</title><rect x="0.6925%" y="933" width="0.1910%" height="15" fill="rgb(235,124,12)" fg:x="87" fg:w="24"/><text x="0.9425%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (24 samples, 0.19%)</title><rect x="0.6925%" y="917" width="0.1910%" height="15" fill="rgb(224,169,11)" fg:x="87" fg:w="24"/><text x="0.9425%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (24 samples, 0.19%)</title><rect x="0.6925%" y="901" width="0.1910%" height="15" fill="rgb(250,166,2)" fg:x="87" fg:w="24"/><text x="0.9425%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (24 samples, 0.19%)</title><rect x="0.6925%" y="885" width="0.1910%" height="15" fill="rgb(242,216,29)" fg:x="87" fg:w="24"/><text x="0.9425%" y="895.50"></text></g><g><title>`0x7FFAE36EF164 (24 samples, 0.19%)</title><rect x="0.6925%" y="869" width="0.1910%" height="15" fill="rgb(230,116,27)" fg:x="87" fg:w="24"/><text x="0.9425%" y="879.50"></text></g><g><title>`0x7FFAE36EF591 (24 samples, 0.19%)</title><rect x="0.6925%" y="853" width="0.1910%" height="15" fill="rgb(228,99,48)" fg:x="87" fg:w="24"/><text x="0.9425%" y="863.50"></text></g><g><title>`0x7FFAE37269A2 (3 samples, 0.02%)</title><rect x="0.8596%" y="837" width="0.0239%" height="15" fill="rgb(253,11,6)" fg:x="108" fg:w="3"/><text x="1.1096%" y="847.50"></text></g><g><title>`0x7FFAE3727D7F (3 samples, 0.02%)</title><rect x="0.8596%" y="821" width="0.0239%" height="15" fill="rgb(247,143,39)" fg:x="108" fg:w="3"/><text x="1.1096%" y="831.50"></text></g><g><title>`0x7FFAE37286F4 (3 samples, 0.02%)</title><rect x="0.8596%" y="805" width="0.0239%" height="15" fill="rgb(236,97,10)" fg:x="108" fg:w="3"/><text x="1.1096%" y="815.50"></text></g><g><title>`0x7FFAE372822A (3 samples, 0.02%)</title><rect x="0.8596%" y="789" width="0.0239%" height="15" fill="rgb(233,208,19)" fg:x="108" fg:w="3"/><text x="1.1096%" y="799.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (4 samples, 0.03%)</title><rect x="0.8835%" y="1013" width="0.0318%" height="15" fill="rgb(216,164,2)" fg:x="111" fg:w="4"/><text x="1.1335%" y="1023.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (4 samples, 0.03%)</title><rect x="0.8835%" y="997" width="0.0318%" height="15" fill="rgb(220,129,5)" fg:x="111" fg:w="4"/><text x="1.1335%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;ref$ (4 samples, 0.03%)</title><rect x="0.8835%" y="981" width="0.0318%" height="15" fill="rgb(242,17,10)" fg:x="111" fg:w="4"/><text x="1.1335%" y="991.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (4 samples, 0.03%)</title><rect x="0.8835%" y="965" width="0.0318%" height="15" fill="rgb(242,107,0)" fg:x="111" fg:w="4"/><text x="1.1335%" y="975.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::incr_neighboor_count_unchecked (3 samples, 0.02%)</title><rect x="0.8914%" y="949" width="0.0239%" height="15" fill="rgb(251,28,31)" fg:x="112" fg:w="3"/><text x="1.1414%" y="959.50"></text></g><g><title>ant_colony.exe`core::str::impl$0::split(ref$&lt;str$&gt;, ref$ (15 samples, 0.12%)</title><rect x="0.9153%" y="1013" width="0.1194%" height="15" fill="rgb(233,223,10)" fg:x="115" fg:w="15"/><text x="1.1653%" y="1023.50"></text></g><g><title>ant_colony.exe`core::str::pattern::StrSearcher::new (4 samples, 0.03%)</title><rect x="1.0029%" y="997" width="0.0318%" height="15" fill="rgb(215,21,27)" fg:x="126" fg:w="4"/><text x="1.2529%" y="1007.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::new (2 samples, 0.02%)</title><rect x="1.0188%" y="981" width="0.0159%" height="15" fill="rgb(232,23,21)" fg:x="128" fg:w="2"/><text x="1.2688%" y="991.50"></text></g><g><title>`0x7FFAE3775520 (2 samples, 0.02%)</title><rect x="1.0586%" y="981" width="0.0159%" height="15" fill="rgb(244,5,23)" fg:x="133" fg:w="2"/><text x="1.3086%" y="991.50"></text></g><g><title>`0x7FFAE3775543 (2 samples, 0.02%)</title><rect x="1.0745%" y="981" width="0.0159%" height="15" fill="rgb(226,81,46)" fg:x="135" fg:w="2"/><text x="1.3245%" y="991.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;, ref$ (102 samples, 0.81%)</title><rect x="0.3025%" y="1045" width="0.8118%" height="15" fill="rgb(247,70,30)" fg:x="38" fg:w="102"/><text x="0.5525%" y="1055.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::from_string (102 samples, 0.81%)</title><rect x="0.3025%" y="1029" width="0.8118%" height="15" fill="rgb(212,68,19)" fg:x="38" fg:w="102"/><text x="0.5525%" y="1039.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next(core::str::iter::Split&lt;ref$ (10 samples, 0.08%)</title><rect x="1.0347%" y="1013" width="0.0796%" height="15" fill="rgb(240,187,13)" fg:x="130" fg:w="10"/><text x="1.2847%" y="1023.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (10 samples, 0.08%)</title><rect x="1.0347%" y="997" width="0.0796%" height="15" fill="rgb(223,113,26)" fg:x="130" fg:w="10"/><text x="1.2847%" y="1007.50"></text></g><g><title>ant_colony.exe`ant_colony::get_graphs (109 samples, 0.87%)</title><rect x="0.2547%" y="1061" width="0.8676%" height="15" fill="rgb(206,192,2)" fg:x="32" fg:w="109"/><text x="0.5047%" y="1071.50"></text></g><g><title>`0x7FFAE12FF85B (2 samples, 0.02%)</title><rect x="1.4645%" y="1013" width="0.0159%" height="15" fill="rgb(241,108,4)" fg:x="184" fg:w="2"/><text x="1.7145%" y="1023.50"></text></g><g><title>`0x7FFAE12FF88B (4 samples, 0.03%)</title><rect x="1.4804%" y="1013" width="0.0318%" height="15" fill="rgb(247,173,49)" fg:x="186" fg:w="4"/><text x="1.7304%" y="1023.50"></text></g><g><title>`0x7FFAE12FF8C1 (3 samples, 0.02%)</title><rect x="1.5123%" y="1013" width="0.0239%" height="15" fill="rgb(224,114,35)" fg:x="190" fg:w="3"/><text x="1.7623%" y="1023.50"></text></g><g><title>`0x7FFAE12FF8FA (3 samples, 0.02%)</title><rect x="1.5441%" y="1013" width="0.0239%" height="15" fill="rgb(245,159,27)" fg:x="194" fg:w="3"/><text x="1.7941%" y="1023.50"></text></g><g><title>`0x7FFAE12FF948 (2 samples, 0.02%)</title><rect x="1.5759%" y="1013" width="0.0159%" height="15" fill="rgb(245,172,44)" fg:x="198" fg:w="2"/><text x="1.8259%" y="1023.50"></text></g><g><title>`0x7FFAE12FF975 (2 samples, 0.02%)</title><rect x="1.5918%" y="1013" width="0.0159%" height="15" fill="rgb(236,23,11)" fg:x="200" fg:w="2"/><text x="1.8418%" y="1023.50"></text></g><g><title>`0x7FFAE12FF99D (3 samples, 0.02%)</title><rect x="1.6078%" y="1013" width="0.0239%" height="15" fill="rgb(205,117,38)" fg:x="202" fg:w="3"/><text x="1.8578%" y="1023.50"></text></g><g><title>`0x7FFAE12FF9F5 (2 samples, 0.02%)</title><rect x="1.6396%" y="1013" width="0.0159%" height="15" fill="rgb(237,72,25)" fg:x="206" fg:w="2"/><text x="1.8896%" y="1023.50"></text></g><g><title>`0x7FFAE12FFA45 (2 samples, 0.02%)</title><rect x="1.6635%" y="1013" width="0.0159%" height="15" fill="rgb(244,70,9)" fg:x="209" fg:w="2"/><text x="1.9135%" y="1023.50"></text></g><g><title>`0x7FFAE12FFA7F (3 samples, 0.02%)</title><rect x="1.6874%" y="1013" width="0.0239%" height="15" fill="rgb(217,125,39)" fg:x="212" fg:w="3"/><text x="1.9374%" y="1023.50"></text></g><g><title>`0x7FFAE12FFA9F (2 samples, 0.02%)</title><rect x="1.7272%" y="1013" width="0.0159%" height="15" fill="rgb(235,36,10)" fg:x="217" fg:w="2"/><text x="1.9772%" y="1023.50"></text></g><g><title>`0x7FFAE12FFAA3 (8 samples, 0.06%)</title><rect x="1.7431%" y="1013" width="0.0637%" height="15" fill="rgb(251,123,47)" fg:x="219" fg:w="8"/><text x="1.9931%" y="1023.50"></text></g><g><title>`0x7FFAE12FFAAF (11 samples, 0.09%)</title><rect x="1.8147%" y="1013" width="0.0876%" height="15" fill="rgb(221,13,13)" fg:x="228" fg:w="11"/><text x="2.0647%" y="1023.50"></text></g><g><title>`0x7FFAE12FFAB7 (4 samples, 0.03%)</title><rect x="1.9023%" y="1013" width="0.0318%" height="15" fill="rgb(238,131,9)" fg:x="239" fg:w="4"/><text x="2.1523%" y="1023.50"></text></g><g><title>`0x7FFAE12FFABF (8 samples, 0.06%)</title><rect x="1.9341%" y="1013" width="0.0637%" height="15" fill="rgb(211,50,8)" fg:x="243" fg:w="8"/><text x="2.1841%" y="1023.50"></text></g><g><title>`0x7FFAE12FFADB (2 samples, 0.02%)</title><rect x="1.9978%" y="1013" width="0.0159%" height="15" fill="rgb(245,182,24)" fg:x="251" fg:w="2"/><text x="2.2478%" y="1023.50"></text></g><g><title>`0x7FFAE12FFAE3 (4 samples, 0.03%)</title><rect x="2.0137%" y="1013" width="0.0318%" height="15" fill="rgb(242,14,37)" fg:x="253" fg:w="4"/><text x="2.2637%" y="1023.50"></text></g><g><title>`0x7FFAE12FFAF9 (5 samples, 0.04%)</title><rect x="2.0455%" y="1013" width="0.0398%" height="15" fill="rgb(246,228,12)" fg:x="257" fg:w="5"/><text x="2.2955%" y="1023.50"></text></g><g><title>`0x7FFAE12FFAFD (2 samples, 0.02%)</title><rect x="2.0853%" y="1013" width="0.0159%" height="15" fill="rgb(213,55,15)" fg:x="262" fg:w="2"/><text x="2.3353%" y="1023.50"></text></g><g><title>`0x7FFAE12FFB01 (7 samples, 0.06%)</title><rect x="2.1012%" y="1013" width="0.0557%" height="15" fill="rgb(209,9,3)" fg:x="264" fg:w="7"/><text x="2.3512%" y="1023.50"></text></g><g><title>`0x7FFAE12FFB0F (3 samples, 0.02%)</title><rect x="2.1570%" y="1013" width="0.0239%" height="15" fill="rgb(230,59,30)" fg:x="271" fg:w="3"/><text x="2.4070%" y="1023.50"></text></g><g><title>`0x7FFAE12FFB13 (14 samples, 0.11%)</title><rect x="2.1808%" y="1013" width="0.1114%" height="15" fill="rgb(209,121,21)" fg:x="274" fg:w="14"/><text x="2.4308%" y="1023.50"></text></g><g><title>`0x7FFAE12FFB17 (2 samples, 0.02%)</title><rect x="2.2923%" y="1013" width="0.0159%" height="15" fill="rgb(220,109,13)" fg:x="288" fg:w="2"/><text x="2.5423%" y="1023.50"></text></g><g><title>`0x7FFAE12FFB3C (3 samples, 0.02%)</title><rect x="2.3082%" y="1013" width="0.0239%" height="15" fill="rgb(232,18,1)" fg:x="290" fg:w="3"/><text x="2.5582%" y="1023.50"></text></g><g><title>`0x7FFAE12FFB42 (4 samples, 0.03%)</title><rect x="2.3321%" y="1013" width="0.0318%" height="15" fill="rgb(215,41,42)" fg:x="293" fg:w="4"/><text x="2.5821%" y="1023.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by::closure$0(alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,usize&gt;,ant_colony::graph::impl$2::launch::closure_env$0&gt;*, tuple$&lt;f64,usize&gt;*, tuple$ (4 samples, 0.03%)</title><rect x="2.3719%" y="933" width="0.0318%" height="15" fill="rgb(224,123,36)" fg:x="298" fg:w="4"/><text x="2.6219%" y="943.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::impl$2::launch::closure$0(ant_colony::graph::impl$2::launch::closure_env$0*, tuple$&lt;f64,usize&gt;*, tuple$ (4 samples, 0.03%)</title><rect x="2.3719%" y="917" width="0.0318%" height="15" fill="rgb(240,125,3)" fg:x="298" fg:w="4"/><text x="2.6219%" y="927.50"></text></g><g><title>ant_colony.exe`core::tuple::impl$15::partial_cmp(tuple$&lt;f64,usize&gt;*, tuple$ (4 samples, 0.03%)</title><rect x="2.3719%" y="901" width="0.0318%" height="15" fill="rgb(205,98,50)" fg:x="298" fg:w="4"/><text x="2.6219%" y="911.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$54::partial_cmp (4 samples, 0.03%)</title><rect x="2.3719%" y="885" width="0.0318%" height="15" fill="rgb(205,185,37)" fg:x="298" fg:w="4"/><text x="2.6219%" y="895.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by(ref_mut$&lt;slice2$&lt;tuple$ (6 samples, 0.05%)</title><rect x="2.3639%" y="1013" width="0.0478%" height="15" fill="rgb(238,207,15)" fg:x="297" fg:w="6"/><text x="2.6139%" y="1023.50"></text></g><g><title>ant_colony.exe`alloc::slice::stable_sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (6 samples, 0.05%)</title><rect x="2.3639%" y="997" width="0.0478%" height="15" fill="rgb(213,199,42)" fg:x="297" fg:w="6"/><text x="2.6139%" y="1007.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (6 samples, 0.05%)</title><rect x="2.3639%" y="981" width="0.0478%" height="15" fill="rgb(235,201,11)" fg:x="297" fg:w="6"/><text x="2.6139%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left&lt;tuple$&lt;f64,usize&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,usize&gt;,ant_colony::graph::impl$2::launch::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, unsigned long long, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (6 samples, 0.05%)</title><rect x="2.3639%" y="965" width="0.0478%" height="15" fill="rgb(207,46,11)" fg:x="297" fg:w="6"/><text x="2.6139%" y="975.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;f64,usize&gt;*, tuple$&lt;f64,usize&gt;*, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (6 samples, 0.05%)</title><rect x="2.3639%" y="949" width="0.0478%" height="15" fill="rgb(241,35,35)" fg:x="297" fg:w="6"/><text x="2.6139%" y="959.50"></text></g><g><title>`0x7FFAE372A07D (4 samples, 0.03%)</title><rect x="2.4674%" y="837" width="0.0318%" height="15" fill="rgb(243,32,47)" fg:x="310" fg:w="4"/><text x="2.7174%" y="847.50"></text></g><g><title>`0x7FFAE36EF164 (4 samples, 0.03%)</title><rect x="2.4674%" y="821" width="0.0318%" height="15" fill="rgb(247,202,23)" fg:x="310" fg:w="4"/><text x="2.7174%" y="831.50"></text></g><g><title>`0x7FFAE36EF591 (4 samples, 0.03%)</title><rect x="2.4674%" y="805" width="0.0318%" height="15" fill="rgb(219,102,11)" fg:x="310" fg:w="4"/><text x="2.7174%" y="815.50"></text></g><g><title>`0x7FFAE3847344 (2 samples, 0.02%)</title><rect x="2.4992%" y="821" width="0.0159%" height="15" fill="rgb(243,110,44)" fg:x="314" fg:w="2"/><text x="2.7492%" y="831.50"></text></g><g><title>`0x7FFAE3847353 (4 samples, 0.03%)</title><rect x="2.5151%" y="821" width="0.0318%" height="15" fill="rgb(222,74,54)" fg:x="316" fg:w="4"/><text x="2.7651%" y="831.50"></text></g><g><title>`0x7FFAE384735E (5 samples, 0.04%)</title><rect x="2.5549%" y="821" width="0.0398%" height="15" fill="rgb(216,99,12)" fg:x="321" fg:w="5"/><text x="2.8049%" y="831.50"></text></g><g><title>`0x7FFAE3847362 (3 samples, 0.02%)</title><rect x="2.5947%" y="821" width="0.0239%" height="15" fill="rgb(226,22,26)" fg:x="326" fg:w="3"/><text x="2.8447%" y="831.50"></text></g><g><title>`0x7FFAE3847366 (5 samples, 0.04%)</title><rect x="2.6186%" y="821" width="0.0398%" height="15" fill="rgb(217,163,10)" fg:x="329" fg:w="5"/><text x="2.8686%" y="831.50"></text></g><g><title>`0x7FFAE3847409 (2 samples, 0.02%)</title><rect x="2.6743%" y="821" width="0.0159%" height="15" fill="rgb(213,25,53)" fg:x="336" fg:w="2"/><text x="2.9243%" y="831.50"></text></g><g><title>`0x7FFAE384740E (2 samples, 0.02%)</title><rect x="2.6902%" y="821" width="0.0159%" height="15" fill="rgb(252,105,26)" fg:x="338" fg:w="2"/><text x="2.9402%" y="831.50"></text></g><g><title>`0x7FFAE3847413 (29 samples, 0.23%)</title><rect x="2.7061%" y="821" width="0.2308%" height="15" fill="rgb(220,39,43)" fg:x="340" fg:w="29"/><text x="2.9561%" y="831.50"></text></g><g><title>`0x7FFAE3847417 (23 samples, 0.18%)</title><rect x="2.9370%" y="821" width="0.1831%" height="15" fill="rgb(229,68,48)" fg:x="369" fg:w="23"/><text x="3.1870%" y="831.50"></text></g><g><title>`0x7FFAE372A199 (82 samples, 0.65%)</title><rect x="2.4992%" y="837" width="0.6527%" height="15" fill="rgb(252,8,32)" fg:x="314" fg:w="82"/><text x="2.7492%" y="847.50"></text></g><g><title>`0x7FFAE3847427 (3 samples, 0.02%)</title><rect x="3.1280%" y="821" width="0.0239%" height="15" fill="rgb(223,20,43)" fg:x="393" fg:w="3"/><text x="3.3780%" y="831.50"></text></g><g><title>`0x7FFAE3709B68 (3 samples, 0.02%)</title><rect x="3.1519%" y="789" width="0.0239%" height="15" fill="rgb(229,81,49)" fg:x="396" fg:w="3"/><text x="3.4019%" y="799.50"></text></g><g><title>`0x7FFAE36F801E (3 samples, 0.02%)</title><rect x="3.1519%" y="773" width="0.0239%" height="15" fill="rgb(236,28,36)" fg:x="396" fg:w="3"/><text x="3.4019%" y="783.50"></text></g><g><title>`0x7FFAE37CB4C9 (3 samples, 0.02%)</title><rect x="3.1519%" y="757" width="0.0239%" height="15" fill="rgb(249,185,26)" fg:x="396" fg:w="3"/><text x="3.4019%" y="767.50"></text></g><g><title>`0x7FFAE3841EC4 (3 samples, 0.02%)</title><rect x="3.1519%" y="741" width="0.0239%" height="15" fill="rgb(249,174,33)" fg:x="396" fg:w="3"/><text x="3.4019%" y="751.50"></text></g><g><title>`0x7FFAE36F49D6 (6 samples, 0.05%)</title><rect x="3.1519%" y="805" width="0.0478%" height="15" fill="rgb(233,201,37)" fg:x="396" fg:w="6"/><text x="3.4019%" y="815.50"></text></g><g><title>`0x7FFAE3709F76 (2 samples, 0.02%)</title><rect x="3.1837%" y="789" width="0.0159%" height="15" fill="rgb(221,78,26)" fg:x="400" fg:w="2"/><text x="3.4337%" y="799.50"></text></g><g><title>`0x7FFAE376802F (2 samples, 0.02%)</title><rect x="3.1837%" y="773" width="0.0159%" height="15" fill="rgb(250,127,30)" fg:x="400" fg:w="2"/><text x="3.4337%" y="783.50"></text></g><g><title>`0x7FFAE3841EC4 (2 samples, 0.02%)</title><rect x="3.1837%" y="757" width="0.0159%" height="15" fill="rgb(230,49,44)" fg:x="400" fg:w="2"/><text x="3.4337%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::grow_one&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt; (101 samples, 0.80%)</title><rect x="2.4594%" y="997" width="0.8039%" height="15" fill="rgb(229,67,23)" fg:x="309" fg:w="101"/><text x="2.7094%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (101 samples, 0.80%)</title><rect x="2.4594%" y="981" width="0.8039%" height="15" fill="rgb(249,83,47)" fg:x="309" fg:w="101"/><text x="2.7094%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (101 samples, 0.80%)</title><rect x="2.4594%" y="965" width="0.8039%" height="15" fill="rgb(215,43,3)" fg:x="309" fg:w="101"/><text x="2.7094%" y="975.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (101 samples, 0.80%)</title><rect x="2.4594%" y="949" width="0.8039%" height="15" fill="rgb(238,154,13)" fg:x="309" fg:w="101"/><text x="2.7094%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (101 samples, 0.80%)</title><rect x="2.4594%" y="933" width="0.8039%" height="15" fill="rgb(219,56,2)" fg:x="309" fg:w="101"/><text x="2.7094%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (101 samples, 0.80%)</title><rect x="2.4594%" y="917" width="0.8039%" height="15" fill="rgb(233,0,4)" fg:x="309" fg:w="101"/><text x="2.7094%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (101 samples, 0.80%)</title><rect x="2.4594%" y="901" width="0.8039%" height="15" fill="rgb(235,30,7)" fg:x="309" fg:w="101"/><text x="2.7094%" y="911.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (101 samples, 0.80%)</title><rect x="2.4594%" y="885" width="0.8039%" height="15" fill="rgb(250,79,13)" fg:x="309" fg:w="101"/><text x="2.7094%" y="895.50"></text></g><g><title>`0x7FFAE3728F8D (101 samples, 0.80%)</title><rect x="2.4594%" y="869" width="0.8039%" height="15" fill="rgb(211,146,34)" fg:x="309" fg:w="101"/><text x="2.7094%" y="879.50"></text></g><g><title>`0x7FFAE3729235 (101 samples, 0.80%)</title><rect x="2.4594%" y="853" width="0.8039%" height="15" fill="rgb(228,22,38)" fg:x="309" fg:w="101"/><text x="2.7094%" y="863.50"></text></g><g><title>`0x7FFAE372A1AC (14 samples, 0.11%)</title><rect x="3.1519%" y="837" width="0.1114%" height="15" fill="rgb(235,168,5)" fg:x="396" fg:w="14"/><text x="3.4019%" y="847.50"></text></g><g><title>`0x7FFAE37759E0 (14 samples, 0.11%)</title><rect x="3.1519%" y="821" width="0.1114%" height="15" fill="rgb(221,155,16)" fg:x="396" fg:w="14"/><text x="3.4019%" y="831.50"></text></g><g><title>`0x7FFAE36F5578 (8 samples, 0.06%)</title><rect x="3.1996%" y="805" width="0.0637%" height="15" fill="rgb(215,215,53)" fg:x="402" fg:w="8"/><text x="3.4496%" y="815.50"></text></g><g><title>`0x7FFAE376802F (8 samples, 0.06%)</title><rect x="3.1996%" y="789" width="0.0637%" height="15" fill="rgb(223,4,10)" fg:x="402" fg:w="8"/><text x="3.4496%" y="799.50"></text></g><g><title>`0x7FFAE3841EC4 (8 samples, 0.06%)</title><rect x="3.1996%" y="773" width="0.0637%" height="15" fill="rgb(234,103,6)" fg:x="402" fg:w="8"/><text x="3.4496%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (6 samples, 0.05%)</title><rect x="3.2633%" y="997" width="0.0478%" height="15" fill="rgb(227,97,0)" fg:x="410" fg:w="6"/><text x="3.5133%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (6 samples, 0.05%)</title><rect x="3.2633%" y="981" width="0.0478%" height="15" fill="rgb(234,150,53)" fg:x="410" fg:w="6"/><text x="3.5133%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (6 samples, 0.05%)</title><rect x="3.2633%" y="965" width="0.0478%" height="15" fill="rgb(228,201,54)" fg:x="410" fg:w="6"/><text x="3.5133%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (6 samples, 0.05%)</title><rect x="3.2633%" y="949" width="0.0478%" height="15" fill="rgb(222,22,37)" fg:x="410" fg:w="6"/><text x="3.5133%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (137 samples, 1.09%)</title><rect x="2.4117%" y="1013" width="1.0904%" height="15" fill="rgb(237,53,32)" fg:x="303" fg:w="137"/><text x="2.6617%" y="1023.50"></text></g><g><title>ant_colony.exe`core::ptr::write (24 samples, 0.19%)</title><rect x="3.3110%" y="997" width="0.1910%" height="15" fill="rgb(233,25,53)" fg:x="416" fg:w="24"/><text x="3.5610%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (2 samples, 0.02%)</title><rect x="3.5100%" y="1013" width="0.0159%" height="15" fill="rgb(210,40,34)" fg:x="441" fg:w="2"/><text x="3.7600%" y="1023.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="3.5100%" y="997" width="0.0159%" height="15" fill="rgb(241,220,44)" fg:x="441" fg:w="2"/><text x="3.7600%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (2 samples, 0.02%)</title><rect x="3.5100%" y="981" width="0.0159%" height="15" fill="rgb(235,28,35)" fg:x="441" fg:w="2"/><text x="3.7600%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_ptr (2 samples, 0.02%)</title><rect x="3.5100%" y="965" width="0.0159%" height="15" fill="rgb(210,56,17)" fg:x="441" fg:w="2"/><text x="3.7600%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::ptr (2 samples, 0.02%)</title><rect x="3.5100%" y="949" width="0.0159%" height="15" fill="rgb(224,130,29)" fg:x="441" fg:w="2"/><text x="3.7600%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.02%)</title><rect x="3.5100%" y="933" width="0.0159%" height="15" fill="rgb(235,212,8)" fg:x="441" fg:w="2"/><text x="3.7600%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.02%)</title><rect x="3.5100%" y="917" width="0.0159%" height="15" fill="rgb(223,33,50)" fg:x="441" fg:w="2"/><text x="3.7600%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (3 samples, 0.02%)</title><rect x="3.5259%" y="1013" width="0.0239%" height="15" fill="rgb(219,149,13)" fg:x="443" fg:w="3"/><text x="3.7759%" y="1023.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;array$ (7 samples, 0.06%)</title><rect x="6.0729%" y="997" width="0.0557%" height="15" fill="rgb(250,156,29)" fg:x="763" fg:w="7"/><text x="6.3229%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_slice (7 samples, 0.06%)</title><rect x="6.0729%" y="981" width="0.0557%" height="15" fill="rgb(216,193,19)" fg:x="763" fg:w="7"/><text x="6.3229%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_ptr (6 samples, 0.05%)</title><rect x="6.0809%" y="965" width="0.0478%" height="15" fill="rgb(216,135,14)" fg:x="764" fg:w="6"/><text x="6.3309%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (6 samples, 0.05%)</title><rect x="6.0809%" y="949" width="0.0478%" height="15" fill="rgb(241,47,5)" fg:x="764" fg:w="6"/><text x="6.3309%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (6 samples, 0.05%)</title><rect x="6.0809%" y="933" width="0.0478%" height="15" fill="rgb(233,42,35)" fg:x="764" fg:w="6"/><text x="6.3309%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (6 samples, 0.05%)</title><rect x="6.0809%" y="917" width="0.0478%" height="15" fill="rgb(231,13,6)" fg:x="764" fg:w="6"/><text x="6.3309%" y="927.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::gain_of_edge (379 samples, 3.02%)</title><rect x="6.1286%" y="997" width="3.0166%" height="15" fill="rgb(207,181,40)" fg:x="770" fg:w="379"/><text x="6.3786%" y="1007.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (68 samples, 0.54%)</title><rect x="8.6039%" y="981" width="0.5412%" height="15" fill="rgb(254,173,49)" fg:x="1081" fg:w="68"/><text x="8.8539%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (68 samples, 0.54%)</title><rect x="8.6039%" y="965" width="0.5412%" height="15" fill="rgb(221,1,38)" fg:x="1081" fg:w="68"/><text x="8.8539%" y="975.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (68 samples, 0.54%)</title><rect x="8.6039%" y="949" width="0.5412%" height="15" fill="rgb(206,124,46)" fg:x="1081" fg:w="68"/><text x="8.8539%" y="959.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (51 samples, 0.41%)</title><rect x="9.1452%" y="965" width="0.4059%" height="15" fill="rgb(249,21,11)" fg:x="1149" fg:w="51"/><text x="9.3952%" y="975.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;array$ (158 samples, 1.26%)</title><rect x="9.1452%" y="997" width="1.2576%" height="15" fill="rgb(222,201,40)" fg:x="1149" fg:w="158"/><text x="9.3952%" y="1007.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (158 samples, 1.26%)</title><rect x="9.1452%" y="981" width="1.2576%" height="15" fill="rgb(235,61,29)" fg:x="1149" fg:w="158"/><text x="9.3952%" y="991.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (107 samples, 0.85%)</title><rect x="9.5511%" y="965" width="0.8516%" height="15" fill="rgb(219,207,3)" fg:x="1200" fg:w="107"/><text x="9.8011%" y="975.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (21 samples, 0.17%)</title><rect x="10.5221%" y="981" width="0.1671%" height="15" fill="rgb(222,56,46)" fg:x="1322" fg:w="21"/><text x="10.7721%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (782 samples, 6.22%)</title><rect x="10.4027%" y="997" width="6.2241%" height="15" fill="rgb(239,76,54)" fg:x="1307" fg:w="782"/><text x="10.6527%" y="1007.50">ant_colo..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (746 samples, 5.94%)</title><rect x="10.6893%" y="981" width="5.9376%" height="15" fill="rgb(231,124,27)" fg:x="1343" fg:w="746"/><text x="10.9393%" y="991.50">ant_colo..</text></g><g><title>ant_colony.exe`core::time::Duration::from_nanos (38 samples, 0.30%)</title><rect x="17.4308%" y="949" width="0.3025%" height="15" fill="rgb(249,195,6)" fg:x="2190" fg:w="38"/><text x="17.6808%" y="959.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (218 samples, 1.74%)</title><rect x="17.3193%" y="965" width="1.7351%" height="15" fill="rgb(237,174,47)" fg:x="2176" fg:w="218"/><text x="17.5693%" y="975.50"></text></g><g><title>ant_colony.exe`std::sys_common::mul_div_u64 (166 samples, 1.32%)</title><rect x="17.7332%" y="949" width="1.3212%" height="15" fill="rgb(206,201,31)" fg:x="2228" fg:w="166"/><text x="17.9832%" y="959.50"></text></g><g><title>`0x7FFAE2FA3FB0 (8 samples, 0.06%)</title><rect x="19.1181%" y="869" width="0.0637%" height="15" fill="rgb(231,57,52)" fg:x="2402" fg:w="8"/><text x="19.3681%" y="879.50"></text></g><g><title>`0x7FFAE3700B00 (4 samples, 0.03%)</title><rect x="19.1818%" y="869" width="0.0318%" height="15" fill="rgb(248,177,22)" fg:x="2410" fg:w="4"/><text x="19.4318%" y="879.50"></text></g><g><title>`0x7FFAE3700B10 (2 samples, 0.02%)</title><rect x="19.2216%" y="869" width="0.0159%" height="15" fill="rgb(215,211,37)" fg:x="2415" fg:w="2"/><text x="19.4716%" y="879.50"></text></g><g><title>`0x7FFAE3700B13 (2 samples, 0.02%)</title><rect x="19.2375%" y="869" width="0.0159%" height="15" fill="rgb(241,128,51)" fg:x="2417" fg:w="2"/><text x="19.4875%" y="879.50"></text></g><g><title>`0x7FFAE3700B17 (2 samples, 0.02%)</title><rect x="19.2534%" y="869" width="0.0159%" height="15" fill="rgb(227,165,31)" fg:x="2419" fg:w="2"/><text x="19.5034%" y="879.50"></text></g><g><title>`0x7FFAE3700B42 (3 samples, 0.02%)</title><rect x="19.2693%" y="869" width="0.0239%" height="15" fill="rgb(228,167,24)" fg:x="2421" fg:w="3"/><text x="19.5193%" y="879.50"></text></g><g><title>`0x7FFAE3700B51 (3 samples, 0.02%)</title><rect x="19.3012%" y="869" width="0.0239%" height="15" fill="rgb(228,143,12)" fg:x="2425" fg:w="3"/><text x="19.5512%" y="879.50"></text></g><g><title>`0x7FFAE3700B60 (6 samples, 0.05%)</title><rect x="19.3330%" y="869" width="0.0478%" height="15" fill="rgb(249,149,8)" fg:x="2429" fg:w="6"/><text x="19.5830%" y="879.50"></text></g><g><title>`0x7FFAE3700B65 (5 samples, 0.04%)</title><rect x="19.3808%" y="869" width="0.0398%" height="15" fill="rgb(243,35,44)" fg:x="2435" fg:w="5"/><text x="19.6308%" y="879.50"></text></g><g><title>`0x7FFAE3700B6D (206 samples, 1.64%)</title><rect x="19.4206%" y="869" width="1.6396%" height="15" fill="rgb(246,89,9)" fg:x="2440" fg:w="206"/><text x="19.6706%" y="879.50"></text></g><g><title>`0x7FFAE3700B71 (8 samples, 0.06%)</title><rect x="21.0602%" y="869" width="0.0637%" height="15" fill="rgb(233,213,13)" fg:x="2646" fg:w="8"/><text x="21.3102%" y="879.50"></text></g><g><title>`0x7FFAE3700B74 (3 samples, 0.02%)</title><rect x="21.1238%" y="869" width="0.0239%" height="15" fill="rgb(233,141,41)" fg:x="2654" fg:w="3"/><text x="21.3738%" y="879.50"></text></g><g><title>`0x7FFAE3700B7F (29 samples, 0.23%)</title><rect x="21.1477%" y="869" width="0.2308%" height="15" fill="rgb(239,167,4)" fg:x="2657" fg:w="29"/><text x="21.3977%" y="879.50"></text></g><g><title>ant_colony.exe`std::time::Instant::now (299 samples, 2.38%)</title><rect x="19.0544%" y="965" width="2.3798%" height="15" fill="rgb(209,217,16)" fg:x="2394" fg:w="299"/><text x="19.3044%" y="975.50">an..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::Instant::now (299 samples, 2.38%)</title><rect x="19.0544%" y="949" width="2.3798%" height="15" fill="rgb(219,88,35)" fg:x="2394" fg:w="299"/><text x="19.3044%" y="959.50">an..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (298 samples, 2.37%)</title><rect x="19.0624%" y="933" width="2.3719%" height="15" fill="rgb(220,193,23)" fg:x="2395" fg:w="298"/><text x="19.3124%" y="943.50">an..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::query (298 samples, 2.37%)</title><rect x="19.0624%" y="917" width="2.3719%" height="15" fill="rgb(230,90,52)" fg:x="2395" fg:w="298"/><text x="19.3124%" y="927.50">an..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::cvt (291 samples, 2.32%)</title><rect x="19.1181%" y="901" width="2.3161%" height="15" fill="rgb(252,106,19)" fg:x="2402" fg:w="291"/><text x="19.3681%" y="911.50">a..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::impl$3::is_zero (291 samples, 2.32%)</title><rect x="19.1181%" y="885" width="2.3161%" height="15" fill="rgb(206,74,20)" fg:x="2402" fg:w="291"/><text x="19.3681%" y="895.50">a..</text></g><g><title>`0x7FFAE3700B8A (7 samples, 0.06%)</title><rect x="21.3785%" y="869" width="0.0557%" height="15" fill="rgb(230,138,44)" fg:x="2686" fg:w="7"/><text x="21.6285%" y="879.50"></text></g><g><title>ant_colony.exe`core::cmp::PartialOrd::gt (4 samples, 0.03%)</title><rect x="21.5377%" y="901" width="0.0318%" height="15" fill="rgb(235,182,43)" fg:x="2706" fg:w="4"/><text x="21.7877%" y="911.50"></text></g><g><title>ant_colony.exe`core::time::impl$21::partial_cmp (4 samples, 0.03%)</title><rect x="21.5377%" y="885" width="0.0318%" height="15" fill="rgb(242,16,51)" fg:x="2706" fg:w="4"/><text x="21.7877%" y="895.50"></text></g><g><title>ant_colony.exe`core::time::Duration::checked_sub (4 samples, 0.03%)</title><rect x="21.5696%" y="901" width="0.0318%" height="15" fill="rgb(248,9,4)" fg:x="2710" fg:w="4"/><text x="21.8196%" y="911.50"></text></g><g><title>ant_colony.exe`core::time::Duration::new (4 samples, 0.03%)</title><rect x="21.5696%" y="885" width="0.0318%" height="15" fill="rgb(210,31,22)" fg:x="2710" fg:w="4"/><text x="21.8196%" y="895.50"></text></g><g><title>ant_colony.exe`core::time::Duration::as_secs_f64 (629 samples, 5.01%)</title><rect x="16.6269%" y="997" width="5.0064%" height="15" fill="rgb(239,54,39)" fg:x="2089" fg:w="629"/><text x="16.8769%" y="1007.50">ant_co..</text></g><g><title>ant_colony.exe`std::time::Instant::elapsed (557 samples, 4.43%)</title><rect x="17.1999%" y="981" width="4.4333%" height="15" fill="rgb(230,99,41)" fg:x="2161" fg:w="557"/><text x="17.4499%" y="991.50">ant_c..</text></g><g><title>ant_colony.exe`std::time::impl$5::sub (25 samples, 0.20%)</title><rect x="21.4343%" y="965" width="0.1990%" height="15" fill="rgb(253,106,12)" fg:x="2693" fg:w="25"/><text x="21.6843%" y="975.50"></text></g><g><title>ant_colony.exe`std::time::Instant::duration_since (25 samples, 0.20%)</title><rect x="21.4343%" y="949" width="0.1990%" height="15" fill="rgb(213,46,41)" fg:x="2693" fg:w="25"/><text x="21.6843%" y="959.50"></text></g><g><title>ant_colony.exe`std::time::Instant::checked_duration_since (21 samples, 0.17%)</title><rect x="21.4661%" y="933" width="0.1671%" height="15" fill="rgb(215,133,35)" fg:x="2697" fg:w="21"/><text x="21.7161%" y="943.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::Instant::checked_sub_instant (12 samples, 0.10%)</title><rect x="21.5377%" y="917" width="0.0955%" height="15" fill="rgb(213,28,5)" fg:x="2706" fg:w="12"/><text x="21.7877%" y="927.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::epsilon (4 samples, 0.03%)</title><rect x="21.6014%" y="901" width="0.0318%" height="15" fill="rgb(215,77,49)" fg:x="2714" fg:w="4"/><text x="21.8514%" y="911.50"></text></g><g><title>`0x7FFAE2FA3FB0 (4 samples, 0.03%)</title><rect x="21.7526%" y="901" width="0.0318%" height="15" fill="rgb(248,100,22)" fg:x="2733" fg:w="4"/><text x="22.0026%" y="911.50"></text></g><g><title>`0x7FFAE3700B17 (4 samples, 0.03%)</title><rect x="21.7924%" y="901" width="0.0318%" height="15" fill="rgb(208,67,9)" fg:x="2738" fg:w="4"/><text x="22.0424%" y="911.50"></text></g><g><title>`0x7FFAE3700B65 (8 samples, 0.06%)</title><rect x="21.8322%" y="901" width="0.0637%" height="15" fill="rgb(219,133,21)" fg:x="2743" fg:w="8"/><text x="22.0822%" y="911.50"></text></g><g><title>`0x7FFAE3700B6D (193 samples, 1.54%)</title><rect x="21.8959%" y="901" width="1.5361%" height="15" fill="rgb(246,46,29)" fg:x="2751" fg:w="193"/><text x="22.1459%" y="911.50"></text></g><g><title>`0x7FFAE3700B71 (10 samples, 0.08%)</title><rect x="23.4320%" y="901" width="0.0796%" height="15" fill="rgb(246,185,52)" fg:x="2944" fg:w="10"/><text x="23.6820%" y="911.50"></text></g><g><title>`0x7FFAE3700B74 (6 samples, 0.05%)</title><rect x="23.5116%" y="901" width="0.0478%" height="15" fill="rgb(252,136,11)" fg:x="2954" fg:w="6"/><text x="23.7616%" y="911.50"></text></g><g><title>`0x7FFAE3700B7F (46 samples, 0.37%)</title><rect x="23.5594%" y="901" width="0.3661%" height="15" fill="rgb(219,138,53)" fg:x="2960" fg:w="46"/><text x="23.8094%" y="911.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::Instant::now (291 samples, 2.32%)</title><rect x="21.6810%" y="981" width="2.3161%" height="15" fill="rgb(211,51,23)" fg:x="2724" fg:w="291"/><text x="21.9310%" y="991.50">a..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (290 samples, 2.31%)</title><rect x="21.6890%" y="965" width="2.3082%" height="15" fill="rgb(247,221,28)" fg:x="2725" fg:w="290"/><text x="21.9390%" y="975.50">a..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::query (290 samples, 2.31%)</title><rect x="21.6890%" y="949" width="2.3082%" height="15" fill="rgb(251,222,45)" fg:x="2725" fg:w="290"/><text x="21.9390%" y="959.50">a..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::cvt (282 samples, 2.24%)</title><rect x="21.7526%" y="933" width="2.2445%" height="15" fill="rgb(217,162,53)" fg:x="2733" fg:w="282"/><text x="22.0026%" y="943.50">a..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::impl$3::is_zero (282 samples, 2.24%)</title><rect x="21.7526%" y="917" width="2.2445%" height="15" fill="rgb(229,93,14)" fg:x="2733" fg:w="282"/><text x="22.0026%" y="927.50">a..</text></g><g><title>`0x7FFAE3700B8A (9 samples, 0.07%)</title><rect x="23.9255%" y="901" width="0.0716%" height="15" fill="rgb(209,67,49)" fg:x="3006" fg:w="9"/><text x="24.1755%" y="911.50"></text></g><g><title>ant_colony.exe`core::time::Duration::from_nanos (28 samples, 0.22%)</title><rect x="24.0608%" y="965" width="0.2229%" height="15" fill="rgb(213,87,29)" fg:x="3023" fg:w="28"/><text x="24.3108%" y="975.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::get_chosen_edge (2,778 samples, 22.11%)</title><rect x="3.5498%" y="1013" width="22.1108%" height="15" fill="rgb(205,151,52)" fg:x="446" fg:w="2778"/><text x="3.7998%" y="1023.50">ant_colony.exe`ant_colony::graph::A..</text></g><g><title>ant_colony.exe`std::time::Instant::now (506 samples, 4.03%)</title><rect x="21.6332%" y="997" width="4.0274%" height="15" fill="rgb(253,215,39)" fg:x="2718" fg:w="506"/><text x="21.8832%" y="1007.50">ant_..</text></g><g><title>ant_colony.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (209 samples, 1.66%)</title><rect x="23.9971%" y="981" width="1.6635%" height="15" fill="rgb(221,220,41)" fg:x="3015" fg:w="209"/><text x="24.2471%" y="991.50"></text></g><g><title>ant_colony.exe`std::sys_common::mul_div_u64 (173 samples, 1.38%)</title><rect x="24.2837%" y="965" width="1.3770%" height="15" fill="rgb(218,133,21)" fg:x="3051" fg:w="173"/><text x="24.5337%" y="975.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::init_origin (9 samples, 0.07%)</title><rect x="25.6606%" y="1013" width="0.0716%" height="15" fill="rgb(221,193,43)" fg:x="3224" fg:w="9"/><text x="25.9106%" y="1023.50"></text></g><g><title>ant_colony.exe`rand_xoshiro::xoshiro256plusplus::impl$2::next_u64 (3 samples, 0.02%)</title><rect x="25.7084%" y="997" width="0.0239%" height="15" fill="rgb(240,128,52)" fg:x="3230" fg:w="3"/><text x="25.9584%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (25 samples, 0.20%)</title><rect x="40.0828%" y="981" width="0.1990%" height="15" fill="rgb(253,114,12)" fg:x="5036" fg:w="25"/><text x="40.3328%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (22 samples, 0.18%)</title><rect x="40.1067%" y="965" width="0.1751%" height="15" fill="rgb(215,223,47)" fg:x="5039" fg:w="22"/><text x="40.3567%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (22 samples, 0.18%)</title><rect x="40.1067%" y="949" width="0.1751%" height="15" fill="rgb(248,225,23)" fg:x="5039" fg:w="22"/><text x="40.3567%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (22 samples, 0.18%)</title><rect x="40.1067%" y="933" width="0.1751%" height="15" fill="rgb(250,108,0)" fg:x="5039" fg:w="22"/><text x="40.3567%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (296 samples, 2.36%)</title><rect x="37.9975%" y="997" width="2.3559%" height="15" fill="rgb(228,208,7)" fg:x="4774" fg:w="296"/><text x="38.2475%" y="1007.50">a..</text></g><g><title>ant_colony.exe`core::ptr::write (9 samples, 0.07%)</title><rect x="40.2818%" y="981" width="0.0716%" height="15" fill="rgb(244,45,10)" fg:x="5061" fg:w="9"/><text x="40.5318%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::len (4 samples, 0.03%)</title><rect x="42.1840%" y="981" width="0.0318%" height="15" fill="rgb(207,125,25)" fg:x="5300" fg:w="4"/><text x="42.4340%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::set_len (11 samples, 0.09%)</title><rect x="42.2159%" y="981" width="0.0876%" height="15" fill="rgb(210,195,18)" fg:x="5304" fg:w="11"/><text x="42.4659%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (501 samples, 3.99%)</title><rect x="40.3534%" y="997" width="3.9876%" height="15" fill="rgb(249,80,12)" fg:x="5070" fg:w="501"/><text x="40.6034%" y="1007.50">ant_..</text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (256 samples, 2.04%)</title><rect x="42.3034%" y="981" width="2.0376%" height="15" fill="rgb(221,65,9)" fg:x="5315" fg:w="256"/><text x="42.5534%" y="991.50">a..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (92 samples, 0.73%)</title><rect x="44.3410%" y="965" width="0.7323%" height="15" fill="rgb(235,49,36)" fg:x="5571" fg:w="92"/><text x="44.5910%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_ptr (68 samples, 0.54%)</title><rect x="44.5320%" y="949" width="0.5412%" height="15" fill="rgb(225,32,20)" fg:x="5595" fg:w="68"/><text x="44.7820%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (68 samples, 0.54%)</title><rect x="44.5320%" y="933" width="0.5412%" height="15" fill="rgb(215,141,46)" fg:x="5595" fg:w="68"/><text x="44.7820%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (68 samples, 0.54%)</title><rect x="44.5320%" y="917" width="0.5412%" height="15" fill="rgb(250,160,47)" fg:x="5595" fg:w="68"/><text x="44.7820%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (68 samples, 0.54%)</title><rect x="44.5320%" y="901" width="0.5412%" height="15" fill="rgb(216,222,40)" fg:x="5595" fg:w="68"/><text x="44.7820%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (118 samples, 0.94%)</title><rect x="44.3410%" y="997" width="0.9392%" height="15" fill="rgb(234,217,39)" fg:x="5571" fg:w="118"/><text x="44.5910%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (118 samples, 0.94%)</title><rect x="44.3410%" y="981" width="0.9392%" height="15" fill="rgb(207,178,40)" fg:x="5571" fg:w="118"/><text x="44.5910%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (26 samples, 0.21%)</title><rect x="45.0732%" y="965" width="0.2069%" height="15" fill="rgb(221,136,13)" fg:x="5663" fg:w="26"/><text x="45.3232%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (2 samples, 0.02%)</title><rect x="46.2910%" y="981" width="0.0159%" height="15" fill="rgb(249,199,10)" fg:x="5816" fg:w="2"/><text x="46.5410%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (2 samples, 0.02%)</title><rect x="46.2910%" y="965" width="0.0159%" height="15" fill="rgb(249,222,13)" fg:x="5816" fg:w="2"/><text x="46.5410%" y="975.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="46.2910%" y="949" width="0.0159%" height="15" fill="rgb(244,185,38)" fg:x="5816" fg:w="2"/><text x="46.5410%" y="959.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (132 samples, 1.05%)</title><rect x="45.2802%" y="997" width="1.0506%" height="15" fill="rgb(236,202,9)" fg:x="5689" fg:w="132"/><text x="45.5302%" y="1007.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (3 samples, 0.02%)</title><rect x="46.3069%" y="981" width="0.0239%" height="15" fill="rgb(250,229,37)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3 samples, 0.02%)</title><rect x="46.3069%" y="965" width="0.0239%" height="15" fill="rgb(206,174,23)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.02%)</title><rect x="46.3069%" y="949" width="0.0239%" height="15" fill="rgb(211,33,43)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (3 samples, 0.02%)</title><rect x="46.3069%" y="933" width="0.0239%" height="15" fill="rgb(245,58,50)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (3 samples, 0.02%)</title><rect x="46.3069%" y="917" width="0.0239%" height="15" fill="rgb(244,68,36)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (3 samples, 0.02%)</title><rect x="46.3069%" y="901" width="0.0239%" height="15" fill="rgb(232,229,15)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.02%)</title><rect x="46.3069%" y="885" width="0.0239%" height="15" fill="rgb(254,30,23)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="895.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.02%)</title><rect x="46.3069%" y="869" width="0.0239%" height="15" fill="rgb(235,160,14)" fg:x="5818" fg:w="3"/><text x="46.5569%" y="879.50"></text></g><g><title>ant_colony.exe`core::slice::impl$0::get_mut(ref_mut$&lt;slice2$&lt;array$ (226 samples, 1.80%)</title><rect x="46.3308%" y="997" width="1.7988%" height="15" fill="rgb(212,155,44)" fg:x="5821" fg:w="226"/><text x="46.5808%" y="1007.50">a..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::get_mut(unsigned long long, ref_mut$&lt;slice2$&lt;array$ (226 samples, 1.80%)</title><rect x="46.3308%" y="981" width="1.7988%" height="15" fill="rgb(226,2,50)" fg:x="5821" fg:w="226"/><text x="46.5808%" y="991.50">a..</text></g><g><title>ant_colony.exe`core::slice::index::get_mut_noubcheck(ptr_mut$&lt;slice2$&lt;array$ (226 samples, 1.80%)</title><rect x="46.3308%" y="965" width="1.7988%" height="15" fill="rgb(234,177,6)" fg:x="5821" fg:w="226"/><text x="46.5808%" y="975.50">a..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges (3,016 samples, 24.01%)</title><rect x="25.7323%" y="1013" width="24.0051%" height="15" fill="rgb(217,24,9)" fg:x="3233" fg:w="3016"/><text x="25.9823%" y="1023.50">ant_colony.exe`ant_colony::graph::ACO:..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (202 samples, 1.61%)</title><rect x="48.1296%" y="997" width="1.6078%" height="15" fill="rgb(220,13,46)" fg:x="6047" fg:w="202"/><text x="48.3796%" y="1007.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (185 samples, 1.47%)</title><rect x="48.2649%" y="981" width="1.4725%" height="15" fill="rgb(239,221,27)" fg:x="6064" fg:w="185"/><text x="48.5149%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (13 samples, 0.10%)</title><rect x="49.9204%" y="997" width="0.1035%" height="15" fill="rgb(222,198,25)" fg:x="6272" fg:w="13"/><text x="50.1704%" y="1007.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (13 samples, 0.10%)</title><rect x="49.9204%" y="981" width="0.1035%" height="15" fill="rgb(211,99,13)" fg:x="6272" fg:w="13"/><text x="50.1704%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (13 samples, 0.10%)</title><rect x="49.9204%" y="965" width="0.1035%" height="15" fill="rgb(232,111,31)" fg:x="6272" fg:w="13"/><text x="50.1704%" y="975.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (72 samples, 0.57%)</title><rect x="50.0239%" y="997" width="0.5731%" height="15" fill="rgb(245,82,37)" fg:x="6285" fg:w="72"/><text x="50.2739%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (13 samples, 0.10%)</title><rect x="50.4935%" y="981" width="0.1035%" height="15" fill="rgb(227,149,46)" fg:x="6344" fg:w="13"/><text x="50.7435%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (13 samples, 0.10%)</title><rect x="50.4935%" y="965" width="0.1035%" height="15" fill="rgb(218,36,50)" fg:x="6344" fg:w="13"/><text x="50.7435%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (13 samples, 0.10%)</title><rect x="50.4935%" y="949" width="0.1035%" height="15" fill="rgb(226,80,48)" fg:x="6344" fg:w="13"/><text x="50.7435%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.03%)</title><rect x="50.5651%" y="933" width="0.0318%" height="15" fill="rgb(238,224,15)" fg:x="6353" fg:w="4"/><text x="50.8151%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="50.5651%" y="917" width="0.0318%" height="15" fill="rgb(241,136,10)" fg:x="6353" fg:w="4"/><text x="50.8151%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="50.5651%" y="901" width="0.0318%" height="15" fill="rgb(208,32,45)" fg:x="6353" fg:w="4"/><text x="50.8151%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="50.5651%" y="885" width="0.0318%" height="15" fill="rgb(207,135,9)" fg:x="6353" fg:w="4"/><text x="50.8151%" y="895.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (138 samples, 1.10%)</title><rect x="49.7373%" y="1013" width="1.0984%" height="15" fill="rgb(206,86,44)" fg:x="6249" fg:w="138"/><text x="49.9873%" y="1023.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::incr_neighboor_count_unchecked (30 samples, 0.24%)</title><rect x="50.5969%" y="997" width="0.2388%" height="15" fill="rgb(245,177,15)" fg:x="6357" fg:w="30"/><text x="50.8469%" y="1007.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::clear (15 samples, 0.12%)</title><rect x="50.8357%" y="1013" width="0.1194%" height="15" fill="rgb(206,64,50)" fg:x="6387" fg:w="15"/><text x="51.0857%" y="1023.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (10 samples, 0.08%)</title><rect x="50.8755%" y="997" width="0.0796%" height="15" fill="rgb(234,36,40)" fg:x="6392" fg:w="10"/><text x="51.1255%" y="1007.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (10 samples, 0.08%)</title><rect x="50.8755%" y="981" width="0.0796%" height="15" fill="rgb(213,64,8)" fg:x="6392" fg:w="10"/><text x="51.1255%" y="991.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (10 samples, 0.08%)</title><rect x="50.8755%" y="965" width="0.0796%" height="15" fill="rgb(210,75,36)" fg:x="6392" fg:w="10"/><text x="51.1255%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (11 samples, 0.09%)</title><rect x="51.3292%" y="997" width="0.0876%" height="15" fill="rgb(229,88,21)" fg:x="6449" fg:w="11"/><text x="51.5792%" y="1007.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (11 samples, 0.09%)</title><rect x="51.3292%" y="981" width="0.0876%" height="15" fill="rgb(252,204,47)" fg:x="6449" fg:w="11"/><text x="51.5792%" y="991.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (11 samples, 0.09%)</title><rect x="51.3292%" y="965" width="0.0876%" height="15" fill="rgb(208,77,27)" fg:x="6449" fg:w="11"/><text x="51.5792%" y="975.50"></text></g><g><title>`0x7FFAAE7628A4 (9 samples, 0.07%)</title><rect x="51.4884%" y="981" width="0.0716%" height="15" fill="rgb(221,76,26)" fg:x="6469" fg:w="9"/><text x="51.7384%" y="991.50"></text></g><g><title>`0x7FFAAE7628A9 (7 samples, 0.06%)</title><rect x="51.5600%" y="981" width="0.0557%" height="15" fill="rgb(225,139,18)" fg:x="6478" fg:w="7"/><text x="51.8100%" y="991.50"></text></g><g><title>`0x7FFAAE7628AE (2 samples, 0.02%)</title><rect x="51.6157%" y="981" width="0.0159%" height="15" fill="rgb(230,137,11)" fg:x="6485" fg:w="2"/><text x="51.8657%" y="991.50"></text></g><g><title>`0x7FFAAE7628B3 (8 samples, 0.06%)</title><rect x="51.6316%" y="981" width="0.0637%" height="15" fill="rgb(212,28,1)" fg:x="6487" fg:w="8"/><text x="51.8816%" y="991.50"></text></g><g><title>`0x7FFAAE7628BB (5 samples, 0.04%)</title><rect x="51.6953%" y="981" width="0.0398%" height="15" fill="rgb(248,164,17)" fg:x="6495" fg:w="5"/><text x="51.9453%" y="991.50"></text></g><g><title>`0x7FFAAE7628C3 (2 samples, 0.02%)</title><rect x="51.7351%" y="981" width="0.0159%" height="15" fill="rgb(222,171,42)" fg:x="6500" fg:w="2"/><text x="51.9851%" y="991.50"></text></g><g><title>`0x7FFAAE7628CB (2 samples, 0.02%)</title><rect x="51.7510%" y="981" width="0.0159%" height="15" fill="rgb(243,84,45)" fg:x="6502" fg:w="2"/><text x="52.0010%" y="991.50"></text></g><g><title>`0x7FFAAE7628E1 (2 samples, 0.02%)</title><rect x="51.7670%" y="981" width="0.0159%" height="15" fill="rgb(252,49,23)" fg:x="6504" fg:w="2"/><text x="52.0170%" y="991.50"></text></g><g><title>`0x7FFAAE762901 (2 samples, 0.02%)</title><rect x="51.7829%" y="981" width="0.0159%" height="15" fill="rgb(215,19,7)" fg:x="6506" fg:w="2"/><text x="52.0329%" y="991.50"></text></g><g><title>`0x7FFAE2FA4980 (4 samples, 0.03%)</title><rect x="51.7988%" y="917" width="0.0318%" height="15" fill="rgb(238,81,41)" fg:x="6508" fg:w="4"/><text x="52.0488%" y="927.50"></text></g><g><title>`0x7FFAE37753C9 (2 samples, 0.02%)</title><rect x="51.8386%" y="917" width="0.0159%" height="15" fill="rgb(210,199,37)" fg:x="6513" fg:w="2"/><text x="52.0886%" y="927.50"></text></g><g><title>`0x7FFAE37753CE (6 samples, 0.05%)</title><rect x="51.8545%" y="917" width="0.0478%" height="15" fill="rgb(244,192,49)" fg:x="6515" fg:w="6"/><text x="52.1045%" y="927.50"></text></g><g><title>`0x7FFAE37753D0 (3 samples, 0.02%)</title><rect x="51.9023%" y="917" width="0.0239%" height="15" fill="rgb(226,211,11)" fg:x="6521" fg:w="3"/><text x="52.1523%" y="927.50"></text></g><g><title>`0x7FFAE37753E0 (5 samples, 0.04%)</title><rect x="51.9261%" y="917" width="0.0398%" height="15" fill="rgb(236,162,54)" fg:x="6524" fg:w="5"/><text x="52.1761%" y="927.50"></text></g><g><title>`0x7FFAE37753E6 (2 samples, 0.02%)</title><rect x="51.9659%" y="917" width="0.0159%" height="15" fill="rgb(220,229,9)" fg:x="6529" fg:w="2"/><text x="52.2159%" y="927.50"></text></g><g><title>`0x7FFAE37753FD (3 samples, 0.02%)</title><rect x="51.9819%" y="917" width="0.0239%" height="15" fill="rgb(250,87,22)" fg:x="6531" fg:w="3"/><text x="52.2319%" y="927.50"></text></g><g><title>`0x7FFAE3775403 (5 samples, 0.04%)</title><rect x="52.0057%" y="917" width="0.0398%" height="15" fill="rgb(239,43,17)" fg:x="6534" fg:w="5"/><text x="52.2557%" y="927.50"></text></g><g><title>`0x7FFAE3775421 (5 samples, 0.04%)</title><rect x="52.0694%" y="917" width="0.0398%" height="15" fill="rgb(231,177,25)" fg:x="6542" fg:w="5"/><text x="52.3194%" y="927.50"></text></g><g><title>`0x7FFAE377542C (2 samples, 0.02%)</title><rect x="52.1092%" y="917" width="0.0159%" height="15" fill="rgb(219,179,1)" fg:x="6547" fg:w="2"/><text x="52.3592%" y="927.50"></text></g><g><title>`0x7FFAE3775436 (2 samples, 0.02%)</title><rect x="52.1251%" y="917" width="0.0159%" height="15" fill="rgb(238,219,53)" fg:x="6549" fg:w="2"/><text x="52.3751%" y="927.50"></text></g><g><title>`0x7FFAE3775447 (2 samples, 0.02%)</title><rect x="52.1410%" y="917" width="0.0159%" height="15" fill="rgb(232,167,36)" fg:x="6551" fg:w="2"/><text x="52.3910%" y="927.50"></text></g><g><title>`0x7FFAE3775451 (2 samples, 0.02%)</title><rect x="52.1570%" y="917" width="0.0159%" height="15" fill="rgb(244,19,51)" fg:x="6553" fg:w="2"/><text x="52.4070%" y="927.50"></text></g><g><title>`0x7FFAE377545E (2 samples, 0.02%)</title><rect x="52.1729%" y="917" width="0.0159%" height="15" fill="rgb(224,6,22)" fg:x="6555" fg:w="2"/><text x="52.4229%" y="927.50"></text></g><g><title>`0x7FFAE377546E (4 samples, 0.03%)</title><rect x="52.1968%" y="917" width="0.0318%" height="15" fill="rgb(224,145,5)" fg:x="6558" fg:w="4"/><text x="52.4468%" y="927.50"></text></g><g><title>`0x7FFAE3775485 (3 samples, 0.02%)</title><rect x="52.2365%" y="917" width="0.0239%" height="15" fill="rgb(234,130,49)" fg:x="6563" fg:w="3"/><text x="52.4865%" y="927.50"></text></g><g><title>`0x7FFAE377549D (25 samples, 0.20%)</title><rect x="52.2604%" y="917" width="0.1990%" height="15" fill="rgb(254,6,2)" fg:x="6566" fg:w="25"/><text x="52.5104%" y="927.50"></text></g><g><title>`0x7FFAE37754B4 (23 samples, 0.18%)</title><rect x="52.4594%" y="917" width="0.1831%" height="15" fill="rgb(208,96,46)" fg:x="6591" fg:w="23"/><text x="52.7094%" y="927.50"></text></g><g><title>`0x7FFAE37754B8 (29 samples, 0.23%)</title><rect x="52.6425%" y="917" width="0.2308%" height="15" fill="rgb(239,3,39)" fg:x="6614" fg:w="29"/><text x="52.8925%" y="927.50"></text></g><g><title>`0x7FFAE37754C5 (5 samples, 0.04%)</title><rect x="52.8733%" y="917" width="0.0398%" height="15" fill="rgb(233,210,1)" fg:x="6643" fg:w="5"/><text x="53.1233%" y="927.50"></text></g><g><title>`0x7FFAE37754CA (4 samples, 0.03%)</title><rect x="52.9131%" y="917" width="0.0318%" height="15" fill="rgb(244,137,37)" fg:x="6648" fg:w="4"/><text x="53.1631%" y="927.50"></text></g><g><title>`0x7FFAE37754CE (20 samples, 0.16%)</title><rect x="52.9449%" y="917" width="0.1592%" height="15" fill="rgb(240,136,2)" fg:x="6652" fg:w="20"/><text x="53.1949%" y="927.50"></text></g><g><title>`0x7FFAE37754D7 (3 samples, 0.02%)</title><rect x="53.1041%" y="917" width="0.0239%" height="15" fill="rgb(239,18,37)" fg:x="6672" fg:w="3"/><text x="53.3541%" y="927.50"></text></g><g><title>`0x7FFAE37754E0 (7 samples, 0.06%)</title><rect x="53.1280%" y="917" width="0.0557%" height="15" fill="rgb(218,185,22)" fg:x="6675" fg:w="7"/><text x="53.3780%" y="927.50"></text></g><g><title>`0x7FFAE377550F (7 samples, 0.06%)</title><rect x="53.1837%" y="917" width="0.0557%" height="15" fill="rgb(225,218,4)" fg:x="6682" fg:w="7"/><text x="53.4337%" y="927.50"></text></g><g><title>`0x7FFAE377552D (6 samples, 0.05%)</title><rect x="53.2474%" y="917" width="0.0478%" height="15" fill="rgb(230,182,32)" fg:x="6690" fg:w="6"/><text x="53.4974%" y="927.50"></text></g><g><title>`0x7FFAE3775543 (85 samples, 0.68%)</title><rect x="53.2951%" y="917" width="0.6765%" height="15" fill="rgb(242,56,43)" fg:x="6696" fg:w="85"/><text x="53.5451%" y="927.50"></text></g><g><title>`0x7FFAE3775563 (6 samples, 0.05%)</title><rect x="53.9717%" y="917" width="0.0478%" height="15" fill="rgb(233,99,24)" fg:x="6781" fg:w="6"/><text x="54.2217%" y="927.50"></text></g><g><title>`0x7FFAE37755AB (8 samples, 0.06%)</title><rect x="54.0194%" y="917" width="0.0637%" height="15" fill="rgb(234,209,42)" fg:x="6787" fg:w="8"/><text x="54.2694%" y="927.50"></text></g><g><title>`0x7FFAE37755BF (3 samples, 0.02%)</title><rect x="54.0831%" y="917" width="0.0239%" height="15" fill="rgb(227,7,12)" fg:x="6795" fg:w="3"/><text x="54.3331%" y="927.50"></text></g><g><title>`0x7FFAE377564A (4 samples, 0.03%)</title><rect x="54.1070%" y="917" width="0.0318%" height="15" fill="rgb(245,203,43)" fg:x="6798" fg:w="4"/><text x="54.3570%" y="927.50"></text></g><g><title>`0x7FFAE3775656 (2 samples, 0.02%)</title><rect x="54.1388%" y="917" width="0.0159%" height="15" fill="rgb(238,205,33)" fg:x="6802" fg:w="2"/><text x="54.3888%" y="927.50"></text></g><g><title>`0x7FFAE3775659 (18 samples, 0.14%)</title><rect x="54.1547%" y="917" width="0.1433%" height="15" fill="rgb(231,56,7)" fg:x="6804" fg:w="18"/><text x="54.4047%" y="927.50"></text></g><g><title>`0x7FFAE3775748 (12 samples, 0.10%)</title><rect x="54.2980%" y="917" width="0.0955%" height="15" fill="rgb(244,186,29)" fg:x="6822" fg:w="12"/><text x="54.5480%" y="927.50"></text></g><g><title>`0x7FFAE3775752 (9 samples, 0.07%)</title><rect x="54.4015%" y="917" width="0.0716%" height="15" fill="rgb(234,111,31)" fg:x="6835" fg:w="9"/><text x="54.6515%" y="927.50"></text></g><g><title>`0x7FFAE37759F4 (4 samples, 0.03%)</title><rect x="54.4731%" y="917" width="0.0318%" height="15" fill="rgb(241,149,10)" fg:x="6844" fg:w="4"/><text x="54.7231%" y="927.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_dealloc (2 samples, 0.02%)</title><rect x="54.5049%" y="917" width="0.0159%" height="15" fill="rgb(249,206,44)" fg:x="6848" fg:w="2"/><text x="54.7549%" y="927.50"></text></g><g><title>`0x7FFAE36EE690 (2 samples, 0.02%)</title><rect x="80.7864%" y="821" width="0.0159%" height="15" fill="rgb(251,153,30)" fg:x="10150" fg:w="2"/><text x="81.0364%" y="831.50"></text></g><g><title>`0x7FFAE36EE69B (5 samples, 0.04%)</title><rect x="80.8023%" y="821" width="0.0398%" height="15" fill="rgb(239,152,38)" fg:x="10152" fg:w="5"/><text x="81.0523%" y="831.50"></text></g><g><title>`0x7FFAE36EE6B2 (4 samples, 0.03%)</title><rect x="80.8500%" y="821" width="0.0318%" height="15" fill="rgb(249,139,47)" fg:x="10158" fg:w="4"/><text x="81.1000%" y="831.50"></text></g><g><title>`0x7FFAE36EF15D (9 samples, 0.07%)</title><rect x="80.8898%" y="821" width="0.0716%" height="15" fill="rgb(244,64,35)" fg:x="10163" fg:w="9"/><text x="81.1398%" y="831.50"></text></g><g><title>`0x7FFAE36EF1C0 (7 samples, 0.06%)</title><rect x="80.9615%" y="805" width="0.0557%" height="15" fill="rgb(216,46,15)" fg:x="10172" fg:w="7"/><text x="81.2115%" y="815.50"></text></g><g><title>`0x7FFAE36EF1FA (9 samples, 0.07%)</title><rect x="81.0172%" y="805" width="0.0716%" height="15" fill="rgb(250,74,19)" fg:x="10179" fg:w="9"/><text x="81.2672%" y="815.50"></text></g><g><title>`0x7FFAE36EF21F (4 samples, 0.03%)</title><rect x="81.0888%" y="805" width="0.0318%" height="15" fill="rgb(249,42,33)" fg:x="10188" fg:w="4"/><text x="81.3388%" y="815.50"></text></g><g><title>`0x7FFAE36EF24E (7 samples, 0.06%)</title><rect x="81.1207%" y="805" width="0.0557%" height="15" fill="rgb(242,149,17)" fg:x="10192" fg:w="7"/><text x="81.3707%" y="815.50"></text></g><g><title>`0x7FFAE36EF26B (4 samples, 0.03%)</title><rect x="81.1764%" y="805" width="0.0318%" height="15" fill="rgb(244,29,21)" fg:x="10199" fg:w="4"/><text x="81.4264%" y="815.50"></text></g><g><title>`0x7FFAE36EF29B (3 samples, 0.02%)</title><rect x="81.2082%" y="805" width="0.0239%" height="15" fill="rgb(220,130,37)" fg:x="10203" fg:w="3"/><text x="81.4582%" y="815.50"></text></g><g><title>`0x7FFAE36EF8C0 (4 samples, 0.03%)</title><rect x="81.2321%" y="789" width="0.0318%" height="15" fill="rgb(211,67,2)" fg:x="10206" fg:w="4"/><text x="81.4821%" y="799.50"></text></g><g><title>`0x7FFAE36EF8D5 (3 samples, 0.02%)</title><rect x="81.2639%" y="789" width="0.0239%" height="15" fill="rgb(235,68,52)" fg:x="10210" fg:w="3"/><text x="81.5139%" y="799.50"></text></g><g><title>`0x7FFAE36EF8F5 (8 samples, 0.06%)</title><rect x="81.2878%" y="789" width="0.0637%" height="15" fill="rgb(246,142,3)" fg:x="10213" fg:w="8"/><text x="81.5378%" y="799.50"></text></g><g><title>`0x7FFAE36EF91C (6 samples, 0.05%)</title><rect x="81.3515%" y="789" width="0.0478%" height="15" fill="rgb(241,25,7)" fg:x="10221" fg:w="6"/><text x="81.6015%" y="799.50"></text></g><g><title>`0x7FFAE36EF9AB (5 samples, 0.04%)</title><rect x="81.4072%" y="789" width="0.0398%" height="15" fill="rgb(242,119,39)" fg:x="10228" fg:w="5"/><text x="81.6572%" y="799.50"></text></g><g><title>`0x7FFAE36EF9D6 (4 samples, 0.03%)</title><rect x="81.4550%" y="789" width="0.0318%" height="15" fill="rgb(241,98,45)" fg:x="10234" fg:w="4"/><text x="81.7050%" y="799.50"></text></g><g><title>`0x7FFAE36EFA31 (10 samples, 0.08%)</title><rect x="81.5027%" y="789" width="0.0796%" height="15" fill="rgb(254,28,30)" fg:x="10240" fg:w="10"/><text x="81.7527%" y="799.50"></text></g><g><title>`0x7FFAE36EFA5B (5 samples, 0.04%)</title><rect x="81.5982%" y="789" width="0.0398%" height="15" fill="rgb(241,142,54)" fg:x="10252" fg:w="5"/><text x="81.8482%" y="799.50"></text></g><g><title>`0x7FFAE36EFA8D (5 samples, 0.04%)</title><rect x="81.6539%" y="789" width="0.0398%" height="15" fill="rgb(222,85,15)" fg:x="10259" fg:w="5"/><text x="81.9039%" y="799.50"></text></g><g><title>`0x7FFAE36EFACE (6 samples, 0.05%)</title><rect x="81.6937%" y="789" width="0.0478%" height="15" fill="rgb(210,85,47)" fg:x="10264" fg:w="6"/><text x="81.9437%" y="799.50"></text></g><g><title>`0x7FFAE36EFB00 (3 samples, 0.02%)</title><rect x="81.7415%" y="789" width="0.0239%" height="15" fill="rgb(224,206,25)" fg:x="10270" fg:w="3"/><text x="81.9915%" y="799.50"></text></g><g><title>`0x7FFAE36EFB2A (6 samples, 0.05%)</title><rect x="81.7654%" y="789" width="0.0478%" height="15" fill="rgb(243,201,19)" fg:x="10273" fg:w="6"/><text x="82.0154%" y="799.50"></text></g><g><title>`0x7FFAE36EFB4E (4 samples, 0.03%)</title><rect x="81.8131%" y="789" width="0.0318%" height="15" fill="rgb(236,59,4)" fg:x="10279" fg:w="4"/><text x="82.0631%" y="799.50"></text></g><g><title>`0x7FFAE36EFB60 (5 samples, 0.04%)</title><rect x="81.8529%" y="789" width="0.0398%" height="15" fill="rgb(254,179,45)" fg:x="10284" fg:w="5"/><text x="82.1029%" y="799.50"></text></g><g><title>`0x7FFAE36EFB74 (2 samples, 0.02%)</title><rect x="81.8927%" y="789" width="0.0159%" height="15" fill="rgb(226,14,10)" fg:x="10289" fg:w="2"/><text x="82.1427%" y="799.50"></text></g><g><title>`0x7FFAE36EFB77 (5 samples, 0.04%)</title><rect x="81.9086%" y="789" width="0.0398%" height="15" fill="rgb(244,27,41)" fg:x="10291" fg:w="5"/><text x="82.1586%" y="799.50"></text></g><g><title>`0x7FFAE36EFB80 (3 samples, 0.02%)</title><rect x="81.9484%" y="789" width="0.0239%" height="15" fill="rgb(235,35,32)" fg:x="10296" fg:w="3"/><text x="82.1984%" y="799.50"></text></g><g><title>`0x7FFAE36EFB92 (7 samples, 0.06%)</title><rect x="81.9723%" y="789" width="0.0557%" height="15" fill="rgb(218,68,31)" fg:x="10299" fg:w="7"/><text x="82.2223%" y="799.50"></text></g><g><title>`0x7FFAE36EFBAA (5 samples, 0.04%)</title><rect x="82.0439%" y="789" width="0.0398%" height="15" fill="rgb(207,120,37)" fg:x="10308" fg:w="5"/><text x="82.2939%" y="799.50"></text></g><g><title>`0x7FFAE36EFBB6 (2 samples, 0.02%)</title><rect x="82.0837%" y="789" width="0.0159%" height="15" fill="rgb(227,98,0)" fg:x="10313" fg:w="2"/><text x="82.3337%" y="799.50"></text></g><g><title>`0x7FFAE36EFBC0 (23 samples, 0.18%)</title><rect x="82.1076%" y="789" width="0.1831%" height="15" fill="rgb(207,7,3)" fg:x="10316" fg:w="23"/><text x="82.3576%" y="799.50"></text></g><g><title>`0x7FFAE36EFFF4 (3 samples, 0.02%)</title><rect x="82.2907%" y="789" width="0.0239%" height="15" fill="rgb(206,98,19)" fg:x="10339" fg:w="3"/><text x="82.5407%" y="799.50"></text></g><g><title>`0x7FFAE36EFFFF (124 samples, 0.99%)</title><rect x="82.3145%" y="789" width="0.9869%" height="15" fill="rgb(217,5,26)" fg:x="10342" fg:w="124"/><text x="82.5645%" y="799.50"></text></g><g><title>`0x7FFAE36F001E (4 samples, 0.03%)</title><rect x="83.3095%" y="789" width="0.0318%" height="15" fill="rgb(235,190,38)" fg:x="10467" fg:w="4"/><text x="83.5595%" y="799.50"></text></g><g><title>`0x7FFAE3848066 (5 samples, 0.04%)</title><rect x="83.3572%" y="773" width="0.0398%" height="15" fill="rgb(247,86,24)" fg:x="10473" fg:w="5"/><text x="83.6072%" y="783.50"></text></g><g><title>`0x7FFAE384810B (3 samples, 0.02%)</title><rect x="83.3970%" y="773" width="0.0239%" height="15" fill="rgb(205,101,16)" fg:x="10478" fg:w="3"/><text x="83.6470%" y="783.50"></text></g><g><title>`0x7FFAE3848111 (6 samples, 0.05%)</title><rect x="83.4209%" y="773" width="0.0478%" height="15" fill="rgb(246,168,33)" fg:x="10481" fg:w="6"/><text x="83.6709%" y="783.50"></text></g><g><title>`0x7FFAE384811A (5 samples, 0.04%)</title><rect x="83.4686%" y="773" width="0.0398%" height="15" fill="rgb(231,114,1)" fg:x="10487" fg:w="5"/><text x="83.7186%" y="783.50"></text></g><g><title>`0x7FFAE36F002D (31 samples, 0.25%)</title><rect x="83.3493%" y="789" width="0.2467%" height="15" fill="rgb(207,184,53)" fg:x="10472" fg:w="31"/><text x="83.5993%" y="799.50"></text></g><g><title>`0x7FFAE3852030 (11 samples, 0.09%)</title><rect x="83.5084%" y="773" width="0.0876%" height="15" fill="rgb(224,95,51)" fg:x="10492" fg:w="11"/><text x="83.7584%" y="783.50"></text></g><g><title>`0x7FFAE36F003D (6 samples, 0.05%)</title><rect x="83.5960%" y="789" width="0.0478%" height="15" fill="rgb(212,188,45)" fg:x="10503" fg:w="6"/><text x="83.8460%" y="799.50"></text></g><g><title>`0x7FFAE36F0060 (3 samples, 0.02%)</title><rect x="83.6437%" y="789" width="0.0239%" height="15" fill="rgb(223,154,38)" fg:x="10509" fg:w="3"/><text x="83.8937%" y="799.50"></text></g><g><title>`0x7FFAE36EF2A4 (310 samples, 2.47%)</title><rect x="81.2321%" y="805" width="2.4674%" height="15" fill="rgb(251,22,52)" fg:x="10206" fg:w="310"/><text x="81.4821%" y="815.50">`0..</text></g><g><title>`0x7FFAE36F0104 (2 samples, 0.02%)</title><rect x="83.6835%" y="789" width="0.0159%" height="15" fill="rgb(229,209,22)" fg:x="10514" fg:w="2"/><text x="83.9335%" y="799.50"></text></g><g><title>`0x7FFAE36EF356 (2 samples, 0.02%)</title><rect x="83.7074%" y="805" width="0.0159%" height="15" fill="rgb(234,138,34)" fg:x="10517" fg:w="2"/><text x="83.9574%" y="815.50"></text></g><g><title>`0x7FFAE36EF35B (4 samples, 0.03%)</title><rect x="83.7233%" y="805" width="0.0318%" height="15" fill="rgb(212,95,11)" fg:x="10519" fg:w="4"/><text x="83.9733%" y="815.50"></text></g><g><title>`0x7FFAE36EF164 (355 samples, 2.83%)</title><rect x="80.9615%" y="821" width="2.8255%" height="15" fill="rgb(240,179,47)" fg:x="10172" fg:w="355"/><text x="81.2115%" y="831.50">`0..</text></g><g><title>`0x7FFAE36EF38C (3 samples, 0.02%)</title><rect x="83.7631%" y="805" width="0.0239%" height="15" fill="rgb(240,163,11)" fg:x="10524" fg:w="3"/><text x="84.0131%" y="815.50"></text></g><g><title>`0x7FFAE36EF167 (3 samples, 0.02%)</title><rect x="83.7870%" y="821" width="0.0239%" height="15" fill="rgb(236,37,12)" fg:x="10527" fg:w="3"/><text x="84.0370%" y="831.50"></text></g><g><title>`0x7FFAE36EF181 (2 samples, 0.02%)</title><rect x="83.8348%" y="821" width="0.0159%" height="15" fill="rgb(232,164,16)" fg:x="10533" fg:w="2"/><text x="84.0848%" y="831.50"></text></g><g><title>`0x7FFAE36EF183 (5 samples, 0.04%)</title><rect x="83.8507%" y="821" width="0.0398%" height="15" fill="rgb(244,205,15)" fg:x="10535" fg:w="5"/><text x="84.1007%" y="831.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_alloc_zeroed (4 samples, 0.03%)</title><rect x="83.8905%" y="821" width="0.0318%" height="15" fill="rgb(223,117,47)" fg:x="10540" fg:w="4"/><text x="84.1405%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (6 samples, 0.05%)</title><rect x="83.9223%" y="821" width="0.0478%" height="15" fill="rgb(244,107,35)" fg:x="10544" fg:w="6"/><text x="84.1723%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (6 samples, 0.05%)</title><rect x="83.9223%" y="805" width="0.0478%" height="15" fill="rgb(205,140,8)" fg:x="10544" fg:w="6"/><text x="84.1723%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (6 samples, 0.05%)</title><rect x="83.9223%" y="789" width="0.0478%" height="15" fill="rgb(228,84,46)" fg:x="10544" fg:w="6"/><text x="84.1723%" y="799.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_alloc_zeroed (5 samples, 0.04%)</title><rect x="83.9780%" y="821" width="0.0398%" height="15" fill="rgb(254,188,9)" fg:x="10551" fg:w="5"/><text x="84.2280%" y="831.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::alloc_zeroed (5 samples, 0.04%)</title><rect x="83.9780%" y="805" width="0.0398%" height="15" fill="rgb(206,112,54)" fg:x="10551" fg:w="5"/><text x="84.2280%" y="815.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::allocate (5 samples, 0.04%)</title><rect x="83.9780%" y="789" width="0.0398%" height="15" fill="rgb(216,84,49)" fg:x="10551" fg:w="5"/><text x="84.2280%" y="799.50"></text></g><g><title>`0x7FFAE2FA3F90 (6 samples, 0.05%)</title><rect x="84.1213%" y="789" width="0.0478%" height="15" fill="rgb(214,194,35)" fg:x="10569" fg:w="6"/><text x="84.3713%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (426 samples, 3.39%)</title><rect x="80.7864%" y="901" width="3.3906%" height="15" fill="rgb(249,28,3)" fg:x="10150" fg:w="426"/><text x="81.0364%" y="911.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (426 samples, 3.39%)</title><rect x="80.7864%" y="885" width="3.3906%" height="15" fill="rgb(222,56,52)" fg:x="10150" fg:w="426"/><text x="81.0364%" y="895.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (426 samples, 3.39%)</title><rect x="80.7864%" y="869" width="3.3906%" height="15" fill="rgb(245,217,50)" fg:x="10150" fg:w="426"/><text x="81.0364%" y="879.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (426 samples, 3.39%)</title><rect x="80.7864%" y="853" width="3.3906%" height="15" fill="rgb(213,201,24)" fg:x="10150" fg:w="426"/><text x="81.0364%" y="863.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (426 samples, 3.39%)</title><rect x="80.7864%" y="837" width="3.3906%" height="15" fill="rgb(248,116,28)" fg:x="10150" fg:w="426"/><text x="81.0364%" y="847.50">ant..</text></g><g><title>ant_colony.exe`std::sys::alloc::windows::process_heap_alloc (20 samples, 0.16%)</title><rect x="84.0178%" y="821" width="0.1592%" height="15" fill="rgb(219,72,43)" fg:x="10556" fg:w="20"/><text x="84.2678%" y="831.50"></text></g><g><title>ant_colony.exe`core::intrinsics::unlikely (10 samples, 0.08%)</title><rect x="84.0974%" y="805" width="0.0796%" height="15" fill="rgb(209,138,14)" fg:x="10566" fg:w="10"/><text x="84.3474%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (627 samples, 4.99%)</title><rect x="84.1770%" y="901" width="4.9904%" height="15" fill="rgb(222,18,33)" fg:x="10576" fg:w="627"/><text x="84.4270%" y="911.50">ant_co..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (627 samples, 4.99%)</title><rect x="84.1770%" y="885" width="4.9904%" height="15" fill="rgb(213,199,7)" fg:x="10576" fg:w="627"/><text x="84.4270%" y="895.50">ant_co..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (627 samples, 4.99%)</title><rect x="84.1770%" y="869" width="4.9904%" height="15" fill="rgb(250,110,10)" fg:x="10576" fg:w="627"/><text x="84.4270%" y="879.50">ant_co..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (146 samples, 1.16%)</title><rect x="89.1675%" y="901" width="1.1621%" height="15" fill="rgb(248,123,6)" fg:x="11203" fg:w="146"/><text x="89.4175%" y="911.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (146 samples, 1.16%)</title><rect x="89.1675%" y="885" width="1.1621%" height="15" fill="rgb(206,91,31)" fg:x="11203" fg:w="146"/><text x="89.4175%" y="895.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (146 samples, 1.16%)</title><rect x="89.1675%" y="869" width="1.1621%" height="15" fill="rgb(211,154,13)" fg:x="11203" fg:w="146"/><text x="89.4175%" y="879.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (53 samples, 0.42%)</title><rect x="92.0646%" y="885" width="0.4218%" height="15" fill="rgb(225,148,7)" fg:x="11567" fg:w="53"/><text x="92.3146%" y="895.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (53 samples, 0.42%)</title><rect x="92.0646%" y="869" width="0.4218%" height="15" fill="rgb(220,160,43)" fg:x="11567" fg:w="53"/><text x="92.3146%" y="879.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (53 samples, 0.42%)</title><rect x="92.0646%" y="853" width="0.4218%" height="15" fill="rgb(213,52,39)" fg:x="11567" fg:w="53"/><text x="92.3146%" y="863.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (347 samples, 2.76%)</title><rect x="90.3295%" y="901" width="2.7619%" height="15" fill="rgb(243,137,7)" fg:x="11349" fg:w="347"/><text x="90.5795%" y="911.50">an..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (76 samples, 0.60%)</title><rect x="92.4865%" y="885" width="0.6049%" height="15" fill="rgb(230,79,13)" fg:x="11620" fg:w="76"/><text x="92.7365%" y="895.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (31 samples, 0.25%)</title><rect x="92.8446%" y="869" width="0.2467%" height="15" fill="rgb(247,105,23)" fg:x="11665" fg:w="31"/><text x="93.0946%" y="879.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (31 samples, 0.25%)</title><rect x="92.8446%" y="853" width="0.2467%" height="15" fill="rgb(223,179,41)" fg:x="11665" fg:w="31"/><text x="93.0946%" y="863.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (31 samples, 0.25%)</title><rect x="92.8446%" y="837" width="0.2467%" height="15" fill="rgb(218,9,34)" fg:x="11665" fg:w="31"/><text x="93.0946%" y="847.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (37 samples, 0.29%)</title><rect x="93.0914%" y="901" width="0.2945%" height="15" fill="rgb(222,106,8)" fg:x="11696" fg:w="37"/><text x="93.3414%" y="911.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (37 samples, 0.29%)</title><rect x="93.0914%" y="885" width="0.2945%" height="15" fill="rgb(211,220,0)" fg:x="11696" fg:w="37"/><text x="93.3414%" y="895.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (37 samples, 0.29%)</title><rect x="93.0914%" y="869" width="0.2945%" height="15" fill="rgb(229,52,16)" fg:x="11696" fg:w="37"/><text x="93.3414%" y="879.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (37 samples, 0.29%)</title><rect x="93.0914%" y="853" width="0.2945%" height="15" fill="rgb(212,155,18)" fg:x="11696" fg:w="37"/><text x="93.3414%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (37 samples, 0.29%)</title><rect x="93.0914%" y="837" width="0.2945%" height="15" fill="rgb(242,21,14)" fg:x="11696" fg:w="37"/><text x="93.3414%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (37 samples, 0.29%)</title><rect x="93.0914%" y="821" width="0.2945%" height="15" fill="rgb(222,19,48)" fg:x="11696" fg:w="37"/><text x="93.3414%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (5,365 samples, 42.70%)</title><rect x="54.5209%" y="917" width="42.7014%" height="15" fill="rgb(232,45,27)" fg:x="6850" fg:w="5365"/><text x="54.7709%" y="927.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (482 samples, 3.84%)</title><rect x="93.3859%" y="901" width="3.8364%" height="15" fill="rgb(249,103,42)" fg:x="11733" fg:w="482"/><text x="93.6359%" y="911.50">ant_..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (482 samples, 3.84%)</title><rect x="93.3859%" y="885" width="3.8364%" height="15" fill="rgb(246,81,33)" fg:x="11733" fg:w="482"/><text x="93.6359%" y="895.50">ant_..</text></g><g><title>`0x7FFAE2FA3F90 (4 samples, 0.03%)</title><rect x="97.3655%" y="885" width="0.0318%" height="15" fill="rgb(252,33,42)" fg:x="12233" fg:w="4"/><text x="97.6155%" y="895.50"></text></g><g><title>`0x7FFAE2FA3F99 (5 samples, 0.04%)</title><rect x="97.3973%" y="885" width="0.0398%" height="15" fill="rgb(209,212,41)" fg:x="12237" fg:w="5"/><text x="97.6473%" y="895.50"></text></g><g><title>`0x7FFAE2FA3F9D (3 samples, 0.02%)</title><rect x="97.4371%" y="885" width="0.0239%" height="15" fill="rgb(207,154,6)" fg:x="12242" fg:w="3"/><text x="97.6871%" y="895.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (5,787 samples, 46.06%)</title><rect x="51.4167%" y="997" width="46.0602%" height="15" fill="rgb(223,64,47)" fg:x="6460" fg:w="5787"/><text x="51.6667%" y="1007.50">ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (5,739 samples, 45.68%)</title><rect x="51.7988%" y="981" width="45.6781%" height="15" fill="rgb(211,161,38)" fg:x="6508" fg:w="5739"/><text x="52.0488%" y="991.50">ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (5,739 samples, 45.68%)</title><rect x="51.7988%" y="965" width="45.6781%" height="15" fill="rgb(219,138,40)" fg:x="6508" fg:w="5739"/><text x="52.0488%" y="975.50">ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (5,739 samples, 45.68%)</title><rect x="51.7988%" y="949" width="45.6781%" height="15" fill="rgb(241,228,46)" fg:x="6508" fg:w="5739"/><text x="52.0488%" y="959.50">ant_colony.exe`core::iter::range::impl$43::forward_unchecked</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (5,739 samples, 45.68%)</title><rect x="51.7988%" y="933" width="45.6781%" height="15" fill="rgb(223,209,38)" fg:x="6508" fg:w="5739"/><text x="52.0488%" y="943.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (32 samples, 0.25%)</title><rect x="97.2222%" y="917" width="0.2547%" height="15" fill="rgb(236,164,45)" fg:x="12215" fg:w="32"/><text x="97.4722%" y="927.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (19 samples, 0.15%)</title><rect x="97.3257%" y="901" width="0.1512%" height="15" fill="rgb(231,15,5)" fg:x="12228" fg:w="19"/><text x="97.5757%" y="911.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::get_process_heap (2 samples, 0.02%)</title><rect x="97.4610%" y="885" width="0.0159%" height="15" fill="rgb(252,35,15)" fg:x="12245" fg:w="2"/><text x="97.7110%" y="895.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (5,856 samples, 46.61%)</title><rect x="50.9551%" y="1013" width="46.6094%" height="15" fill="rgb(248,181,18)" fg:x="6402" fg:w="5856"/><text x="51.2051%" y="1023.50">ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (11 samples, 0.09%)</title><rect x="97.4769%" y="997" width="0.0876%" height="15" fill="rgb(233,39,42)" fg:x="12247" fg:w="11"/><text x="97.7269%" y="1007.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (11 samples, 0.09%)</title><rect x="97.4769%" y="981" width="0.0876%" height="15" fill="rgb(238,110,33)" fg:x="12247" fg:w="11"/><text x="97.7269%" y="991.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (3 samples, 0.02%)</title><rect x="97.5645%" y="1013" width="0.0239%" height="15" fill="rgb(233,195,10)" fg:x="12258" fg:w="3"/><text x="97.8145%" y="1023.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (2 samples, 0.02%)</title><rect x="97.5724%" y="997" width="0.0159%" height="15" fill="rgb(254,105,3)" fg:x="12259" fg:w="2"/><text x="97.8224%" y="1007.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (2 samples, 0.02%)</title><rect x="97.5724%" y="981" width="0.0159%" height="15" fill="rgb(221,225,9)" fg:x="12259" fg:w="2"/><text x="97.8224%" y="991.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (2 samples, 0.02%)</title><rect x="97.5724%" y="965" width="0.0159%" height="15" fill="rgb(224,227,45)" fg:x="12259" fg:w="2"/><text x="97.8224%" y="975.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (2 samples, 0.02%)</title><rect x="97.5724%" y="949" width="0.0159%" height="15" fill="rgb(229,198,43)" fg:x="12259" fg:w="2"/><text x="97.8224%" y="959.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (2 samples, 0.02%)</title><rect x="97.5724%" y="933" width="0.0159%" height="15" fill="rgb(206,209,35)" fg:x="12259" fg:w="2"/><text x="97.8224%" y="943.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_edges (2 samples, 0.02%)</title><rect x="97.5883%" y="1013" width="0.0159%" height="15" fill="rgb(245,195,53)" fg:x="12261" fg:w="2"/><text x="97.8383%" y="1023.50"></text></g><g><title>ant_colony.exe`core::f64::impl$0::clamp (2 samples, 0.02%)</title><rect x="97.6122%" y="1013" width="0.0159%" height="15" fill="rgb(240,92,26)" fg:x="12264" fg:w="2"/><text x="97.8622%" y="1023.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec&lt;array$ (11 samples, 0.09%)</title><rect x="97.6441%" y="1013" width="0.0876%" height="15" fill="rgb(207,40,23)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="1023.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::vec::Vec&lt;array$ (11 samples, 0.09%)</title><rect x="97.6441%" y="997" width="0.0876%" height="15" fill="rgb(223,111,35)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="1007.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;alloc::vec::Vec&lt;array$ (11 samples, 0.09%)</title><rect x="97.6441%" y="981" width="0.0876%" height="15" fill="rgb(229,147,28)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="991.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;array$ (11 samples, 0.09%)</title><rect x="97.6441%" y="965" width="0.0876%" height="15" fill="rgb(211,29,28)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="975.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;array$ (11 samples, 0.09%)</title><rect x="97.6441%" y="949" width="0.0876%" height="15" fill="rgb(228,72,33)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;array$ (11 samples, 0.09%)</title><rect x="97.6441%" y="933" width="0.0876%" height="15" fill="rgb(205,214,31)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (11 samples, 0.09%)</title><rect x="97.6441%" y="917" width="0.0876%" height="15" fill="rgb(224,111,15)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="927.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (11 samples, 0.09%)</title><rect x="97.6441%" y="901" width="0.0876%" height="15" fill="rgb(253,21,26)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (11 samples, 0.09%)</title><rect x="97.6441%" y="885" width="0.0876%" height="15" fill="rgb(245,139,43)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="895.50"></text></g><g><title>`0x7FFAE37759E0 (11 samples, 0.09%)</title><rect x="97.6441%" y="869" width="0.0876%" height="15" fill="rgb(252,170,7)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="879.50"></text></g><g><title>`0x7FFAE36F5578 (11 samples, 0.09%)</title><rect x="97.6441%" y="853" width="0.0876%" height="15" fill="rgb(231,118,14)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="863.50"></text></g><g><title>`0x7FFAE376802F (11 samples, 0.09%)</title><rect x="97.6441%" y="837" width="0.0876%" height="15" fill="rgb(238,83,0)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="847.50"></text></g><g><title>`0x7FFAE3841EC4 (11 samples, 0.09%)</title><rect x="97.6441%" y="821" width="0.0876%" height="15" fill="rgb(221,39,39)" fg:x="12268" fg:w="11"/><text x="97.8941%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (2 samples, 0.02%)</title><rect x="97.7316%" y="1013" width="0.0159%" height="15" fill="rgb(222,119,46)" fg:x="12279" fg:w="2"/><text x="97.9816%" y="1023.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (2 samples, 0.02%)</title><rect x="97.7316%" y="997" width="0.0159%" height="15" fill="rgb(222,165,49)" fg:x="12279" fg:w="2"/><text x="97.9816%" y="1007.50"></text></g><g><title>ant_colony.exe`pow (5 samples, 0.04%)</title><rect x="97.7475%" y="1013" width="0.0398%" height="15" fill="rgb(219,113,52)" fg:x="12281" fg:w="5"/><text x="97.9975%" y="1023.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::launch (12,161 samples, 96.79%)</title><rect x="1.1223%" y="1029" width="96.7924%" height="15" fill="rgb(214,7,15)" fg:x="141" fg:w="12161"/><text x="1.3723%" y="1039.50">ant_colony.exe`ant_colony::graph::ACO::launch</text></g><g><title>ant_colony.exe`rand_xoshiro::xoshiro256plusplus::impl$2::next_u64 (16 samples, 0.13%)</title><rect x="97.7873%" y="1013" width="0.1273%" height="15" fill="rgb(235,32,4)" fg:x="12286" fg:w="16"/><text x="98.0373%" y="1023.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::wrapping_add (2 samples, 0.02%)</title><rect x="97.8988%" y="997" width="0.0159%" height="15" fill="rgb(238,90,54)" fg:x="12300" fg:w="2"/><text x="98.1488%" y="1007.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::new(ant_colony::graph::Graph, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par (4 samples, 0.03%)</title><rect x="97.9147%" y="1029" width="0.0318%" height="15" fill="rgb(213,208,19)" fg:x="12302" fg:w="4"/><text x="98.1647%" y="1039.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_edge_betweeness_centrality (3 samples, 0.02%)</title><rect x="97.9226%" y="1013" width="0.0239%" height="15" fill="rgb(233,156,4)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="1023.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (3 samples, 0.02%)</title><rect x="97.9226%" y="997" width="0.0239%" height="15" fill="rgb(207,194,5)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="1007.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (3 samples, 0.02%)</title><rect x="97.9226%" y="981" width="0.0239%" height="15" fill="rgb(206,111,30)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_zeroed_in (3 samples, 0.02%)</title><rect x="97.9226%" y="965" width="0.0239%" height="15" fill="rgb(243,70,54)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (3 samples, 0.02%)</title><rect x="97.9226%" y="949" width="0.0239%" height="15" fill="rgb(242,28,8)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.02%)</title><rect x="97.9226%" y="933" width="0.0239%" height="15" fill="rgb(219,106,18)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::layout_array (3 samples, 0.02%)</title><rect x="97.9226%" y="917" width="0.0239%" height="15" fill="rgb(244,222,10)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="927.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat (3 samples, 0.02%)</title><rect x="97.9226%" y="901" width="0.0239%" height="15" fill="rgb(236,179,52)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="911.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat_packed (3 samples, 0.02%)</title><rect x="97.9226%" y="885" width="0.0239%" height="15" fill="rgb(213,23,39)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="895.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::checked_mul (3 samples, 0.02%)</title><rect x="97.9226%" y="869" width="0.0239%" height="15" fill="rgb(238,48,10)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="879.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::overflowing_mul (3 samples, 0.02%)</title><rect x="97.9226%" y="853" width="0.0239%" height="15" fill="rgb(251,196,23)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="863.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="97.9226%" y="837" width="0.0239%" height="15" fill="rgb(250,152,24)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (3 samples, 0.02%)</title><rect x="97.9226%" y="821" width="0.0239%" height="15" fill="rgb(209,150,17)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_mut_slice (3 samples, 0.02%)</title><rect x="97.9226%" y="805" width="0.0239%" height="15" fill="rgb(234,202,34)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.02%)</title><rect x="97.9226%" y="789" width="0.0239%" height="15" fill="rgb(253,148,53)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::ptr (3 samples, 0.02%)</title><rect x="97.9226%" y="773" width="0.0239%" height="15" fill="rgb(218,129,16)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.02%)</title><rect x="97.9226%" y="757" width="0.0239%" height="15" fill="rgb(216,85,19)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.02%)</title><rect x="97.9226%" y="741" width="0.0239%" height="15" fill="rgb(235,228,7)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="751.50"></text></g><g><title>ant_colony.exe`rayon::vec::impl$4::with_producer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(rayon::vec::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="97.9226%" y="725" width="0.0239%" height="15" fill="rgb(245,175,0)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="735.50"></text></g><g><title>ant_colony.exe`rayon::vec::impl$7::with_producer(rayon::vec::Drain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="97.9226%" y="709" width="0.0239%" height="15" fill="rgb(208,168,36)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="719.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge::impl$0::callback(rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex (3 samples, 0.02%)</title><rect x="97.9226%" y="693" width="0.0239%" height="15" fill="rgb(246,171,24)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="703.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer(unsigned long long, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="97.9226%" y="677" width="0.0239%" height="15" fill="rgb(215,142,24)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="687.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::LengthSplitter::new (3 samples, 0.02%)</title><rect x="97.9226%" y="661" width="0.0239%" height="15" fill="rgb(250,187,7)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="671.50"></text></g><g><title>ant_colony.exe`rayon_core::current_num_threads (3 samples, 0.02%)</title><rect x="97.9226%" y="645" width="0.0239%" height="15" fill="rgb(228,66,33)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="655.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::Registry::current_num_threads (3 samples, 0.02%)</title><rect x="97.9226%" y="629" width="0.0239%" height="15" fill="rgb(234,215,21)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (3 samples, 0.02%)</title><rect x="97.9226%" y="613" width="0.0239%" height="15" fill="rgb(222,191,20)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (3 samples, 0.02%)</title><rect x="97.9226%" y="597" width="0.0239%" height="15" fill="rgb(245,79,54)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="607.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (3 samples, 0.02%)</title><rect x="97.9226%" y="581" width="0.0239%" height="15" fill="rgb(240,10,37)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="591.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::global_registry (3 samples, 0.02%)</title><rect x="97.9226%" y="565" width="0.0239%" height="15" fill="rgb(214,192,32)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="575.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::set_global_registry(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.02%)</title><rect x="97.9226%" y="549" width="0.0239%" height="15" fill="rgb(209,36,54)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="559.50"></text></g><g><title>ant_colony.exe`std::sync::poison::once::Once::call_once(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.02%)</title><rect x="97.9226%" y="533" width="0.0239%" height="15" fill="rgb(220,10,11)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="543.50"></text></g><g><title>ant_colony.exe`std::sys::sync::once::futex::Once::call (3 samples, 0.02%)</title><rect x="97.9226%" y="517" width="0.0239%" height="15" fill="rgb(221,106,17)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="527.50"></text></g><g><title>ant_colony.exe`core::cell::Cell::get (3 samples, 0.02%)</title><rect x="97.9226%" y="501" width="0.0239%" height="15" fill="rgb(251,142,44)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="511.50"></text></g><g><title>ant_colony.exe`std::sync::poison::once::impl$2::call_once::closure$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*)()&gt; &gt;(std::sync::poison::once::impl$2::call_once::closure_env$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.02%)</title><rect x="97.9226%" y="485" width="0.0239%" height="15" fill="rgb(238,13,15)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="495.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::set_global_registry::closure$0(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.02%)</title><rect x="97.9226%" y="469" width="0.0239%" height="15" fill="rgb(208,107,27)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="479.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.02%)</title><rect x="97.9226%" y="453" width="0.0239%" height="15" fill="rgb(205,136,37)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::default_global_registry (3 samples, 0.02%)</title><rect x="97.9226%" y="437" width="0.0239%" height="15" fill="rgb(250,205,27)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="447.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::Registry::new&lt;rayon_core::registry::DefaultSpawn&gt;(rayon_core::ThreadPoolBuilder (3 samples, 0.02%)</title><rect x="97.9226%" y="421" width="0.0239%" height="15" fill="rgb(210,80,43)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="431.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::impl$2::spawn (3 samples, 0.02%)</title><rect x="97.9226%" y="405" width="0.0239%" height="15" fill="rgb(247,160,36)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="415.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn (3 samples, 0.02%)</title><rect x="97.9226%" y="389" width="0.0239%" height="15" fill="rgb(234,13,49)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="399.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn_unchecked&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (3 samples, 0.02%)</title><rect x="97.9226%" y="373" width="0.0239%" height="15" fill="rgb(234,122,0)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="383.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, rayon_core::registry::impl$2::spawn::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (3 samples, 0.02%)</title><rect x="97.9226%" y="357" width="0.0239%" height="15" fill="rgb(207,146,38)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="367.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::thread::Thread::new (3 samples, 0.02%)</title><rect x="97.9226%" y="341" width="0.0239%" height="15" fill="rgb(207,177,25)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="351.50"></text></g><g><title>`0x7FFAE2FB313D (3 samples, 0.02%)</title><rect x="97.9226%" y="325" width="0.0239%" height="15" fill="rgb(211,178,42)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="335.50"></text></g><g><title>`0x7FFAE0A40AA9 (3 samples, 0.02%)</title><rect x="97.9226%" y="309" width="0.0239%" height="15" fill="rgb(230,69,54)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="319.50"></text></g><g><title>`0x7FFAE3843414 (3 samples, 0.02%)</title><rect x="97.9226%" y="293" width="0.0239%" height="15" fill="rgb(214,135,41)" fg:x="12303" fg:w="3"/><text x="98.1726%" y="303.50"></text></g><g><title>ant_colony.exe`core::fmt::Formatter::debug_list (2 samples, 0.02%)</title><rect x="97.9704%" y="885" width="0.0159%" height="15" fill="rgb(237,67,25)" fg:x="12309" fg:w="2"/><text x="98.2204%" y="895.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::debug_list_new (2 samples, 0.02%)</title><rect x="97.9704%" y="869" width="0.0159%" height="15" fill="rgb(222,189,50)" fg:x="12309" fg:w="2"/><text x="98.2204%" y="879.50"></text></g><g><title>ant_colony.exe`core::fmt::Formatter::write_str (52 samples, 0.41%)</title><rect x="97.9863%" y="821" width="0.4139%" height="15" fill="rgb(245,148,34)" fg:x="12311" fg:w="52"/><text x="98.2363%" y="831.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::fs::File&gt;(std::io::default_write_fmt::Adapter&lt;std::fs::File&gt;*, ref$ (52 samples, 0.41%)</title><rect x="97.9863%" y="805" width="0.4139%" height="15" fill="rgb(222,29,6)" fg:x="12311" fg:w="52"/><text x="98.2363%" y="815.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (52 samples, 0.41%)</title><rect x="97.9863%" y="789" width="0.4139%" height="15" fill="rgb(221,189,43)" fg:x="12311" fg:w="52"/><text x="98.2363%" y="799.50"></text></g><g><title>ant_colony.exe`std::fs::impl$9::write (51 samples, 0.41%)</title><rect x="97.9943%" y="773" width="0.4059%" height="15" fill="rgb(207,36,27)" fg:x="12312" fg:w="51"/><text x="98.2443%" y="783.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_write (51 samples, 0.41%)</title><rect x="97.9943%" y="757" width="0.4059%" height="15" fill="rgb(217,90,24)" fg:x="12312" fg:w="51"/><text x="98.2443%" y="767.50"></text></g><g><title>`0x7FFAE3841C04 (51 samples, 0.41%)</title><rect x="97.9943%" y="741" width="0.4059%" height="15" fill="rgb(224,66,35)" fg:x="12312" fg:w="51"/><text x="98.2443%" y="751.50"></text></g><g><title>ant_colony.exe`core::fmt::Formatter::write_formatted_parts (152 samples, 1.21%)</title><rect x="98.4082%" y="805" width="1.2098%" height="15" fill="rgb(221,13,50)" fg:x="12364" fg:w="152"/><text x="98.6582%" y="815.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::fs::File&gt;(std::io::default_write_fmt::Adapter&lt;std::fs::File&gt;*, ref$ (152 samples, 1.21%)</title><rect x="98.4082%" y="789" width="1.2098%" height="15" fill="rgb(236,68,49)" fg:x="12364" fg:w="152"/><text x="98.6582%" y="799.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (151 samples, 1.20%)</title><rect x="98.4161%" y="773" width="1.2018%" height="15" fill="rgb(229,146,28)" fg:x="12365" fg:w="151"/><text x="98.6661%" y="783.50"></text></g><g><title>ant_colony.exe`std::fs::impl$9::write (151 samples, 1.20%)</title><rect x="98.4161%" y="757" width="1.2018%" height="15" fill="rgb(225,31,38)" fg:x="12365" fg:w="151"/><text x="98.6661%" y="767.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_write (151 samples, 1.20%)</title><rect x="98.4161%" y="741" width="1.2018%" height="15" fill="rgb(250,208,3)" fg:x="12365" fg:w="151"/><text x="98.6661%" y="751.50"></text></g><g><title>`0x7FFAE3841C04 (151 samples, 1.20%)</title><rect x="98.4161%" y="725" width="1.2018%" height="15" fill="rgb(246,54,23)" fg:x="12365" fg:w="151"/><text x="98.6661%" y="735.50"></text></g><g><title>ant_colony.exe`core::fmt::float::float_to_decimal_common_shortest&lt;f64&gt; (155 samples, 1.23%)</title><rect x="98.4002%" y="821" width="1.2337%" height="15" fill="rgb(243,76,11)" fg:x="12363" fg:w="155"/><text x="98.6502%" y="831.50"></text></g><g><title>ant_colony.exe`core::num::flt2dec::to_shortest_str (2 samples, 0.02%)</title><rect x="99.6180%" y="805" width="0.0159%" height="15" fill="rgb(245,21,50)" fg:x="12516" fg:w="2"/><text x="99.8680%" y="815.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$ (214 samples, 1.70%)</title><rect x="97.9465%" y="1029" width="1.7033%" height="15" fill="rgb(228,9,43)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="1039.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_fmt&lt;std::fs::File&gt; (214 samples, 1.70%)</title><rect x="97.9465%" y="1013" width="1.7033%" height="15" fill="rgb(208,100,47)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="1023.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt (214 samples, 1.70%)</title><rect x="97.9465%" y="997" width="1.7033%" height="15" fill="rgb(232,26,8)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="1007.50"></text></g><g><title>ant_colony.exe`core::fmt::write (214 samples, 1.70%)</title><rect x="97.9465%" y="981" width="1.7033%" height="15" fill="rgb(216,166,38)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$27::fmt&lt;f64,alloc::alloc::Global&gt;(alloc::vec::Vec (214 samples, 1.70%)</title><rect x="97.9465%" y="965" width="1.7033%" height="15" fill="rgb(251,202,51)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="975.50"></text></g><g><title>ant_colony.exe`core::fmt::impl$28::fmt(ref$&lt;slice2$ (214 samples, 1.70%)</title><rect x="97.9465%" y="949" width="1.7033%" height="15" fill="rgb(254,216,34)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="959.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugList::entries(core::slice::iter::Iter (214 samples, 1.70%)</title><rect x="97.9465%" y="933" width="1.7033%" height="15" fill="rgb(251,32,27)" fg:x="12306" fg:w="214"/><text x="98.1965%" y="943.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (213 samples, 1.70%)</title><rect x="97.9545%" y="917" width="1.6953%" height="15" fill="rgb(208,127,28)" fg:x="12307" fg:w="213"/><text x="98.2045%" y="927.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;f64&gt;*, core::ptr::non_null::NonNull (213 samples, 1.70%)</title><rect x="97.9545%" y="901" width="1.6953%" height="15" fill="rgb(224,137,22)" fg:x="12307" fg:w="213"/><text x="98.2045%" y="911.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugSet::entry (209 samples, 1.66%)</title><rect x="97.9863%" y="885" width="1.6635%" height="15" fill="rgb(254,70,32)" fg:x="12311" fg:w="209"/><text x="98.2363%" y="895.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugInner::entry_with (209 samples, 1.66%)</title><rect x="97.9863%" y="869" width="1.6635%" height="15" fill="rgb(229,75,37)" fg:x="12311" fg:w="209"/><text x="98.2363%" y="879.50"></text></g><g><title>ant_colony.exe`core::result::Result::and_then (209 samples, 1.66%)</title><rect x="97.9863%" y="853" width="1.6635%" height="15" fill="rgb(252,64,23)" fg:x="12311" fg:w="209"/><text x="98.2363%" y="863.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::impl$5::entry_with::closure$0 (209 samples, 1.66%)</title><rect x="97.9863%" y="837" width="1.6635%" height="15" fill="rgb(232,162,48)" fg:x="12311" fg:w="209"/><text x="98.2363%" y="847.50"></text></g><g><title>ant_colony.exe`core::fmt::float::impl$8::fmt (2 samples, 0.02%)</title><rect x="99.6339%" y="821" width="0.0159%" height="15" fill="rgb(246,160,12)" fg:x="12518" fg:w="2"/><text x="99.8839%" y="831.50"></text></g><g><title>ant_colony.exe`core::fmt::float::float_to_general_debug (2 samples, 0.02%)</title><rect x="99.6339%" y="805" width="0.0159%" height="15" fill="rgb(247,166,0)" fg:x="12518" fg:w="2"/><text x="99.8839%" y="815.50"></text></g><g><title>ant_colony.exe`std::os::windows::io::handle::impl$13::try_from (2 samples, 0.02%)</title><rect x="99.6578%" y="885" width="0.0159%" height="15" fill="rgb(249,219,21)" fg:x="12521" fg:w="2"/><text x="99.9078%" y="895.50"></text></g><g><title>ant_colony.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (2 samples, 0.02%)</title><rect x="99.6578%" y="869" width="0.0159%" height="15" fill="rgb(205,209,3)" fg:x="12521" fg:w="2"/><text x="99.9078%" y="879.50"></text></g><g><title>`0x7FFAE09E6A45 (2 samples, 0.02%)</title><rect x="99.6578%" y="853" width="0.0159%" height="15" fill="rgb(243,44,1)" fg:x="12521" fg:w="2"/><text x="99.9078%" y="863.50"></text></g><g><title>`0x7FFAE0A31F67 (2 samples, 0.02%)</title><rect x="99.6578%" y="837" width="0.0159%" height="15" fill="rgb(206,159,16)" fg:x="12521" fg:w="2"/><text x="99.9078%" y="847.50"></text></g><g><title>`0x7FFAE38425A4 (2 samples, 0.02%)</title><rect x="99.6578%" y="821" width="0.0159%" height="15" fill="rgb(244,77,30)" fg:x="12521" fg:w="2"/><text x="99.9078%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::test_on_graphs2(alloc::vec::Vec (12,383 samples, 98.56%)</title><rect x="1.1223%" y="1061" width="98.5594%" height="15" fill="rgb(218,69,12)" fg:x="141" fg:w="12383"/><text x="1.3723%" y="1071.50">ant_colony.exe`ant_colony::test_on_graphs2(alloc::vec::Vec</text></g><g><title>ant_colony.exe`ant_colony::evaluate_score2(alloc::vec::Vec&lt;ant_colony::graph::Graph,alloc::alloc::Global&gt;*, unsigned long long, unsigned long long, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par (12,383 samples, 98.56%)</title><rect x="1.1223%" y="1045" width="98.5594%" height="15" fill="rgb(212,87,7)" fg:x="141" fg:w="12383"/><text x="1.3723%" y="1055.50">ant_colony.exe`ant_colony::evaluate_score2(alloc::vec::Vec&lt;ant_colony::graph::Graph,alloc::alloc::Global&gt;*, unsigned long long, unsigned long long, unsigned long lon..</text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;, ref$ (3 samples, 0.02%)</title><rect x="99.6578%" y="1029" width="0.0239%" height="15" fill="rgb(245,114,25)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="1039.50"></text></g><g><title>ant_colony.exe`std::fs::OpenOptions::_open (3 samples, 0.02%)</title><rect x="99.6578%" y="1013" width="0.0239%" height="15" fill="rgb(210,61,42)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="1023.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::open (3 samples, 0.02%)</title><rect x="99.6578%" y="997" width="0.0239%" height="15" fill="rgb(211,52,33)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="1007.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (3 samples, 0.02%)</title><rect x="99.6578%" y="981" width="0.0239%" height="15" fill="rgb(234,58,33)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="991.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (3 samples, 0.02%)</title><rect x="99.6578%" y="965" width="0.0239%" height="15" fill="rgb(220,115,36)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop (3 samples, 0.02%)</title><rect x="99.6578%" y="949" width="0.0239%" height="15" fill="rgb(243,153,54)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner::deallocate (3 samples, 0.02%)</title><rect x="99.6578%" y="933" width="0.0239%" height="15" fill="rgb(251,47,18)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner::current_memory (3 samples, 0.02%)</title><rect x="99.6578%" y="917" width="0.0239%" height="15" fill="rgb(242,102,42)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="927.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::open_native (3 samples, 0.02%)</title><rect x="99.6578%" y="901" width="0.0239%" height="15" fill="rgb(234,31,38)" fg:x="12521" fg:w="3"/><text x="99.9078%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (11 samples, 0.09%)</title><rect x="99.6816%" y="933" width="0.0876%" height="15" fill="rgb(221,117,51)" fg:x="12524" fg:w="11"/><text x="99.9316%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (11 samples, 0.09%)</title><rect x="99.6816%" y="917" width="0.0876%" height="15" fill="rgb(212,20,18)" fg:x="12524" fg:w="11"/><text x="99.9316%" y="927.50"></text></g><g><title>`0x7FFAE37759E0 (11 samples, 0.09%)</title><rect x="99.6816%" y="901" width="0.0876%" height="15" fill="rgb(245,133,36)" fg:x="12524" fg:w="11"/><text x="99.9316%" y="911.50"></text></g><g><title>`0x7FFAE36F49D6 (9 samples, 0.07%)</title><rect x="99.6975%" y="885" width="0.0716%" height="15" fill="rgb(212,6,19)" fg:x="12526" fg:w="9"/><text x="99.9475%" y="895.50"></text></g><g><title>`0x7FFAE3709B68 (8 samples, 0.06%)</title><rect x="99.7055%" y="869" width="0.0637%" height="15" fill="rgb(218,1,36)" fg:x="12527" fg:w="8"/><text x="99.9555%" y="879.50"></text></g><g><title>`0x7FFAE36F801E (8 samples, 0.06%)</title><rect x="99.7055%" y="853" width="0.0637%" height="15" fill="rgb(246,84,54)" fg:x="12527" fg:w="8"/><text x="99.9555%" y="863.50"></text></g><g><title>`0x7FFAE37CB4C9 (8 samples, 0.06%)</title><rect x="99.7055%" y="837" width="0.0637%" height="15" fill="rgb(242,110,6)" fg:x="12527" fg:w="8"/><text x="99.9555%" y="847.50"></text></g><g><title>`0x7FFAE3841EC4 (8 samples, 0.06%)</title><rect x="99.7055%" y="821" width="0.0637%" height="15" fill="rgb(214,47,5)" fg:x="12527" fg:w="8"/><text x="99.9555%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (12 samples, 0.10%)</title><rect x="99.6816%" y="1045" width="0.0955%" height="15" fill="rgb(218,159,25)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="1055.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (12 samples, 0.10%)</title><rect x="99.6816%" y="1029" width="0.0955%" height="15" fill="rgb(215,211,28)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="1039.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (12 samples, 0.10%)</title><rect x="99.6816%" y="1013" width="0.0955%" height="15" fill="rgb(238,59,32)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="1023.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (12 samples, 0.10%)</title><rect x="99.6816%" y="997" width="0.0955%" height="15" fill="rgb(226,82,3)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="1007.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (12 samples, 0.10%)</title><rect x="99.6816%" y="981" width="0.0955%" height="15" fill="rgb(240,164,32)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (12 samples, 0.10%)</title><rect x="99.6816%" y="965" width="0.0955%" height="15" fill="rgb(232,46,7)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (12 samples, 0.10%)</title><rect x="99.6816%" y="949" width="0.0955%" height="15" fill="rgb(229,129,53)" fg:x="12524" fg:w="12"/><text x="99.9316%" y="959.50"></text></g><g><title>ant_colony.exe`__scrt_common_main_seh() (12,515 samples, 99.61%)</title><rect x="0.1751%" y="1237" width="99.6100%" height="15" fill="rgb(234,188,29)" fg:x="22" fg:w="12515"/><text x="0.4251%" y="1247.50">ant_colony.exe`__scrt_common_main_seh()</text></g><g><title>ant_colony.exe`invoke_main() (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1221" width="99.5384%" height="15" fill="rgb(246,141,4)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1231.50">ant_colony.exe`invoke_main()</text></g><g><title>ant_colony.exe`main (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1205" width="99.5384%" height="15" fill="rgb(229,23,39)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1215.50">ant_colony.exe`main</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1189" width="99.5384%" height="15" fill="rgb(206,12,3)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1199.50">ant_colony.exe`std::rt::lang_start_internal</text></g><g><title>ant_colony.exe`std::panic::catch_unwind (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1173" width="99.5384%" height="15" fill="rgb(252,226,20)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1183.50">ant_colony.exe`std::panic::catch_unwind</text></g><g><title>ant_colony.exe`std::panicking::try (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1157" width="99.5384%" height="15" fill="rgb(216,123,35)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1167.50">ant_colony.exe`std::panicking::try</text></g><g><title>ant_colony.exe`std::panicking::try::do_call (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1141" width="99.5384%" height="15" fill="rgb(212,68,40)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1151.50">ant_colony.exe`std::panicking::try::do_call</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal::closure$0 (12,506 samples, 99.54%)</title><rect x="0.2467%" y="1125" width="99.5384%" height="15" fill="rgb(254,125,32)" fg:x="31" fg:w="12506"/><text x="0.4967%" y="1135.50">ant_colony.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (12,505 samples, 99.53%)</title><rect x="0.2547%" y="1109" width="99.5304%" height="15" fill="rgb(253,97,22)" fg:x="32" fg:w="12505"/><text x="0.5047%" y="1119.50">ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (12,505 samples, 99.53%)</title><rect x="0.2547%" y="1093" width="99.5304%" height="15" fill="rgb(241,101,14)" fg:x="32" fg:w="12505"/><text x="0.5047%" y="1103.50">ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>ant_colony.exe`ant_colony::main (12,505 samples, 99.53%)</title><rect x="0.2547%" y="1077" width="99.5304%" height="15" fill="rgb(238,103,29)" fg:x="32" fg:w="12505"/><text x="0.5047%" y="1087.50">ant_colony.exe`ant_colony::main</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (13 samples, 0.10%)</title><rect x="99.6816%" y="1061" width="0.1035%" height="15" fill="rgb(233,195,47)" fg:x="12524" fg:w="13"/><text x="99.9316%" y="1071.50"></text></g><g><title>`0x7FFAE0A67B32 (2 samples, 0.02%)</title><rect x="99.7851%" y="1205" width="0.0159%" height="15" fill="rgb(246,218,30)" fg:x="12537" fg:w="2"/><text x="100.0351%" y="1215.50"></text></g><g><title>`0x7FFAE3841E04 (2 samples, 0.02%)</title><rect x="99.7851%" y="1189" width="0.0159%" height="15" fill="rgb(219,145,47)" fg:x="12537" fg:w="2"/><text x="100.0351%" y="1199.50"></text></g><g><title>ant_colony.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (2 samples, 0.02%)</title><rect x="99.8010%" y="933" width="0.0159%" height="15" fill="rgb(243,12,26)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="943.50"></text></g><g><title>ant_colony.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (2 samples, 0.02%)</title><rect x="99.8010%" y="917" width="0.0159%" height="15" fill="rgb(214,87,16)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="927.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (2 samples, 0.02%)</title><rect x="99.8010%" y="901" width="0.0159%" height="15" fill="rgb(208,99,42)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="911.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::find_work (2 samples, 0.02%)</title><rect x="99.8010%" y="885" width="0.0159%" height="15" fill="rgb(253,99,2)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="895.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (2 samples, 0.02%)</title><rect x="99.8010%" y="869" width="0.0159%" height="15" fill="rgb(220,168,23)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="879.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::impl$10::find_work::closure$0 (2 samples, 0.02%)</title><rect x="99.8010%" y="853" width="0.0159%" height="15" fill="rgb(242,38,24)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="863.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::steal (2 samples, 0.02%)</title><rect x="99.8010%" y="837" width="0.0159%" height="15" fill="rgb(225,182,9)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="847.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (2 samples, 0.02%)</title><rect x="99.8010%" y="821" width="0.0159%" height="15" fill="rgb(243,178,37)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="831.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (2 samples, 0.02%)</title><rect x="99.8010%" y="805" width="0.0159%" height="15" fill="rgb(232,139,19)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="815.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (2 samples, 0.02%)</title><rect x="99.8010%" y="789" width="0.0159%" height="15" fill="rgb(225,201,24)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="799.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (2 samples, 0.02%)</title><rect x="99.8010%" y="773" width="0.0159%" height="15" fill="rgb(221,47,46)" fg:x="12539" fg:w="2"/><text x="100.0510%" y="783.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8329%" y="533" width="0.0159%" height="15" fill="rgb(249,23,13)" fg:x="12543" fg:w="2"/><text x="100.0829%" y="543.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8329%" y="517" width="0.0159%" height="15" fill="rgb(219,9,5)" fg:x="12543" fg:w="2"/><text x="100.0829%" y="527.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8329%" y="501" width="0.0159%" height="15" fill="rgb(254,171,16)" fg:x="12543" fg:w="2"/><text x="100.0829%" y="511.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8329%" y="485" width="0.0159%" height="15" fill="rgb(230,171,20)" fg:x="12543" fg:w="2"/><text x="100.0829%" y="495.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8329%" y="469" width="0.0159%" height="15" fill="rgb(210,71,41)" fg:x="12543" fg:w="2"/><text x="100.0829%" y="479.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8329%" y="453" width="0.0159%" height="15" fill="rgb(206,173,20)" fg:x="12543" fg:w="2"/><text x="100.0829%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(tuple$ (5 samples, 0.04%)</title><rect x="99.8169%" y="901" width="0.0398%" height="15" fill="rgb(233,88,34)" fg:x="12541" fg:w="5"/><text x="100.0669%" y="911.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;tuple$&lt;&gt;,tuple$ (5 samples, 0.04%)</title><rect x="99.8169%" y="885" width="0.0398%" height="15" fill="rgb(223,209,46)" fg:x="12541" fg:w="5"/><text x="100.0669%" y="895.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (5 samples, 0.04%)</title><rect x="99.8169%" y="869" width="0.0398%" height="15" fill="rgb(250,43,18)" fg:x="12541" fg:w="5"/><text x="100.0669%" y="879.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="853" width="0.0318%" height="15" fill="rgb(208,13,10)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="863.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="837" width="0.0318%" height="15" fill="rgb(212,200,36)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="847.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="821" width="0.0318%" height="15" fill="rgb(225,90,30)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="831.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="99.8249%" y="805" width="0.0318%" height="15" fill="rgb(236,182,39)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="815.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="789" width="0.0318%" height="15" fill="rgb(212,144,35)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="799.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="773" width="0.0318%" height="15" fill="rgb(228,63,44)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="783.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="757" width="0.0318%" height="15" fill="rgb(228,109,6)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="767.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8249%" y="741" width="0.0318%" height="15" fill="rgb(238,117,24)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="751.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8249%" y="725" width="0.0318%" height="15" fill="rgb(242,26,26)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="735.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8249%" y="709" width="0.0318%" height="15" fill="rgb(221,92,48)" fg:x="12542" fg:w="4"/><text x="100.0749%" y="719.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="693" width="0.0239%" height="15" fill="rgb(209,209,32)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="703.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="677" width="0.0239%" height="15" fill="rgb(221,70,22)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="687.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="661" width="0.0239%" height="15" fill="rgb(248,145,5)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="671.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="99.8329%" y="645" width="0.0239%" height="15" fill="rgb(226,116,26)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="655.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="629" width="0.0239%" height="15" fill="rgb(244,5,17)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="639.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="613" width="0.0239%" height="15" fill="rgb(252,159,33)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="623.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="597" width="0.0239%" height="15" fill="rgb(206,71,0)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="607.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8329%" y="581" width="0.0239%" height="15" fill="rgb(233,118,54)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="591.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8329%" y="565" width="0.0239%" height="15" fill="rgb(234,83,48)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="575.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8329%" y="549" width="0.0239%" height="15" fill="rgb(228,3,54)" fg:x="12543" fg:w="3"/><text x="100.0829%" y="559.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until (6 samples, 0.05%)</title><rect x="99.8647%" y="821" width="0.0478%" height="15" fill="rgb(226,155,13)" fg:x="12547" fg:w="6"/><text x="100.1147%" y="831.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.05%)</title><rect x="99.8647%" y="805" width="0.0478%" height="15" fill="rgb(241,28,37)" fg:x="12547" fg:w="6"/><text x="100.1147%" y="815.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::execute (5 samples, 0.04%)</title><rect x="99.8727%" y="789" width="0.0398%" height="15" fill="rgb(233,93,10)" fg:x="12548" fg:w="5"/><text x="100.1227%" y="799.50"></text></g><g><title>ant_colony.exe`rayon_core::job::JobRef::execute (5 samples, 0.04%)</title><rect x="99.8727%" y="773" width="0.0398%" height="15" fill="rgb(225,113,19)" fg:x="12548" fg:w="5"/><text x="100.1227%" y="783.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (5 samples, 0.04%)</title><rect x="99.8727%" y="757" width="0.0398%" height="15" fill="rgb(241,2,18)" fg:x="12548" fg:w="5"/><text x="100.1227%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (5 samples, 0.04%)</title><rect x="99.8727%" y="741" width="0.0398%" height="15" fill="rgb(228,207,21)" fg:x="12548" fg:w="5"/><text x="100.1227%" y="751.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8727%" y="725" width="0.0398%" height="15" fill="rgb(213,211,35)" fg:x="12548" fg:w="5"/><text x="100.1227%" y="735.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8806%" y="709" width="0.0318%" height="15" fill="rgb(209,83,10)" fg:x="12549" fg:w="4"/><text x="100.1306%" y="719.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8806%" y="693" width="0.0318%" height="15" fill="rgb(209,164,1)" fg:x="12549" fg:w="4"/><text x="100.1306%" y="703.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="677" width="0.0239%" height="15" fill="rgb(213,184,43)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="687.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="661" width="0.0239%" height="15" fill="rgb(231,61,34)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="671.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="645" width="0.0239%" height="15" fill="rgb(235,75,3)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="655.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="99.8886%" y="629" width="0.0239%" height="15" fill="rgb(220,106,47)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="639.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="613" width="0.0239%" height="15" fill="rgb(210,196,33)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="623.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="597" width="0.0239%" height="15" fill="rgb(229,154,42)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="607.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="581" width="0.0239%" height="15" fill="rgb(228,114,26)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="591.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8886%" y="565" width="0.0239%" height="15" fill="rgb(208,144,1)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="575.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8886%" y="549" width="0.0239%" height="15" fill="rgb(239,112,37)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="559.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8886%" y="533" width="0.0239%" height="15" fill="rgb(210,96,50)" fg:x="12550" fg:w="3"/><text x="100.1386%" y="543.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="517" width="0.0159%" height="15" fill="rgb(222,178,2)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="527.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="501" width="0.0159%" height="15" fill="rgb(226,74,18)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="511.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="485" width="0.0159%" height="15" fill="rgb(225,67,54)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="495.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="99.8965%" y="469" width="0.0159%" height="15" fill="rgb(251,92,32)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="479.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="453" width="0.0159%" height="15" fill="rgb(228,149,22)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="437" width="0.0159%" height="15" fill="rgb(243,54,13)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="447.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="421" width="0.0159%" height="15" fill="rgb(243,180,28)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="431.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8965%" y="405" width="0.0159%" height="15" fill="rgb(208,167,24)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="415.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8965%" y="389" width="0.0159%" height="15" fill="rgb(245,73,45)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="399.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8965%" y="373" width="0.0159%" height="15" fill="rgb(237,203,48)" fg:x="12551" fg:w="2"/><text x="100.1465%" y="383.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9124%" y="661" width="0.0159%" height="15" fill="rgb(211,197,16)" fg:x="12553" fg:w="2"/><text x="100.1624%" y="671.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9124%" y="645" width="0.0159%" height="15" fill="rgb(243,99,51)" fg:x="12553" fg:w="2"/><text x="100.1624%" y="655.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9124%" y="629" width="0.0159%" height="15" fill="rgb(215,123,29)" fg:x="12553" fg:w="2"/><text x="100.1624%" y="639.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9124%" y="613" width="0.0159%" height="15" fill="rgb(239,186,37)" fg:x="12553" fg:w="2"/><text x="100.1624%" y="623.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9124%" y="597" width="0.0159%" height="15" fill="rgb(252,136,39)" fg:x="12553" fg:w="2"/><text x="100.1624%" y="607.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9124%" y="581" width="0.0159%" height="15" fill="rgb(223,213,32)" fg:x="12553" fg:w="2"/><text x="100.1624%" y="591.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="533" width="0.0159%" height="15" fill="rgb(233,115,5)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="543.50"></text></g><g><title>ant_colony.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9284%" y="517" width="0.0159%" height="15" fill="rgb(207,226,44)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="527.50"></text></g><g><title>ant_colony.exe`rayon::iter::for_each::impl$1::consume_iter(rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="501" width="0.0159%" height="15" fill="rgb(208,126,0)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="511.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="485" width="0.0159%" height="15" fill="rgb(244,66,21)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="495.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::impl$2::fold&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="469" width="0.0159%" height="15" fill="rgb(222,97,12)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="479.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="453" width="0.0159%" height="15" fill="rgb(219,213,19)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9284%" y="437" width="0.0159%" height="15" fill="rgb(252,169,30)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="421" width="0.0159%" height="15" fill="rgb(206,32,51)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="431.50"></text></g><g><title>ant_colony.exe`core::ops::function::impls::impl$1::call_mut(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;**, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="405" width="0.0159%" height="15" fill="rgb(250,172,42)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="415.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality::closure$1(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;*, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9284%" y="389" width="0.0159%" height="15" fill="rgb(209,34,43)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="399.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::shortest_path_for_edge_centrality&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;**, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9284%" y="373" width="0.0159%" height="15" fill="rgb(223,11,35)" fg:x="12555" fg:w="2"/><text x="100.1784%" y="383.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="501" width="0.0159%" height="15" fill="rgb(251,219,26)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="485" width="0.0159%" height="15" fill="rgb(231,119,3)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="469" width="0.0159%" height="15" fill="rgb(216,97,11)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="479.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="453" width="0.0159%" height="15" fill="rgb(223,59,9)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="437" width="0.0159%" height="15" fill="rgb(233,93,31)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="447.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="421" width="0.0159%" height="15" fill="rgb(239,81,33)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="431.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="405" width="0.0159%" height="15" fill="rgb(213,120,34)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="389" width="0.0159%" height="15" fill="rgb(243,49,53)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="373" width="0.0159%" height="15" fill="rgb(247,216,33)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="383.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="357" width="0.0159%" height="15" fill="rgb(226,26,14)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="367.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="341" width="0.0159%" height="15" fill="rgb(215,49,53)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="351.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9443%" y="325" width="0.0159%" height="15" fill="rgb(245,162,40)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="309" width="0.0159%" height="15" fill="rgb(229,68,17)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="319.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="293" width="0.0159%" height="15" fill="rgb(213,182,10)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="303.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="277" width="0.0159%" height="15" fill="rgb(245,125,30)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="287.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="99.9443%" y="261" width="0.0159%" height="15" fill="rgb(232,202,2)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="271.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="245" width="0.0159%" height="15" fill="rgb(237,140,51)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="255.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="229" width="0.0159%" height="15" fill="rgb(236,157,25)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="239.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="213" width="0.0159%" height="15" fill="rgb(219,209,0)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="223.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="197" width="0.0159%" height="15" fill="rgb(240,116,54)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="207.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="181" width="0.0159%" height="15" fill="rgb(216,10,36)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="191.50"></text></g><g><title>ant_colony.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9443%" y="165" width="0.0159%" height="15" fill="rgb(222,72,44)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="175.50"></text></g><g><title>ant_colony.exe`rayon::iter::for_each::impl$1::consume_iter(rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="149" width="0.0159%" height="15" fill="rgb(232,159,9)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="159.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="133" width="0.0159%" height="15" fill="rgb(210,39,32)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="143.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::impl$2::fold&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="117" width="0.0159%" height="15" fill="rgb(216,194,45)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="127.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="101" width="0.0159%" height="15" fill="rgb(218,18,35)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="111.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9443%" y="85" width="0.0159%" height="15" fill="rgb(207,83,51)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="95.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="69" width="0.0159%" height="15" fill="rgb(225,63,43)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="79.50"></text></g><g><title>ant_colony.exe`core::ops::function::impls::impl$1::call_mut(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;**, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="53" width="0.0159%" height="15" fill="rgb(207,57,36)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="63.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality::closure$1(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;*, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9443%" y="37" width="0.0159%" height="15" fill="rgb(216,99,33)" fg:x="12557" fg:w="2"/><text x="100.1943%" y="47.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::execute (19 samples, 0.15%)</title><rect x="99.8169%" y="933" width="0.1512%" height="15" fill="rgb(225,42,16)" fg:x="12541" fg:w="19"/><text x="100.0669%" y="943.50"></text></g><g><title>ant_colony.exe`rayon_core::job::JobRef::execute (19 samples, 0.15%)</title><rect x="99.8169%" y="917" width="0.1512%" height="15" fill="rgb(220,201,45)" fg:x="12541" fg:w="19"/><text x="100.0669%" y="927.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (14 samples, 0.11%)</title><rect x="99.8567%" y="901" width="0.1114%" height="15" fill="rgb(225,33,4)" fg:x="12546" fg:w="14"/><text x="100.1067%" y="911.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (14 samples, 0.11%)</title><rect x="99.8567%" y="885" width="0.1114%" height="15" fill="rgb(224,33,50)" fg:x="12546" fg:w="14"/><text x="100.1067%" y="895.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (14 samples, 0.11%)</title><rect x="99.8567%" y="869" width="0.1114%" height="15" fill="rgb(246,198,51)" fg:x="12546" fg:w="14"/><text x="100.1067%" y="879.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (14 samples, 0.11%)</title><rect x="99.8567%" y="853" width="0.1114%" height="15" fill="rgb(205,22,4)" fg:x="12546" fg:w="14"/><text x="100.1067%" y="863.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (14 samples, 0.11%)</title><rect x="99.8567%" y="837" width="0.1114%" height="15" fill="rgb(206,3,8)" fg:x="12546" fg:w="14"/><text x="100.1067%" y="847.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="821" width="0.0557%" height="15" fill="rgb(251,23,15)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="831.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="805" width="0.0557%" height="15" fill="rgb(252,88,28)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="815.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="789" width="0.0557%" height="15" fill="rgb(212,127,14)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="799.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (7 samples, 0.06%)</title><rect x="99.9124%" y="773" width="0.0557%" height="15" fill="rgb(247,145,37)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="783.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="757" width="0.0557%" height="15" fill="rgb(209,117,53)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="767.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="741" width="0.0557%" height="15" fill="rgb(212,90,42)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="751.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="725" width="0.0557%" height="15" fill="rgb(218,164,37)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="735.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (7 samples, 0.06%)</title><rect x="99.9124%" y="709" width="0.0557%" height="15" fill="rgb(246,65,34)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="719.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (7 samples, 0.06%)</title><rect x="99.9124%" y="693" width="0.0557%" height="15" fill="rgb(231,100,33)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="703.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (7 samples, 0.06%)</title><rect x="99.9124%" y="677" width="0.0557%" height="15" fill="rgb(228,126,14)" fg:x="12553" fg:w="7"/><text x="100.1624%" y="687.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="661" width="0.0398%" height="15" fill="rgb(215,173,21)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="671.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="645" width="0.0398%" height="15" fill="rgb(210,6,40)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="655.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="629" width="0.0398%" height="15" fill="rgb(212,48,18)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="639.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (5 samples, 0.04%)</title><rect x="99.9284%" y="613" width="0.0398%" height="15" fill="rgb(230,214,11)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="623.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="597" width="0.0398%" height="15" fill="rgb(254,105,39)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="607.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="581" width="0.0398%" height="15" fill="rgb(245,158,5)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="591.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="565" width="0.0398%" height="15" fill="rgb(249,208,11)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="575.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.9284%" y="549" width="0.0398%" height="15" fill="rgb(210,39,28)" fg:x="12555" fg:w="5"/><text x="100.1784%" y="559.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.9443%" y="533" width="0.0239%" height="15" fill="rgb(211,56,53)" fg:x="12557" fg:w="3"/><text x="100.1943%" y="543.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.9443%" y="517" width="0.0239%" height="15" fill="rgb(226,201,30)" fg:x="12557" fg:w="3"/><text x="100.1943%" y="527.50"></text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (24 samples, 0.19%)</title><rect x="99.8010%" y="1029" width="0.1910%" height="15" fill="rgb(239,101,34)" fg:x="12539" fg:w="24"/><text x="100.0510%" y="1039.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::ThreadBuilder::run (24 samples, 0.19%)</title><rect x="99.8010%" y="1013" width="0.1910%" height="15" fill="rgb(226,209,5)" fg:x="12539" fg:w="24"/><text x="100.0510%" y="1023.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::main_loop (24 samples, 0.19%)</title><rect x="99.8010%" y="997" width="0.1910%" height="15" fill="rgb(250,105,47)" fg:x="12539" fg:w="24"/><text x="100.0510%" y="1007.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (24 samples, 0.19%)</title><rect x="99.8010%" y="981" width="0.1910%" height="15" fill="rgb(230,72,3)" fg:x="12539" fg:w="24"/><text x="100.0510%" y="991.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until (24 samples, 0.19%)</title><rect x="99.8010%" y="965" width="0.1910%" height="15" fill="rgb(232,218,39)" fg:x="12539" fg:w="24"/><text x="100.0510%" y="975.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 0.19%)</title><rect x="99.8010%" y="949" width="0.1910%" height="15" fill="rgb(248,166,6)" fg:x="12539" fg:w="24"/><text x="100.0510%" y="959.50"></text></g><g><title>ant_colony.exe`rayon_core::sleep::Sleep::no_work_found (2 samples, 0.02%)</title><rect x="99.9761%" y="933" width="0.0159%" height="15" fill="rgb(247,89,20)" fg:x="12561" fg:w="2"/><text x="100.2261%" y="943.50"></text></g><g><title>all (12,564 samples, 100%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(248,130,54)" fg:x="0" fg:w="12564"/><text x="0.2500%" y="1295.50"></text></g><g><title>`0x7FFAE371C34C (12,545 samples, 99.85%)</title><rect x="0.1512%" y="1269" width="99.8488%" height="15" fill="rgb(234,196,4)" fg:x="19" fg:w="12545"/><text x="0.4012%" y="1279.50">`0x7FFAE371C34C</text></g><g><title>`0x7FFAE2FAE8D7 (12,545 samples, 99.85%)</title><rect x="0.1512%" y="1253" width="99.8488%" height="15" fill="rgb(250,143,31)" fg:x="19" fg:w="12545"/><text x="0.4012%" y="1263.50">`0x7FFAE2FAE8D7</text></g><g><title>ant_colony.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (27 samples, 0.21%)</title><rect x="99.7851%" y="1237" width="0.2149%" height="15" fill="rgb(211,110,34)" fg:x="12537" fg:w="27"/><text x="100.0351%" y="1247.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$28::call_once (27 samples, 0.21%)</title><rect x="99.7851%" y="1221" width="0.2149%" height="15" fill="rgb(215,124,48)" fg:x="12537" fg:w="27"/><text x="100.0351%" y="1231.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$28::call_once (25 samples, 0.20%)</title><rect x="99.8010%" y="1205" width="0.1990%" height="15" fill="rgb(216,46,13)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1215.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$8::drop (25 samples, 0.20%)</title><rect x="99.8010%" y="1189" width="0.1990%" height="15" fill="rgb(205,184,25)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1199.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::for_value_raw (25 samples, 0.20%)</title><rect x="99.8010%" y="1173" width="0.1990%" height="15" fill="rgb(228,1,10)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1183.50"></text></g><g><title>ant_colony.exe`core::mem::size_of_val_raw (25 samples, 0.20%)</title><rect x="99.8010%" y="1157" width="0.1990%" height="15" fill="rgb(213,116,27)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1167.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (25 samples, 0.20%)</title><rect x="99.8010%" y="1141" width="0.1990%" height="15" fill="rgb(241,95,50)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1151.50"></text></g><g><title>ant_colony.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (25 samples, 0.20%)</title><rect x="99.8010%" y="1125" width="0.1990%" height="15" fill="rgb(238,48,32)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1135.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (25 samples, 0.20%)</title><rect x="99.8010%" y="1109" width="0.1990%" height="15" fill="rgb(235,113,49)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1119.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (25 samples, 0.20%)</title><rect x="99.8010%" y="1093" width="0.1990%" height="15" fill="rgb(205,127,43)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1103.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (25 samples, 0.20%)</title><rect x="99.8010%" y="1077" width="0.1990%" height="15" fill="rgb(250,162,2)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1087.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (25 samples, 0.20%)</title><rect x="99.8010%" y="1061" width="0.1990%" height="15" fill="rgb(220,13,41)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1071.50"></text></g><g><title>ant_colony.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (25 samples, 0.20%)</title><rect x="99.8010%" y="1045" width="0.1990%" height="15" fill="rgb(249,221,25)" fg:x="12539" fg:w="25"/><text x="100.0510%" y="1055.50"></text></g></svg></svg>