<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="279535"><g><title>`0x7FF8903E1446 (85 samples, 0.03%)</title><rect x="0.0168%" y="469" width="0.0304%" height="15" fill="rgb(227,0,7)" fg:x="47" fg:w="85"/><text x="0.2668%" y="479.50"></text></g><g><title>`0x7FF8903E145E (130 samples, 0.05%)</title><rect x="0.0501%" y="469" width="0.0465%" height="15" fill="rgb(217,0,24)" fg:x="140" fg:w="130"/><text x="0.3001%" y="479.50"></text></g><g><title>`0x7FF8903E1466 (201 samples, 0.07%)</title><rect x="0.0966%" y="469" width="0.0719%" height="15" fill="rgb(221,193,54)" fg:x="270" fg:w="201"/><text x="0.3466%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (437 samples, 0.16%)</title><rect x="0.0125%" y="517" width="0.1563%" height="15" fill="rgb(248,212,6)" fg:x="35" fg:w="437"/><text x="0.2625%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (437 samples, 0.16%)</title><rect x="0.0125%" y="501" width="0.1563%" height="15" fill="rgb(208,68,35)" fg:x="35" fg:w="437"/><text x="0.2625%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$ (437 samples, 0.16%)</title><rect x="0.0125%" y="485" width="0.1563%" height="15" fill="rgb(232,128,0)" fg:x="35" fg:w="437"/><text x="0.2625%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (256 samples, 0.09%)</title><rect x="0.1756%" y="501" width="0.0916%" height="15" fill="rgb(207,160,47)" fg:x="491" fg:w="256"/><text x="0.4256%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (256 samples, 0.09%)</title><rect x="0.1756%" y="485" width="0.0916%" height="15" fill="rgb(228,23,34)" fg:x="491" fg:w="256"/><text x="0.4256%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (256 samples, 0.09%)</title><rect x="0.1756%" y="469" width="0.0916%" height="15" fill="rgb(218,30,26)" fg:x="491" fg:w="256"/><text x="0.4256%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::_smallest_above_from (213 samples, 0.08%)</title><rect x="0.2704%" y="469" width="0.0762%" height="15" fill="rgb(220,122,19)" fg:x="756" fg:w="213"/><text x="0.5204%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::children_count (66 samples, 0.02%)</title><rect x="0.3230%" y="453" width="0.0236%" height="15" fill="rgb(250,228,42)" fg:x="903" fg:w="66"/><text x="0.5730%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::smallest_above (218 samples, 0.08%)</title><rect x="0.2690%" y="485" width="0.0780%" height="15" fill="rgb(240,193,28)" fg:x="752" fg:w="218"/><text x="0.5190%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::get_edge (229 samples, 0.08%)</title><rect x="0.2690%" y="501" width="0.0819%" height="15" fill="rgb(216,20,37)" fg:x="752" fg:w="229"/><text x="0.5190%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::update (441 samples, 0.16%)</title><rect x="1.3419%" y="485" width="0.1578%" height="15" fill="rgb(206,188,39)" fg:x="3751" fg:w="441"/><text x="1.5919%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::parent (62 samples, 0.02%)</title><rect x="1.4775%" y="469" width="0.0222%" height="15" fill="rgb(217,207,13)" fg:x="4130" fg:w="62"/><text x="1.7275%" y="479.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$5::hash (152 samples, 0.05%)</title><rect x="1.5107%" y="389" width="0.0544%" height="15" fill="rgb(231,73,38)" fg:x="4223" fg:w="152"/><text x="1.7607%" y="399.50"></text></g><g><title>ant_colony.exe`core::array::impl$11::hash (152 samples, 0.05%)</title><rect x="1.5107%" y="373" width="0.0544%" height="15" fill="rgb(225,20,46)" fg:x="4223" fg:w="152"/><text x="1.7607%" y="383.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (152 samples, 0.05%)</title><rect x="1.5107%" y="357" width="0.0544%" height="15" fill="rgb(210,31,41)" fg:x="4223" fg:w="152"/><text x="1.7607%" y="367.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$13::hash_slice(ref$&lt;slice2$ (142 samples, 0.05%)</title><rect x="1.5143%" y="341" width="0.0508%" height="15" fill="rgb(221,200,47)" fg:x="4233" fg:w="142"/><text x="1.7643%" y="351.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (121 samples, 0.04%)</title><rect x="1.5218%" y="325" width="0.0433%" height="15" fill="rgb(226,26,5)" fg:x="4254" fg:w="121"/><text x="1.7718%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (107 samples, 0.04%)</title><rect x="1.5268%" y="309" width="0.0383%" height="15" fill="rgb(249,33,26)" fg:x="4268" fg:w="107"/><text x="1.7768%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (107 samples, 0.04%)</title><rect x="1.5268%" y="293" width="0.0383%" height="15" fill="rgb(235,183,28)" fg:x="4268" fg:w="107"/><text x="1.7768%" y="303.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (38 samples, 0.01%)</title><rect x="1.5751%" y="325" width="0.0136%" height="15" fill="rgb(221,5,38)" fg:x="4403" fg:w="38"/><text x="1.8251%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (40 samples, 0.01%)</title><rect x="1.5748%" y="341" width="0.0143%" height="15" fill="rgb(247,18,42)" fg:x="4402" fg:w="40"/><text x="1.8248%" y="351.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (29 samples, 0.01%)</title><rect x="1.6091%" y="325" width="0.0104%" height="15" fill="rgb(241,131,45)" fg:x="4498" fg:w="29"/><text x="1.8591%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::d_rounds (108 samples, 0.04%)</title><rect x="1.5891%" y="341" width="0.0386%" height="15" fill="rgb(249,31,29)" fg:x="4442" fg:w="108"/><text x="1.8391%" y="351.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (75 samples, 0.03%)</title><rect x="1.6542%" y="293" width="0.0268%" height="15" fill="rgb(225,111,53)" fg:x="4624" fg:w="75"/><text x="1.9042%" y="303.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::wrapping_add (31 samples, 0.01%)</title><rect x="1.6699%" y="277" width="0.0111%" height="15" fill="rgb(238,160,17)" fg:x="4668" fg:w="31"/><text x="1.9199%" y="287.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash (507 samples, 0.18%)</title><rect x="1.5107%" y="421" width="0.1814%" height="15" fill="rgb(214,148,48)" fg:x="4223" fg:w="507"/><text x="1.7607%" y="431.50"></text></g><g><title>ant_colony.exe`core::hash::BuildHasher::hash_one (507 samples, 0.18%)</title><rect x="1.5107%" y="405" width="0.1814%" height="15" fill="rgb(232,36,49)" fg:x="4223" fg:w="507"/><text x="1.7607%" y="415.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::finish (342 samples, 0.12%)</title><rect x="1.5697%" y="389" width="0.1223%" height="15" fill="rgb(209,103,24)" fg:x="4388" fg:w="342"/><text x="1.8197%" y="399.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::finish (342 samples, 0.12%)</title><rect x="1.5697%" y="373" width="0.1223%" height="15" fill="rgb(229,88,8)" fg:x="4388" fg:w="342"/><text x="1.8197%" y="383.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (342 samples, 0.12%)</title><rect x="1.5697%" y="357" width="0.1223%" height="15" fill="rgb(213,181,19)" fg:x="4388" fg:w="342"/><text x="1.8197%" y="367.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (180 samples, 0.06%)</title><rect x="1.6277%" y="341" width="0.0644%" height="15" fill="rgb(254,191,54)" fg:x="4550" fg:w="180"/><text x="1.8777%" y="351.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (147 samples, 0.05%)</title><rect x="1.6395%" y="325" width="0.0526%" height="15" fill="rgb(241,83,37)" fg:x="4583" fg:w="147"/><text x="1.8895%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (147 samples, 0.05%)</title><rect x="1.6395%" y="309" width="0.0526%" height="15" fill="rgb(233,36,39)" fg:x="4583" fg:w="147"/><text x="1.8895%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (31 samples, 0.01%)</title><rect x="1.6810%" y="293" width="0.0111%" height="15" fill="rgb(226,3,54)" fg:x="4699" fg:w="31"/><text x="1.9310%" y="303.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (124 samples, 0.04%)</title><rect x="1.6978%" y="373" width="0.0444%" height="15" fill="rgb(245,192,40)" fg:x="4746" fg:w="124"/><text x="1.9478%" y="383.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (124 samples, 0.04%)</title><rect x="1.6978%" y="357" width="0.0444%" height="15" fill="rgb(238,167,29)" fg:x="4746" fg:w="124"/><text x="1.9478%" y="367.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (95 samples, 0.03%)</title><rect x="1.7422%" y="373" width="0.0340%" height="15" fill="rgb(232,182,51)" fg:x="4870" fg:w="95"/><text x="1.9922%" y="383.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::probe_seq (76 samples, 0.03%)</title><rect x="1.7762%" y="373" width="0.0272%" height="15" fill="rgb(231,60,39)" fg:x="4965" fg:w="76"/><text x="2.0262%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::reset_state (4,064 samples, 1.45%)</title><rect x="0.3509%" y="501" width="1.4538%" height="15" fill="rgb(208,69,12)" fg:x="981" fg:w="4064"/><text x="0.6009%" y="511.50"></text></g><g><title>ant_colony.exe`std::collections::hash::set::HashSet&lt;array$&lt;usize,2&gt;,std::hash::random::RandomState&gt;::contains (823 samples, 0.29%)</title><rect x="1.5104%" y="485" width="0.2944%" height="15" fill="rgb(235,93,37)" fg:x="4222" fg:w="823"/><text x="1.7604%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::set::HashSet&lt;array$&lt;usize,2&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::contains (823 samples, 0.29%)</title><rect x="1.5104%" y="469" width="0.2944%" height="15" fill="rgb(213,116,39)" fg:x="4222" fg:w="823"/><text x="1.7604%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::contains_key (823 samples, 0.29%)</title><rect x="1.5104%" y="453" width="0.2944%" height="15" fill="rgb(222,207,29)" fg:x="4222" fg:w="823"/><text x="1.7604%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (823 samples, 0.29%)</title><rect x="1.5104%" y="437" width="0.2944%" height="15" fill="rgb(206,96,30)" fg:x="4222" fg:w="823"/><text x="1.7604%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$ (315 samples, 0.11%)</title><rect x="1.6921%" y="421" width="0.1127%" height="15" fill="rgb(218,138,4)" fg:x="4730" fg:w="315"/><text x="1.9421%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$ (315 samples, 0.11%)</title><rect x="1.6921%" y="405" width="0.1127%" height="15" fill="rgb(250,191,14)" fg:x="4730" fg:w="315"/><text x="1.9421%" y="415.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (315 samples, 0.11%)</title><rect x="1.6921%" y="389" width="0.1127%" height="15" fill="rgb(239,60,40)" fg:x="4730" fg:w="315"/><text x="1.9421%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (36 samples, 0.01%)</title><rect x="3.6396%" y="485" width="0.0129%" height="15" fill="rgb(206,27,48)" fg:x="10174" fg:w="36"/><text x="3.8896%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (36 samples, 0.01%)</title><rect x="3.6396%" y="469" width="0.0129%" height="15" fill="rgb(225,35,8)" fg:x="10174" fg:w="36"/><text x="3.8896%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (58 samples, 0.02%)</title><rect x="4.9640%" y="469" width="0.0207%" height="15" fill="rgb(250,213,24)" fg:x="13876" fg:w="58"/><text x="5.2140%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (58 samples, 0.02%)</title><rect x="4.9640%" y="453" width="0.0207%" height="15" fill="rgb(247,123,22)" fg:x="13876" fg:w="58"/><text x="5.2140%" y="463.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (58 samples, 0.02%)</title><rect x="4.9640%" y="437" width="0.0207%" height="15" fill="rgb(231,138,38)" fg:x="13876" fg:w="58"/><text x="5.2140%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::update (3,864 samples, 1.38%)</title><rect x="3.6525%" y="485" width="1.3823%" height="15" fill="rgb(231,145,46)" fg:x="10210" fg:w="3864"/><text x="3.9025%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::parent (140 samples, 0.05%)</title><rect x="4.9847%" y="469" width="0.0501%" height="15" fill="rgb(251,118,11)" fg:x="13934" fg:w="140"/><text x="5.2347%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (845 samples, 0.30%)</title><rect x="5.0348%" y="485" width="0.3023%" height="15" fill="rgb(217,147,25)" fg:x="14074" fg:w="845"/><text x="5.2848%" y="495.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (35 samples, 0.01%)</title><rect x="5.4397%" y="261" width="0.0125%" height="15" fill="rgb(247,81,37)" fg:x="15206" fg:w="35"/><text x="5.6897%" y="271.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$5::hash (177 samples, 0.06%)</title><rect x="5.3932%" y="373" width="0.0633%" height="15" fill="rgb(209,12,38)" fg:x="15076" fg:w="177"/><text x="5.6432%" y="383.50"></text></g><g><title>ant_colony.exe`core::array::impl$11::hash (177 samples, 0.06%)</title><rect x="5.3932%" y="357" width="0.0633%" height="15" fill="rgb(227,1,9)" fg:x="15076" fg:w="177"/><text x="5.6432%" y="367.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (177 samples, 0.06%)</title><rect x="5.3932%" y="341" width="0.0633%" height="15" fill="rgb(248,47,43)" fg:x="15076" fg:w="177"/><text x="5.6432%" y="351.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$13::hash_slice(ref$&lt;slice2$ (156 samples, 0.06%)</title><rect x="5.4008%" y="325" width="0.0558%" height="15" fill="rgb(221,10,30)" fg:x="15097" fg:w="156"/><text x="5.6508%" y="335.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (136 samples, 0.05%)</title><rect x="5.4079%" y="309" width="0.0487%" height="15" fill="rgb(210,229,1)" fg:x="15117" fg:w="136"/><text x="5.6579%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (115 samples, 0.04%)</title><rect x="5.4154%" y="293" width="0.0411%" height="15" fill="rgb(222,148,37)" fg:x="15138" fg:w="115"/><text x="5.6654%" y="303.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (115 samples, 0.04%)</title><rect x="5.4154%" y="277" width="0.0411%" height="15" fill="rgb(234,67,33)" fg:x="15138" fg:w="115"/><text x="5.6654%" y="287.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (41 samples, 0.01%)</title><rect x="5.4719%" y="325" width="0.0147%" height="15" fill="rgb(247,98,35)" fg:x="15296" fg:w="41"/><text x="5.7219%" y="335.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (40 samples, 0.01%)</title><rect x="5.4723%" y="309" width="0.0143%" height="15" fill="rgb(247,138,52)" fg:x="15297" fg:w="40"/><text x="5.7223%" y="319.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (38 samples, 0.01%)</title><rect x="5.5038%" y="309" width="0.0136%" height="15" fill="rgb(213,79,30)" fg:x="15385" fg:w="38"/><text x="5.7538%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::d_rounds (127 samples, 0.05%)</title><rect x="5.4866%" y="325" width="0.0454%" height="15" fill="rgb(246,177,23)" fg:x="15337" fg:w="127"/><text x="5.7366%" y="335.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::wrapping_add (41 samples, 0.01%)</title><rect x="5.5174%" y="309" width="0.0147%" height="15" fill="rgb(230,62,27)" fg:x="15423" fg:w="41"/><text x="5.7674%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (76 samples, 0.03%)</title><rect x="5.5599%" y="277" width="0.0272%" height="15" fill="rgb(216,154,8)" fg:x="15542" fg:w="76"/><text x="5.8099%" y="287.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::wrapping_add (36 samples, 0.01%)</title><rect x="5.5743%" y="261" width="0.0129%" height="15" fill="rgb(244,35,45)" fg:x="15582" fg:w="36"/><text x="5.8243%" y="271.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;array$&lt;usize,2&gt;,tuple$ (605 samples, 0.22%)</title><rect x="5.3796%" y="405" width="0.2164%" height="15" fill="rgb(251,115,12)" fg:x="15038" fg:w="605"/><text x="5.6296%" y="415.50"></text></g><g><title>ant_colony.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;array$&lt;usize,2&gt; &gt; &gt; (605 samples, 0.22%)</title><rect x="5.3796%" y="389" width="0.2164%" height="15" fill="rgb(240,54,50)" fg:x="15038" fg:w="605"/><text x="5.6296%" y="399.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::finish (365 samples, 0.13%)</title><rect x="5.4655%" y="373" width="0.1306%" height="15" fill="rgb(233,84,52)" fg:x="15278" fg:w="365"/><text x="5.7155%" y="383.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::finish (365 samples, 0.13%)</title><rect x="5.4655%" y="357" width="0.1306%" height="15" fill="rgb(207,117,47)" fg:x="15278" fg:w="365"/><text x="5.7155%" y="367.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (365 samples, 0.13%)</title><rect x="5.4655%" y="341" width="0.1306%" height="15" fill="rgb(249,43,39)" fg:x="15278" fg:w="365"/><text x="5.7155%" y="351.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (179 samples, 0.06%)</title><rect x="5.5320%" y="325" width="0.0640%" height="15" fill="rgb(209,38,44)" fg:x="15464" fg:w="179"/><text x="5.7820%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (144 samples, 0.05%)</title><rect x="5.5446%" y="309" width="0.0515%" height="15" fill="rgb(236,212,23)" fg:x="15499" fg:w="144"/><text x="5.7946%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (144 samples, 0.05%)</title><rect x="5.5446%" y="293" width="0.0515%" height="15" fill="rgb(242,79,21)" fg:x="15499" fg:w="144"/><text x="5.7946%" y="303.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (42 samples, 0.02%)</title><rect x="5.6039%" y="389" width="0.0150%" height="15" fill="rgb(211,96,35)" fg:x="15665" fg:w="42"/><text x="5.8539%" y="399.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (42 samples, 0.02%)</title><rect x="5.6039%" y="373" width="0.0150%" height="15" fill="rgb(253,215,40)" fg:x="15665" fg:w="42"/><text x="5.8539%" y="383.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (62 samples, 0.02%)</title><rect x="5.6190%" y="389" width="0.0222%" height="15" fill="rgb(211,81,21)" fg:x="15707" fg:w="62"/><text x="5.8690%" y="399.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_insert_slot_in_group (41 samples, 0.01%)</title><rect x="5.6412%" y="389" width="0.0147%" height="15" fill="rgb(208,190,38)" fg:x="15769" fg:w="41"/><text x="5.8912%" y="399.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::fix_insert_slot (40 samples, 0.01%)</title><rect x="5.6558%" y="389" width="0.0143%" height="15" fill="rgb(235,213,38)" fg:x="15810" fg:w="40"/><text x="5.9058%" y="399.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::is_bucket_full (40 samples, 0.01%)</title><rect x="5.6558%" y="373" width="0.0143%" height="15" fill="rgb(237,122,38)" fg:x="15810" fg:w="40"/><text x="5.9058%" y="383.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::is_full (40 samples, 0.01%)</title><rect x="5.6558%" y="357" width="0.0143%" height="15" fill="rgb(244,218,35)" fg:x="15810" fg:w="40"/><text x="5.9058%" y="367.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::find_or_find_insert_slot (817 samples, 0.29%)</title><rect x="5.3789%" y="437" width="0.2923%" height="15" fill="rgb(240,68,47)" fg:x="15036" fg:w="817"/><text x="5.6289%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;array$&lt;usize,2&gt;,tuple$ (817 samples, 0.29%)</title><rect x="5.3789%" y="421" width="0.2923%" height="15" fill="rgb(210,16,53)" fg:x="15036" fg:w="817"/><text x="5.6289%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (210 samples, 0.08%)</title><rect x="5.5961%" y="405" width="0.0751%" height="15" fill="rgb(235,124,12)" fg:x="15643" fg:w="210"/><text x="5.8461%" y="415.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt; &gt;::write(tuple$&lt;array$&lt;usize,2&gt;,tuple$ (78 samples, 0.03%)</title><rect x="5.6712%" y="421" width="0.0279%" height="15" fill="rgb(224,169,11)" fg:x="15853" fg:w="78"/><text x="5.9212%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt; &gt;::as_ptr (78 samples, 0.03%)</title><rect x="5.6712%" y="405" width="0.0279%" height="15" fill="rgb(250,166,2)" fg:x="15853" fg:w="78"/><text x="5.9212%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::write(tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;*, tuple$&lt;array$&lt;usize,2&gt;,tuple$ (74 samples, 0.03%)</title><rect x="5.6726%" y="389" width="0.0265%" height="15" fill="rgb(242,216,29)" fg:x="15857" fg:w="74"/><text x="5.9226%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1,038 samples, 0.37%)</title><rect x="5.3539%" y="485" width="0.3713%" height="15" fill="rgb(230,116,27)" fg:x="14966" fg:w="1038"/><text x="5.6039%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (1,037 samples, 0.37%)</title><rect x="5.3542%" y="469" width="0.3710%" height="15" fill="rgb(228,99,48)" fg:x="14967" fg:w="1037"/><text x="5.6042%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;(unsigned long long[2], tuple$ (1,028 samples, 0.37%)</title><rect x="5.3575%" y="453" width="0.3678%" height="15" fill="rgb(253,11,6)" fg:x="14976" fg:w="1028"/><text x="5.6075%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$&lt;array$&lt;usize,2&gt;,tuple$ (151 samples, 0.05%)</title><rect x="5.6712%" y="437" width="0.0540%" height="15" fill="rgb(247,143,39)" fg:x="15853" fg:w="151"/><text x="5.9212%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::record_item_insert_at (60 samples, 0.02%)</title><rect x="5.7038%" y="421" width="0.0215%" height="15" fill="rgb(236,97,10)" fg:x="15944" fg:w="60"/><text x="5.9538%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::set_ctrl_hash (32 samples, 0.01%)</title><rect x="5.7138%" y="405" width="0.0114%" height="15" fill="rgb(233,208,19)" fg:x="15972" fg:w="32"/><text x="5.9638%" y="415.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::set_ctrl (32 samples, 0.01%)</title><rect x="5.7138%" y="389" width="0.0114%" height="15" fill="rgb(216,164,2)" fg:x="15972" fg:w="32"/><text x="5.9638%" y="399.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_empty (39 samples, 0.01%)</title><rect x="5.8232%" y="437" width="0.0140%" height="15" fill="rgb(220,129,5)" fg:x="16278" fg:w="39"/><text x="6.0732%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (39 samples, 0.01%)</title><rect x="5.8232%" y="421" width="0.0140%" height="15" fill="rgb(242,17,10)" fg:x="16278" fg:w="39"/><text x="6.0732%" y="431.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (39 samples, 0.01%)</title><rect x="5.8232%" y="405" width="0.0140%" height="15" fill="rgb(242,107,0)" fg:x="16278" fg:w="39"/><text x="6.0732%" y="415.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (425 samples, 0.15%)</title><rect x="5.8372%" y="437" width="0.1520%" height="15" fill="rgb(251,28,31)" fg:x="16317" fg:w="425"/><text x="6.0872%" y="447.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (425 samples, 0.15%)</title><rect x="5.8372%" y="421" width="0.1520%" height="15" fill="rgb(233,223,10)" fg:x="16317" fg:w="425"/><text x="6.0872%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::probe_seq (52 samples, 0.02%)</title><rect x="5.9896%" y="437" width="0.0186%" height="15" fill="rgb(215,21,27)" fg:x="16743" fg:w="52"/><text x="6.2396%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;*, tuple$&lt;array$&lt;usize,2&gt;,tuple$ (810 samples, 0.29%)</title><rect x="6.0082%" y="421" width="0.2898%" height="15" fill="rgb(232,23,21)" fg:x="16795" fg:w="810"/><text x="6.2582%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::impl$0::equivalent (810 samples, 0.29%)</title><rect x="6.0082%" y="405" width="0.2898%" height="15" fill="rgb(244,5,23)" fg:x="16795" fg:w="810"/><text x="6.2582%" y="415.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$9::eq (810 samples, 0.29%)</title><rect x="6.0082%" y="389" width="0.2898%" height="15" fill="rgb(226,81,46)" fg:x="16795" fg:w="810"/><text x="6.2582%" y="399.50"></text></g><g><title>ant_colony.exe`core::array::equality::impl$0::eq (810 samples, 0.29%)</title><rect x="6.0082%" y="373" width="0.2898%" height="15" fill="rgb(247,70,30)" fg:x="16795" fg:w="810"/><text x="6.2582%" y="383.50"></text></g><g><title>ant_colony.exe`core::array::equality::impl$9::spec_eq (810 samples, 0.29%)</title><rect x="6.0082%" y="357" width="0.2898%" height="15" fill="rgb(212,68,19)" fg:x="16795" fg:w="810"/><text x="6.2582%" y="367.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$ (1,495 samples, 0.53%)</title><rect x="5.7757%" y="469" width="0.5348%" height="15" fill="rgb(240,187,13)" fg:x="16145" fg:w="1495"/><text x="6.0257%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1,484 samples, 0.53%)</title><rect x="5.7796%" y="453" width="0.5309%" height="15" fill="rgb(223,113,26)" fg:x="16156" fg:w="1484"/><text x="6.0296%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$ (845 samples, 0.30%)</title><rect x="6.0082%" y="437" width="0.3023%" height="15" fill="rgb(206,192,2)" fg:x="16795" fg:w="845"/><text x="6.2582%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt; &gt;::as_ref (35 samples, 0.01%)</title><rect x="6.2980%" y="421" width="0.0125%" height="15" fill="rgb(241,108,4)" fg:x="17605" fg:w="35"/><text x="6.5480%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt; &gt;::as_ptr (35 samples, 0.01%)</title><rect x="6.2980%" y="405" width="0.0125%" height="15" fill="rgb(247,173,49)" fg:x="17605" fg:w="35"/><text x="6.5480%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;array$&lt;usize,2&gt;,tuple$ (35 samples, 0.01%)</title><rect x="6.2980%" y="389" width="0.0125%" height="15" fill="rgb(224,114,35)" fg:x="17605" fg:w="35"/><text x="6.5480%" y="399.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::remove_entry&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt; &gt;(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;array$&lt;usize,2&gt;,array$&lt;usize,2&gt;,tuple$ (1,694 samples, 0.61%)</title><rect x="5.7252%" y="485" width="0.6060%" height="15" fill="rgb(245,159,27)" fg:x="16004" fg:w="1694"/><text x="5.9752%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::remove(hashbrown::raw::Bucket&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$ (58 samples, 0.02%)</title><rect x="6.3105%" y="469" width="0.0207%" height="15" fill="rgb(245,172,44)" fg:x="17640" fg:w="58"/><text x="6.5605%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::erase_no_drop(hashbrown::raw::Bucket&lt;tuple$&lt;array$&lt;usize,2&gt;,tuple$ (49 samples, 0.02%)</title><rect x="6.3137%" y="453" width="0.0175%" height="15" fill="rgb(236,23,11)" fg:x="17649" fg:w="49"/><text x="6.5637%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::erase (49 samples, 0.02%)</title><rect x="6.3137%" y="437" width="0.0175%" height="15" fill="rgb(205,117,38)" fg:x="17649" fg:w="49"/><text x="6.5637%" y="447.50"></text></g><g><title>ant_colony.exe`std::collections::hash::set::HashSet&lt;array$&lt;usize,2&gt;,std::hash::random::RandomState&gt;::insert (92 samples, 0.03%)</title><rect x="6.3312%" y="485" width="0.0329%" height="15" fill="rgb(237,72,25)" fg:x="17698" fg:w="92"/><text x="6.5812%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::set::HashSet&lt;array$&lt;usize,2&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert (92 samples, 0.03%)</title><rect x="6.3312%" y="469" width="0.0329%" height="15" fill="rgb(244,70,9)" fg:x="17698" fg:w="92"/><text x="6.5812%" y="479.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (67 samples, 0.02%)</title><rect x="6.4450%" y="277" width="0.0240%" height="15" fill="rgb(217,125,39)" fg:x="18016" fg:w="67"/><text x="6.6950%" y="287.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (32 samples, 0.01%)</title><rect x="6.4575%" y="261" width="0.0114%" height="15" fill="rgb(235,36,10)" fg:x="18051" fg:w="32"/><text x="6.7075%" y="271.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$5::hash (324 samples, 0.12%)</title><rect x="6.3659%" y="389" width="0.1159%" height="15" fill="rgb(251,123,47)" fg:x="17795" fg:w="324"/><text x="6.6159%" y="399.50"></text></g><g><title>ant_colony.exe`core::array::impl$11::hash (324 samples, 0.12%)</title><rect x="6.3659%" y="373" width="0.1159%" height="15" fill="rgb(221,13,13)" fg:x="17795" fg:w="324"/><text x="6.6159%" y="383.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$4::hash(ref$&lt;slice2$ (324 samples, 0.12%)</title><rect x="6.3659%" y="357" width="0.1159%" height="15" fill="rgb(238,131,9)" fg:x="17795" fg:w="324"/><text x="6.6159%" y="367.50"></text></g><g><title>ant_colony.exe`core::hash::impls::impl$13::hash_slice(ref$&lt;slice2$ (297 samples, 0.11%)</title><rect x="6.3756%" y="341" width="0.1062%" height="15" fill="rgb(211,50,8)" fg:x="17822" fg:w="297"/><text x="6.6256%" y="351.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (253 samples, 0.09%)</title><rect x="6.3913%" y="325" width="0.0905%" height="15" fill="rgb(245,182,24)" fg:x="17866" fg:w="253"/><text x="6.6413%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (215 samples, 0.08%)</title><rect x="6.4049%" y="309" width="0.0769%" height="15" fill="rgb(242,14,37)" fg:x="17904" fg:w="215"/><text x="6.6549%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (215 samples, 0.08%)</title><rect x="6.4049%" y="293" width="0.0769%" height="15" fill="rgb(246,228,12)" fg:x="17904" fg:w="215"/><text x="6.6549%" y="303.50"></text></g><g><title>ant_colony.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (36 samples, 0.01%)</title><rect x="6.4690%" y="277" width="0.0129%" height="15" fill="rgb(213,55,15)" fg:x="18083" fg:w="36"/><text x="6.7190%" y="287.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$1::build_hasher (35 samples, 0.01%)</title><rect x="6.4818%" y="389" width="0.0125%" height="15" fill="rgb(209,9,3)" fg:x="18119" fg:w="35"/><text x="6.7318%" y="399.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (71 samples, 0.03%)</title><rect x="6.5122%" y="325" width="0.0254%" height="15" fill="rgb(230,59,30)" fg:x="18204" fg:w="71"/><text x="6.7622%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (72 samples, 0.03%)</title><rect x="6.5122%" y="341" width="0.0258%" height="15" fill="rgb(209,121,21)" fg:x="18204" fg:w="72"/><text x="6.7622%" y="351.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (39 samples, 0.01%)</title><rect x="6.5620%" y="325" width="0.0140%" height="15" fill="rgb(220,109,13)" fg:x="18343" fg:w="39"/><text x="6.8120%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::d_rounds (186 samples, 0.07%)</title><rect x="6.5380%" y="341" width="0.0665%" height="15" fill="rgb(232,18,1)" fg:x="18276" fg:w="186"/><text x="6.7880%" y="351.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::wrapping_add (80 samples, 0.03%)</title><rect x="6.5759%" y="325" width="0.0286%" height="15" fill="rgb(215,41,42)" fg:x="18382" fg:w="80"/><text x="6.8259%" y="335.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (37 samples, 0.01%)</title><rect x="6.6629%" y="277" width="0.0132%" height="15" fill="rgb(224,123,36)" fg:x="18625" fg:w="37"/><text x="6.9129%" y="287.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$8::c_rounds (115 samples, 0.04%)</title><rect x="6.6553%" y="293" width="0.0411%" height="15" fill="rgb(240,125,3)" fg:x="18604" fg:w="115"/><text x="6.9053%" y="303.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::wrapping_add (57 samples, 0.02%)</title><rect x="6.6761%" y="277" width="0.0204%" height="15" fill="rgb(205,98,50)" fg:x="18662" fg:w="57"/><text x="6.9261%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::update_adjset (13,736 samples, 4.91%)</title><rect x="1.8048%" y="501" width="4.9139%" height="15" fill="rgb(205,185,37)" fg:x="5045" fg:w="13736"/><text x="2.0548%" y="511.50">ant_co..</text></g><g><title>ant_colony.exe`std::collections::hash::set::HashSet&lt;array$&lt;usize,2&gt;,std::hash::random::RandomState&gt;::remove (991 samples, 0.35%)</title><rect x="6.3641%" y="485" width="0.3545%" height="15" fill="rgb(238,207,15)" fg:x="17790" fg:w="991"/><text x="6.6141%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::set::HashSet&lt;array$&lt;usize,2&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::remove (991 samples, 0.35%)</title><rect x="6.3641%" y="469" width="0.3545%" height="15" fill="rgb(213,199,42)" fg:x="17790" fg:w="991"/><text x="6.6141%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::remove (991 samples, 0.35%)</title><rect x="6.3641%" y="453" width="0.3545%" height="15" fill="rgb(235,201,11)" fg:x="17790" fg:w="991"/><text x="6.6141%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;array$&lt;usize,2&gt;,tuple$&lt;&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::remove_entry (991 samples, 0.35%)</title><rect x="6.3641%" y="437" width="0.3545%" height="15" fill="rgb(207,46,11)" fg:x="17790" fg:w="991"/><text x="6.6141%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash (990 samples, 0.35%)</title><rect x="6.3645%" y="421" width="0.3542%" height="15" fill="rgb(241,35,35)" fg:x="17791" fg:w="990"/><text x="6.6145%" y="431.50"></text></g><g><title>ant_colony.exe`core::hash::BuildHasher::hash_one (990 samples, 0.35%)</title><rect x="6.3645%" y="405" width="0.3542%" height="15" fill="rgb(243,32,47)" fg:x="17791" fg:w="990"/><text x="6.6145%" y="415.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::finish (627 samples, 0.22%)</title><rect x="6.4944%" y="389" width="0.2243%" height="15" fill="rgb(247,202,23)" fg:x="18154" fg:w="627"/><text x="6.7444%" y="399.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::finish (627 samples, 0.22%)</title><rect x="6.4944%" y="373" width="0.2243%" height="15" fill="rgb(219,102,11)" fg:x="18154" fg:w="627"/><text x="6.7444%" y="383.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (627 samples, 0.22%)</title><rect x="6.4944%" y="357" width="0.2243%" height="15" fill="rgb(243,110,44)" fg:x="18154" fg:w="627"/><text x="6.7444%" y="367.50"></text></g><g><title>ant_colony.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (319 samples, 0.11%)</title><rect x="6.6045%" y="341" width="0.1141%" height="15" fill="rgb(222,74,54)" fg:x="18462" fg:w="319"/><text x="6.8545%" y="351.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (252 samples, 0.09%)</title><rect x="6.6285%" y="325" width="0.0901%" height="15" fill="rgb(216,99,12)" fg:x="18529" fg:w="252"/><text x="6.8785%" y="335.50"></text></g><g><title>ant_colony.exe`core::hash::sip::impl$5::write(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (252 samples, 0.09%)</title><rect x="6.6285%" y="309" width="0.0901%" height="15" fill="rgb(226,22,26)" fg:x="18529" fg:w="252"/><text x="6.8785%" y="319.50"></text></g><g><title>ant_colony.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (62 samples, 0.02%)</title><rect x="6.6965%" y="293" width="0.0222%" height="15" fill="rgb(217,163,10)" fg:x="18719" fg:w="62"/><text x="6.9465%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::update_tau (78 samples, 0.03%)</title><rect x="6.7187%" y="501" width="0.0279%" height="15" fill="rgb(213,25,53)" fg:x="18781" fg:w="78"/><text x="6.9687%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::add_child (91 samples, 0.03%)</title><rect x="6.7466%" y="501" width="0.0326%" height="15" fill="rgb(252,105,26)" fg:x="18859" fg:w="91"/><text x="6.9966%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::push (86 samples, 0.03%)</title><rect x="6.7483%" y="485" width="0.0308%" height="15" fill="rgb(220,39,43)" fg:x="18864" fg:w="86"/><text x="6.9983%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (163 samples, 0.06%)</title><rect x="6.9991%" y="485" width="0.0583%" height="15" fill="rgb(229,68,48)" fg:x="19565" fg:w="163"/><text x="7.2491%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (163 samples, 0.06%)</title><rect x="6.9991%" y="469" width="0.0583%" height="15" fill="rgb(252,8,32)" fg:x="19565" fg:w="163"/><text x="7.2491%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (163 samples, 0.06%)</title><rect x="6.9991%" y="453" width="0.0583%" height="15" fill="rgb(223,20,43)" fg:x="19565" fg:w="163"/><text x="7.2491%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (32 samples, 0.01%)</title><rect x="7.3293%" y="37" width="0.0114%" height="15" fill="rgb(229,81,49)" fg:x="20488" fg:w="32"/><text x="7.5793%" y="47.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (49 samples, 0.02%)</title><rect x="7.3272%" y="53" width="0.0175%" height="15" fill="rgb(236,28,36)" fg:x="20482" fg:w="49"/><text x="7.5772%" y="63.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (70 samples, 0.03%)</title><rect x="7.3247%" y="69" width="0.0250%" height="15" fill="rgb(249,185,26)" fg:x="20475" fg:w="70"/><text x="7.5747%" y="79.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (98 samples, 0.04%)</title><rect x="7.3207%" y="85" width="0.0351%" height="15" fill="rgb(249,174,33)" fg:x="20464" fg:w="98"/><text x="7.5707%" y="95.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (127 samples, 0.05%)</title><rect x="7.3172%" y="101" width="0.0454%" height="15" fill="rgb(233,201,37)" fg:x="20454" fg:w="127"/><text x="7.5672%" y="111.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (183 samples, 0.07%)</title><rect x="7.3114%" y="117" width="0.0655%" height="15" fill="rgb(221,78,26)" fg:x="20438" fg:w="183"/><text x="7.5614%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (244 samples, 0.09%)</title><rect x="7.3032%" y="133" width="0.0873%" height="15" fill="rgb(250,127,30)" fg:x="20415" fg:w="244"/><text x="7.5532%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (319 samples, 0.11%)</title><rect x="7.2932%" y="149" width="0.1141%" height="15" fill="rgb(230,49,44)" fg:x="20387" fg:w="319"/><text x="7.5432%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (28 samples, 0.01%)</title><rect x="7.4077%" y="149" width="0.0100%" height="15" fill="rgb(229,67,23)" fg:x="20707" fg:w="28"/><text x="7.6577%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (409 samples, 0.15%)</title><rect x="7.2803%" y="165" width="0.1463%" height="15" fill="rgb(249,83,47)" fg:x="20351" fg:w="409"/><text x="7.5303%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (28 samples, 0.01%)</title><rect x="7.4277%" y="165" width="0.0100%" height="15" fill="rgb(215,43,3)" fg:x="20763" fg:w="28"/><text x="7.6777%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (493 samples, 0.18%)</title><rect x="7.2681%" y="181" width="0.1764%" height="15" fill="rgb(238,154,13)" fg:x="20317" fg:w="493"/><text x="7.5181%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (31 samples, 0.01%)</title><rect x="7.4463%" y="181" width="0.0111%" height="15" fill="rgb(219,56,2)" fg:x="20815" fg:w="31"/><text x="7.6963%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (609 samples, 0.22%)</title><rect x="7.2488%" y="197" width="0.2179%" height="15" fill="rgb(233,0,4)" fg:x="20263" fg:w="609"/><text x="7.4988%" y="207.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (49 samples, 0.02%)</title><rect x="7.4678%" y="197" width="0.0175%" height="15" fill="rgb(235,30,7)" fg:x="20875" fg:w="49"/><text x="7.7178%" y="207.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (728 samples, 0.26%)</title><rect x="7.2338%" y="213" width="0.2604%" height="15" fill="rgb(250,79,13)" fg:x="20221" fg:w="728"/><text x="7.4838%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (35 samples, 0.01%)</title><rect x="7.4949%" y="213" width="0.0125%" height="15" fill="rgb(211,146,34)" fg:x="20951" fg:w="35"/><text x="7.7449%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (846 samples, 0.30%)</title><rect x="7.2159%" y="229" width="0.3026%" height="15" fill="rgb(228,22,38)" fg:x="20171" fg:w="846"/><text x="7.4659%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (32 samples, 0.01%)</title><rect x="7.5203%" y="229" width="0.0114%" height="15" fill="rgb(235,168,5)" fg:x="21022" fg:w="32"/><text x="7.7703%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (970 samples, 0.35%)</title><rect x="7.1959%" y="245" width="0.3470%" height="15" fill="rgb(221,155,16)" fg:x="20115" fg:w="970"/><text x="7.4459%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (40 samples, 0.01%)</title><rect x="7.5436%" y="245" width="0.0143%" height="15" fill="rgb(215,215,53)" fg:x="21087" fg:w="40"/><text x="7.7936%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,107 samples, 0.40%)</title><rect x="7.1741%" y="261" width="0.3960%" height="15" fill="rgb(223,4,10)" fg:x="20054" fg:w="1107"/><text x="7.4241%" y="271.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (35 samples, 0.01%)</title><rect x="7.5715%" y="261" width="0.0125%" height="15" fill="rgb(234,103,6)" fg:x="21165" fg:w="35"/><text x="7.8215%" y="271.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,226 samples, 0.44%)</title><rect x="7.1576%" y="277" width="0.4386%" height="15" fill="rgb(227,97,0)" fg:x="20008" fg:w="1226"/><text x="7.4076%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (30 samples, 0.01%)</title><rect x="7.5973%" y="277" width="0.0107%" height="15" fill="rgb(234,150,53)" fg:x="21237" fg:w="30"/><text x="7.8473%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,341 samples, 0.48%)</title><rect x="7.1390%" y="293" width="0.4797%" height="15" fill="rgb(228,201,54)" fg:x="19956" fg:w="1341"/><text x="7.3890%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (33 samples, 0.01%)</title><rect x="7.6202%" y="293" width="0.0118%" height="15" fill="rgb(222,22,37)" fg:x="21301" fg:w="33"/><text x="7.8702%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,461 samples, 0.52%)</title><rect x="7.1200%" y="309" width="0.5227%" height="15" fill="rgb(237,53,32)" fg:x="19903" fg:w="1461"/><text x="7.3700%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,568 samples, 0.56%)</title><rect x="7.1022%" y="325" width="0.5609%" height="15" fill="rgb(233,25,53)" fg:x="19853" fg:w="1568"/><text x="7.3522%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,676 samples, 0.60%)</title><rect x="7.0825%" y="341" width="0.5996%" height="15" fill="rgb(210,40,34)" fg:x="19798" fg:w="1676"/><text x="7.3325%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,749 samples, 0.63%)</title><rect x="7.0725%" y="357" width="0.6257%" height="15" fill="rgb(241,220,44)" fg:x="19770" fg:w="1749"/><text x="7.3225%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,801 samples, 0.64%)</title><rect x="7.0639%" y="373" width="0.6443%" height="15" fill="rgb(235,28,35)" fg:x="19746" fg:w="1801"/><text x="7.3139%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,833 samples, 0.66%)</title><rect x="7.0603%" y="389" width="0.6557%" height="15" fill="rgb(210,56,17)" fg:x="19736" fg:w="1833"/><text x="7.3103%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,853 samples, 0.66%)</title><rect x="7.0574%" y="405" width="0.6629%" height="15" fill="rgb(224,130,29)" fg:x="19728" fg:w="1853"/><text x="7.3074%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;array$ (1,857 samples, 0.66%)</title><rect x="7.0574%" y="485" width="0.6643%" height="15" fill="rgb(235,212,8)" fg:x="19728" fg:w="1857"/><text x="7.3074%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;array$ (1,857 samples, 0.66%)</title><rect x="7.0574%" y="469" width="0.6643%" height="15" fill="rgb(223,33,50)" fg:x="19728" fg:w="1857"/><text x="7.3074%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_slice (1,857 samples, 0.66%)</title><rect x="7.0574%" y="453" width="0.6643%" height="15" fill="rgb(219,149,13)" fg:x="19728" fg:w="1857"/><text x="7.3074%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,857 samples, 0.66%)</title><rect x="7.0574%" y="437" width="0.6643%" height="15" fill="rgb(250,156,29)" fg:x="19728" fg:w="1857"/><text x="7.3074%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,857 samples, 0.66%)</title><rect x="7.0574%" y="421" width="0.6643%" height="15" fill="rgb(216,193,19)" fg:x="19728" fg:w="1857"/><text x="7.3074%" y="431.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::disto_approx(ant_colony::graph::Graph*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, ant_colony::aco2::TarjanSolver*, alloc::vec::Vec (2,649 samples, 0.95%)</title><rect x="6.7791%" y="501" width="0.9476%" height="15" fill="rgb(216,135,14)" fg:x="18950" fg:w="2649"/><text x="7.0291%" y="511.50"></text></g><g><title>`0x7FF8903E2769 (44 samples, 0.02%)</title><rect x="7.7457%" y="405" width="0.0157%" height="15" fill="rgb(241,47,5)" fg:x="21652" fg:w="44"/><text x="7.9957%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (67 samples, 0.02%)</title><rect x="8.0054%" y="389" width="0.0240%" height="15" fill="rgb(233,42,35)" fg:x="22378" fg:w="67"/><text x="8.2554%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (67 samples, 0.02%)</title><rect x="8.0054%" y="373" width="0.0240%" height="15" fill="rgb(231,13,6)" fg:x="22378" fg:w="67"/><text x="8.2554%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (67 samples, 0.02%)</title><rect x="8.0054%" y="357" width="0.0240%" height="15" fill="rgb(207,181,40)" fg:x="22378" fg:w="67"/><text x="8.2554%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (451 samples, 0.16%)</title><rect x="8.0341%" y="389" width="0.1613%" height="15" fill="rgb(254,173,49)" fg:x="22458" fg:w="451"/><text x="8.2841%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,257 samples, 0.45%)</title><rect x="7.7615%" y="405" width="0.4497%" height="15" fill="rgb(221,1,38)" fg:x="21696" fg:w="1257"/><text x="8.0115%" y="415.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (44 samples, 0.02%)</title><rect x="8.1954%" y="389" width="0.0157%" height="15" fill="rgb(206,124,46)" fg:x="22909" fg:w="44"/><text x="8.4454%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (44 samples, 0.02%)</title><rect x="8.1954%" y="373" width="0.0157%" height="15" fill="rgb(249,21,11)" fg:x="22909" fg:w="44"/><text x="8.4454%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (1,303 samples, 0.47%)</title><rect x="7.7457%" y="421" width="0.4661%" height="15" fill="rgb(222,201,40)" fg:x="21652" fg:w="1303"/><text x="7.9957%" y="431.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (1,440 samples, 0.52%)</title><rect x="7.7289%" y="437" width="0.5151%" height="15" fill="rgb(235,61,29)" fg:x="21605" fg:w="1440"/><text x="7.9789%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (90 samples, 0.03%)</title><rect x="8.2119%" y="421" width="0.0322%" height="15" fill="rgb(219,207,3)" fg:x="22955" fg:w="90"/><text x="8.4619%" y="431.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (90 samples, 0.03%)</title><rect x="8.2119%" y="405" width="0.0322%" height="15" fill="rgb(222,56,46)" fg:x="22955" fg:w="90"/><text x="8.4619%" y="415.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (90 samples, 0.03%)</title><rect x="8.2119%" y="389" width="0.0322%" height="15" fill="rgb(239,76,54)" fg:x="22955" fg:w="90"/><text x="8.4619%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (234 samples, 0.08%)</title><rect x="8.2440%" y="421" width="0.0837%" height="15" fill="rgb(231,124,27)" fg:x="23045" fg:w="234"/><text x="8.4940%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (234 samples, 0.08%)</title><rect x="8.2440%" y="405" width="0.0837%" height="15" fill="rgb(249,195,6)" fg:x="23045" fg:w="234"/><text x="8.4940%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (234 samples, 0.08%)</title><rect x="8.2440%" y="389" width="0.0837%" height="15" fill="rgb(237,174,47)" fg:x="23045" fg:w="234"/><text x="8.4940%" y="399.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (234 samples, 0.08%)</title><rect x="8.2440%" y="373" width="0.0837%" height="15" fill="rgb(206,201,31)" fg:x="23045" fg:w="234"/><text x="8.4940%" y="383.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (234 samples, 0.08%)</title><rect x="8.2440%" y="357" width="0.0837%" height="15" fill="rgb(231,57,52)" fg:x="23045" fg:w="234"/><text x="8.4940%" y="367.50"></text></g><g><title>`0x7FF8903E2769 (234 samples, 0.08%)</title><rect x="8.2440%" y="341" width="0.0837%" height="15" fill="rgb(248,177,22)" fg:x="23045" fg:w="234"/><text x="8.4940%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1,205 samples, 0.43%)</title><rect x="9.8753%" y="341" width="0.4311%" height="15" fill="rgb(215,211,37)" fg:x="27605" fg:w="1205"/><text x="10.1253%" y="351.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (1,205 samples, 0.43%)</title><rect x="9.8753%" y="325" width="0.4311%" height="15" fill="rgb(241,128,51)" fg:x="27605" fg:w="1205"/><text x="10.1253%" y="335.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1,205 samples, 0.43%)</title><rect x="9.8753%" y="309" width="0.4311%" height="15" fill="rgb(227,165,31)" fg:x="27605" fg:w="1205"/><text x="10.1253%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (58 samples, 0.02%)</title><rect x="10.3064%" y="341" width="0.0207%" height="15" fill="rgb(228,167,24)" fg:x="28810" fg:w="58"/><text x="10.5564%" y="351.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (58 samples, 0.02%)</title><rect x="10.3064%" y="325" width="0.0207%" height="15" fill="rgb(228,143,12)" fg:x="28810" fg:w="58"/><text x="10.5564%" y="335.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (58 samples, 0.02%)</title><rect x="10.3064%" y="309" width="0.0207%" height="15" fill="rgb(249,149,8)" fg:x="28810" fg:w="58"/><text x="10.5564%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (2,320 samples, 0.83%)</title><rect x="10.3272%" y="341" width="0.8299%" height="15" fill="rgb(243,35,44)" fg:x="28868" fg:w="2320"/><text x="10.5772%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (8,492 samples, 3.04%)</title><rect x="8.3363%" y="357" width="3.0379%" height="15" fill="rgb(246,89,9)" fg:x="23303" fg:w="8492"/><text x="8.5863%" y="367.50">ant..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (607 samples, 0.22%)</title><rect x="11.1571%" y="341" width="0.2171%" height="15" fill="rgb(233,213,13)" fg:x="31188" fg:w="607"/><text x="11.4071%" y="351.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (607 samples, 0.22%)</title><rect x="11.1571%" y="325" width="0.2171%" height="15" fill="rgb(233,141,41)" fg:x="31188" fg:w="607"/><text x="11.4071%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (8,759 samples, 3.13%)</title><rect x="8.2440%" y="437" width="3.1334%" height="15" fill="rgb(239,167,4)" fg:x="23045" fg:w="8759"/><text x="8.4940%" y="447.50">ant..</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (8,525 samples, 3.05%)</title><rect x="8.3278%" y="421" width="3.0497%" height="15" fill="rgb(209,217,16)" fg:x="23279" fg:w="8525"/><text x="8.5778%" y="431.50">ant..</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (8,525 samples, 3.05%)</title><rect x="8.3278%" y="405" width="3.0497%" height="15" fill="rgb(219,88,35)" fg:x="23279" fg:w="8525"/><text x="8.5778%" y="415.50">ant..</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (8,525 samples, 3.05%)</title><rect x="8.3278%" y="389" width="3.0497%" height="15" fill="rgb(220,193,23)" fg:x="23279" fg:w="8525"/><text x="8.5778%" y="399.50">ant..</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (8,525 samples, 3.05%)</title><rect x="8.3278%" y="373" width="3.0497%" height="15" fill="rgb(230,90,52)" fg:x="23279" fg:w="8525"/><text x="8.5778%" y="383.50">ant..</text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::to_graph (29 samples, 0.01%)</title><rect x="11.3775%" y="437" width="0.0104%" height="15" fill="rgb(252,106,19)" fg:x="31804" fg:w="29"/><text x="11.6275%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (29 samples, 0.01%)</title><rect x="11.3775%" y="421" width="0.0104%" height="15" fill="rgb(206,74,20)" fg:x="31804" fg:w="29"/><text x="11.6275%" y="431.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::distorsion (10,231 samples, 3.66%)</title><rect x="7.7285%" y="453" width="3.6600%" height="15" fill="rgb(230,138,44)" fg:x="21604" fg:w="10231"/><text x="7.9785%" y="463.50">ant_..</text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::launch (31,364 samples, 11.22%)</title><rect x="0.1689%" y="517" width="11.2201%" height="15" fill="rgb(235,182,43)" fg:x="472" fg:w="31364"/><text x="0.4189%" y="527.50">ant_colony.exe`an..</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (10,232 samples, 3.66%)</title><rect x="7.7285%" y="501" width="3.6604%" height="15" fill="rgb(242,16,51)" fg:x="21604" fg:w="10232"/><text x="7.9785%" y="511.50">ant_..</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec (10,232 samples, 3.66%)</title><rect x="7.7285%" y="485" width="3.6604%" height="15" fill="rgb(248,9,4)" fg:x="21604" fg:w="10232"/><text x="7.9785%" y="495.50">ant_..</text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::vec::Vec (10,232 samples, 3.66%)</title><rect x="7.7285%" y="469" width="3.6604%" height="15" fill="rgb(210,31,22)" fg:x="21604" fg:w="10232"/><text x="7.9785%" y="479.50">ant_..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;usize,u32&gt;,alloc::alloc::Global&gt;::grow_one&lt;petgraph::graph_impl::Node&lt;usize,u32&gt;,alloc::alloc::Global&gt; (31 samples, 0.01%)</title><rect x="11.5263%" y="485" width="0.0111%" height="15" fill="rgb(239,54,39)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (31 samples, 0.01%)</title><rect x="11.5263%" y="469" width="0.0111%" height="15" fill="rgb(230,99,41)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (31 samples, 0.01%)</title><rect x="11.5263%" y="453" width="0.0111%" height="15" fill="rgb(253,106,12)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="463.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (31 samples, 0.01%)</title><rect x="11.5263%" y="437" width="0.0111%" height="15" fill="rgb(213,46,41)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (31 samples, 0.01%)</title><rect x="11.5263%" y="421" width="0.0111%" height="15" fill="rgb(215,133,35)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (31 samples, 0.01%)</title><rect x="11.5263%" y="405" width="0.0111%" height="15" fill="rgb(213,28,5)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (31 samples, 0.01%)</title><rect x="11.5263%" y="389" width="0.0111%" height="15" fill="rgb(215,77,49)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="399.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (31 samples, 0.01%)</title><rect x="11.5263%" y="373" width="0.0111%" height="15" fill="rgb(248,100,22)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="383.50"></text></g><g><title>`0x7FF90A6A8F8D (31 samples, 0.01%)</title><rect x="11.5263%" y="357" width="0.0111%" height="15" fill="rgb(208,67,9)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="367.50"></text></g><g><title>`0x7FF90A6A9235 (31 samples, 0.01%)</title><rect x="11.5263%" y="341" width="0.0111%" height="15" fill="rgb(219,133,21)" fg:x="32220" fg:w="31"/><text x="11.7763%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (44 samples, 0.02%)</title><rect x="11.5259%" y="501" width="0.0157%" height="15" fill="rgb(246,46,29)" fg:x="32219" fg:w="44"/><text x="11.7759%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::gain_of_edge (3,483 samples, 1.25%)</title><rect x="15.9805%" y="485" width="1.2460%" height="15" fill="rgb(246,185,52)" fg:x="44671" fg:w="3483"/><text x="16.2305%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (855 samples, 0.31%)</title><rect x="16.9206%" y="469" width="0.3059%" height="15" fill="rgb(252,136,11)" fg:x="47299" fg:w="855"/><text x="17.1706%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (855 samples, 0.31%)</title><rect x="16.9206%" y="453" width="0.3059%" height="15" fill="rgb(219,138,53)" fg:x="47299" fg:w="855"/><text x="17.1706%" y="463.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (855 samples, 0.31%)</title><rect x="16.9206%" y="437" width="0.3059%" height="15" fill="rgb(211,51,23)" fg:x="47299" fg:w="855"/><text x="17.1706%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (649 samples, 0.23%)</title><rect x="17.2265%" y="453" width="0.2322%" height="15" fill="rgb(247,221,28)" fg:x="48154" fg:w="649"/><text x="17.4765%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;array$ (1,541 samples, 0.55%)</title><rect x="17.2265%" y="485" width="0.5513%" height="15" fill="rgb(251,222,45)" fg:x="48154" fg:w="1541"/><text x="17.4765%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (1,541 samples, 0.55%)</title><rect x="17.2265%" y="469" width="0.5513%" height="15" fill="rgb(217,162,53)" fg:x="48154" fg:w="1541"/><text x="17.4765%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (892 samples, 0.32%)</title><rect x="17.4586%" y="453" width="0.3191%" height="15" fill="rgb(229,93,14)" fg:x="48803" fg:w="892"/><text x="17.7086%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (65 samples, 0.02%)</title><rect x="17.7785%" y="469" width="0.0233%" height="15" fill="rgb(209,67,49)" fg:x="49697" fg:w="65"/><text x="18.0285%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::get_chosen_edge (43,516 samples, 15.57%)</title><rect x="11.5442%" y="501" width="15.5673%" height="15" fill="rgb(213,87,29)" fg:x="32270" fg:w="43516"/><text x="11.7942%" y="511.50">ant_colony.exe`ant_colon..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (26,091 samples, 9.33%)</title><rect x="17.7777%" y="485" width="9.3337%" height="15" fill="rgb(205,151,52)" fg:x="49695" fg:w="26091"/><text x="18.0277%" y="495.50">ant_colony.ex..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (26,024 samples, 9.31%)</title><rect x="17.8017%" y="469" width="9.3097%" height="15" fill="rgb(253,215,39)" fg:x="49762" fg:w="26024"/><text x="18.0517%" y="479.50">ant_colony.ex..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (58 samples, 0.02%)</title><rect x="27.1254%" y="485" width="0.0207%" height="15" fill="rgb(221,220,41)" fg:x="75825" fg:w="58"/><text x="27.3754%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::read (28 samples, 0.01%)</title><rect x="27.1361%" y="469" width="0.0100%" height="15" fill="rgb(218,133,21)" fg:x="75855" fg:w="28"/><text x="27.3861%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::set_len (79 samples, 0.03%)</title><rect x="32.6456%" y="453" width="0.0283%" height="15" fill="rgb(221,193,43)" fg:x="91256" fg:w="79"/><text x="32.8956%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (475 samples, 0.17%)</title><rect x="32.5741%" y="469" width="0.1699%" height="15" fill="rgb(240,128,52)" fg:x="91056" fg:w="475"/><text x="32.8241%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (196 samples, 0.07%)</title><rect x="32.6739%" y="453" width="0.0701%" height="15" fill="rgb(253,114,12)" fg:x="91335" fg:w="196"/><text x="32.9239%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges1 (17,644 samples, 6.31%)</title><rect x="27.1515%" y="485" width="6.3119%" height="15" fill="rgb(215,223,47)" fg:x="75898" fg:w="17644"/><text x="27.4015%" y="495.50">ant_colo..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;array$ (2,011 samples, 0.72%)</title><rect x="32.7440%" y="469" width="0.7194%" height="15" fill="rgb(248,225,23)" fg:x="91531" fg:w="2011"/><text x="32.9940%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;array$ (2,011 samples, 0.72%)</title><rect x="32.7440%" y="453" width="0.7194%" height="15" fill="rgb(250,108,0)" fg:x="91531" fg:w="2011"/><text x="32.9940%" y="463.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;array$ (2,011 samples, 0.72%)</title><rect x="32.7440%" y="437" width="0.7194%" height="15" fill="rgb(228,208,7)" fg:x="91531" fg:w="2011"/><text x="32.9940%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (129 samples, 0.05%)</title><rect x="33.4999%" y="469" width="0.0461%" height="15" fill="rgb(244,45,10)" fg:x="93644" fg:w="129"/><text x="33.7499%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (72 samples, 0.03%)</title><rect x="33.5461%" y="437" width="0.0258%" height="15" fill="rgb(207,125,25)" fg:x="93773" fg:w="72"/><text x="33.7961%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (80 samples, 0.03%)</title><rect x="33.5461%" y="469" width="0.0286%" height="15" fill="rgb(210,195,18)" fg:x="93773" fg:w="80"/><text x="33.7961%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (80 samples, 0.03%)</title><rect x="33.5461%" y="453" width="0.0286%" height="15" fill="rgb(249,80,12)" fg:x="93773" fg:w="80"/><text x="33.7961%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (974 samples, 0.35%)</title><rect x="33.5747%" y="469" width="0.3484%" height="15" fill="rgb(221,65,9)" fg:x="93853" fg:w="974"/><text x="33.8247%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges (19,176 samples, 6.86%)</title><rect x="27.1129%" y="501" width="6.8600%" height="15" fill="rgb(235,49,36)" fg:x="75790" fg:w="19176"/><text x="27.3629%" y="511.50">ant_colon..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges2 (1,424 samples, 0.51%)</title><rect x="33.4634%" y="485" width="0.5094%" height="15" fill="rgb(225,32,20)" fg:x="93542" fg:w="1424"/><text x="33.7134%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (139 samples, 0.05%)</title><rect x="33.9231%" y="469" width="0.0497%" height="15" fill="rgb(215,141,46)" fg:x="94827" fg:w="139"/><text x="34.1731%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (137 samples, 0.05%)</title><rect x="33.9238%" y="453" width="0.0490%" height="15" fill="rgb(250,160,47)" fg:x="94829" fg:w="137"/><text x="34.1738%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (520 samples, 0.19%)</title><rect x="33.9728%" y="501" width="0.1860%" height="15" fill="rgb(216,222,40)" fg:x="94966" fg:w="520"/><text x="34.2228%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::clear (60 samples, 0.02%)</title><rect x="34.1589%" y="501" width="0.0215%" height="15" fill="rgb(234,217,39)" fg:x="95486" fg:w="60"/><text x="34.4089%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx2(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (768 samples, 0.27%)</title><rect x="34.1803%" y="485" width="0.2747%" height="15" fill="rgb(207,178,40)" fg:x="95546" fg:w="768"/><text x="34.4303%" y="495.50"></text></g><g><title>`0x7FF8903E2769 (4,341 samples, 1.55%)</title><rect x="34.4558%" y="469" width="1.5529%" height="15" fill="rgb(221,136,13)" fg:x="96316" fg:w="4341"/><text x="34.7058%" y="479.50"></text></g><g><title>`0x7FF90A6F53FD (127 samples, 0.05%)</title><rect x="36.0152%" y="405" width="0.0454%" height="15" fill="rgb(249,199,10)" fg:x="100675" fg:w="127"/><text x="36.2652%" y="415.50"></text></g><g><title>`0x7FF90A6F54B4 (76 samples, 0.03%)</title><rect x="36.0753%" y="405" width="0.0272%" height="15" fill="rgb(249,222,13)" fg:x="100843" fg:w="76"/><text x="36.3253%" y="415.50"></text></g><g><title>`0x7FF90A66FADF (67 samples, 0.02%)</title><rect x="65.9749%" y="277" width="0.0240%" height="15" fill="rgb(244,185,38)" fg:x="184423" fg:w="67"/><text x="66.2249%" y="287.50"></text></g><g><title>`0x7FF90A7C81EC (61 samples, 0.02%)</title><rect x="66.0193%" y="261" width="0.0218%" height="15" fill="rgb(236,202,9)" fg:x="184547" fg:w="61"/><text x="66.2693%" y="271.50"></text></g><g><title>`0x7FF90A67002D (68 samples, 0.02%)</title><rect x="66.0186%" y="277" width="0.0243%" height="15" fill="rgb(250,229,37)" fg:x="184545" fg:w="68"/><text x="66.2686%" y="287.50"></text></g><g><title>`0x7FF90A66F2A4 (210 samples, 0.08%)</title><rect x="65.9681%" y="293" width="0.0751%" height="15" fill="rgb(206,174,23)" fg:x="184404" fg:w="210"/><text x="66.2181%" y="303.50"></text></g><g><title>`0x7FF90A66F164 (216 samples, 0.08%)</title><rect x="65.9663%" y="309" width="0.0773%" height="15" fill="rgb(211,33,43)" fg:x="184399" fg:w="216"/><text x="66.2163%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (228 samples, 0.08%)</title><rect x="65.9645%" y="389" width="0.0816%" height="15" fill="rgb(245,58,50)" fg:x="184394" fg:w="228"/><text x="66.2145%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (228 samples, 0.08%)</title><rect x="65.9645%" y="373" width="0.0816%" height="15" fill="rgb(244,68,36)" fg:x="184394" fg:w="228"/><text x="66.2145%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (228 samples, 0.08%)</title><rect x="65.9645%" y="357" width="0.0816%" height="15" fill="rgb(232,229,15)" fg:x="184394" fg:w="228"/><text x="66.2145%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (228 samples, 0.08%)</title><rect x="65.9645%" y="341" width="0.0816%" height="15" fill="rgb(254,30,23)" fg:x="184394" fg:w="228"/><text x="66.2145%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (228 samples, 0.08%)</title><rect x="65.9645%" y="325" width="0.0816%" height="15" fill="rgb(235,160,14)" fg:x="184394" fg:w="228"/><text x="66.2145%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (13,458 samples, 4.81%)</title><rect x="66.0461%" y="389" width="4.8144%" height="15" fill="rgb(212,155,44)" fg:x="184622" fg:w="13458"/><text x="66.2961%" y="399.50">ant_co..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (13,458 samples, 4.81%)</title><rect x="66.0461%" y="373" width="4.8144%" height="15" fill="rgb(226,2,50)" fg:x="184622" fg:w="13458"/><text x="66.2961%" y="383.50">ant_co..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (13,458 samples, 4.81%)</title><rect x="66.0461%" y="357" width="4.8144%" height="15" fill="rgb(234,177,6)" fg:x="184622" fg:w="13458"/><text x="66.2961%" y="367.50">ant_co..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (1,794 samples, 0.64%)</title><rect x="70.8605%" y="389" width="0.6418%" height="15" fill="rgb(217,24,9)" fg:x="198080" fg:w="1794"/><text x="71.1105%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (1,794 samples, 0.64%)</title><rect x="70.8605%" y="373" width="0.6418%" height="15" fill="rgb(220,13,46)" fg:x="198080" fg:w="1794"/><text x="71.1105%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (1,794 samples, 0.64%)</title><rect x="70.8605%" y="357" width="0.6418%" height="15" fill="rgb(239,221,27)" fg:x="198080" fg:w="1794"/><text x="71.1105%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (1,529 samples, 0.55%)</title><rect x="91.3353%" y="373" width="0.5470%" height="15" fill="rgb(222,198,25)" fg:x="255314" fg:w="1529"/><text x="91.5853%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (1,529 samples, 0.55%)</title><rect x="91.3353%" y="357" width="0.5470%" height="15" fill="rgb(211,99,13)" fg:x="255314" fg:w="1529"/><text x="91.5853%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (1,529 samples, 0.55%)</title><rect x="91.3353%" y="341" width="0.5470%" height="15" fill="rgb(232,111,31)" fg:x="255314" fg:w="1529"/><text x="91.5853%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (58,054 samples, 20.77%)</title><rect x="71.5023%" y="389" width="20.7681%" height="15" fill="rgb(245,82,37)" fg:x="199874" fg:w="58054"/><text x="71.7523%" y="399.50">ant_colony.exe`ant_colony::graph:..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (1,085 samples, 0.39%)</title><rect x="91.8822%" y="373" width="0.3881%" height="15" fill="rgb(227,149,46)" fg:x="256843" fg:w="1085"/><text x="92.1322%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (748 samples, 0.27%)</title><rect x="92.0028%" y="357" width="0.2676%" height="15" fill="rgb(218,36,50)" fg:x="257180" fg:w="748"/><text x="92.2528%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (748 samples, 0.27%)</title><rect x="92.0028%" y="341" width="0.2676%" height="15" fill="rgb(226,80,48)" fg:x="257180" fg:w="748"/><text x="92.2528%" y="351.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (748 samples, 0.27%)</title><rect x="92.0028%" y="325" width="0.2676%" height="15" fill="rgb(238,224,15)" fg:x="257180" fg:w="748"/><text x="92.2528%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (161,975 samples, 57.94%)</title><rect x="36.1268%" y="405" width="57.9444%" height="15" fill="rgb(241,136,10)" fg:x="100987" fg:w="161975"/><text x="36.3768%" y="415.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (5,030 samples, 1.80%)</title><rect x="92.2718%" y="389" width="1.7994%" height="15" fill="rgb(208,32,45)" fg:x="257932" fg:w="5030"/><text x="92.5218%" y="399.50">a..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (5,030 samples, 1.80%)</title><rect x="92.2718%" y="373" width="1.7994%" height="15" fill="rgb(207,135,9)" fg:x="257932" fg:w="5030"/><text x="92.5218%" y="383.50">a..</text></g><g><title>`0x7FF909E53F99 (59 samples, 0.02%)</title><rect x="94.0952%" y="373" width="0.0211%" height="15" fill="rgb(206,86,44)" fg:x="263029" fg:w="59"/><text x="94.3452%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (167,635 samples, 59.97%)</title><rect x="34.1803%" y="501" width="59.9692%" height="15" fill="rgb(245,177,15)" fg:x="95546" fg:w="167635"/><text x="34.4303%" y="511.50">ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (166,867 samples, 59.69%)</title><rect x="34.4551%" y="485" width="59.6945%" height="15" fill="rgb(206,64,50)" fg:x="96314" fg:w="166867"/><text x="34.7051%" y="495.50">ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (162,524 samples, 58.14%)</title><rect x="36.0087%" y="469" width="58.1408%" height="15" fill="rgb(234,36,40)" fg:x="100657" fg:w="162524"/><text x="36.2587%" y="479.50">ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (162,524 samples, 58.14%)</title><rect x="36.0087%" y="453" width="58.1408%" height="15" fill="rgb(213,64,8)" fg:x="100657" fg:w="162524"/><text x="36.2587%" y="463.50">ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (162,521 samples, 58.14%)</title><rect x="36.0098%" y="437" width="58.1398%" height="15" fill="rgb(210,75,36)" fg:x="100660" fg:w="162521"/><text x="36.2598%" y="447.50">ant_colony.exe`core::iter::range::impl$43::forward_unchecked</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (162,521 samples, 58.14%)</title><rect x="36.0098%" y="421" width="58.1398%" height="15" fill="rgb(229,88,21)" fg:x="100660" fg:w="162521"/><text x="36.2598%" y="431.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (219 samples, 0.08%)</title><rect x="94.0712%" y="405" width="0.0783%" height="15" fill="rgb(252,204,47)" fg:x="262962" fg:w="219"/><text x="94.3212%" y="415.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (164 samples, 0.06%)</title><rect x="94.0909%" y="389" width="0.0587%" height="15" fill="rgb(208,77,27)" fg:x="263017" fg:w="164"/><text x="94.3409%" y="399.50"></text></g><g><title>`0x7FF909E53F9D (93 samples, 0.03%)</title><rect x="94.1163%" y="373" width="0.0333%" height="15" fill="rgb(221,76,26)" fg:x="263088" fg:w="93"/><text x="94.3663%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (115 samples, 0.04%)</title><rect x="94.1496%" y="485" width="0.0411%" height="15" fill="rgb(225,139,18)" fg:x="263181" fg:w="115"/><text x="94.3996%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (115 samples, 0.04%)</title><rect x="94.1496%" y="469" width="0.0411%" height="15" fill="rgb(230,137,11)" fg:x="263181" fg:w="115"/><text x="94.3996%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (115 samples, 0.04%)</title><rect x="94.1496%" y="453" width="0.0411%" height="15" fill="rgb(212,28,1)" fg:x="263181" fg:w="115"/><text x="94.3996%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (115 samples, 0.04%)</title><rect x="94.1496%" y="437" width="0.0411%" height="15" fill="rgb(248,164,17)" fg:x="263181" fg:w="115"/><text x="94.3996%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (115 samples, 0.04%)</title><rect x="94.1496%" y="421" width="0.0411%" height="15" fill="rgb(222,171,42)" fg:x="263181" fg:w="115"/><text x="94.3996%" y="431.50"></text></g><g><title>`0x7FF8903E2769 (115 samples, 0.04%)</title><rect x="94.1496%" y="405" width="0.0411%" height="15" fill="rgb(243,84,45)" fg:x="263181" fg:w="115"/><text x="94.3996%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (124 samples, 0.04%)</title><rect x="94.4733%" y="405" width="0.0444%" height="15" fill="rgb(252,49,23)" fg:x="264086" fg:w="124"/><text x="94.7233%" y="415.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (124 samples, 0.04%)</title><rect x="94.4733%" y="389" width="0.0444%" height="15" fill="rgb(215,19,7)" fg:x="264086" fg:w="124"/><text x="94.7233%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (124 samples, 0.04%)</title><rect x="94.4733%" y="373" width="0.0444%" height="15" fill="rgb(238,81,41)" fg:x="264086" fg:w="124"/><text x="94.7233%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (583 samples, 0.21%)</title><rect x="94.5227%" y="405" width="0.2086%" height="15" fill="rgb(210,199,37)" fg:x="264224" fg:w="583"/><text x="94.7727%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,558 samples, 0.56%)</title><rect x="94.1921%" y="421" width="0.5574%" height="15" fill="rgb(244,192,49)" fg:x="263300" fg:w="1558"/><text x="94.4421%" y="431.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (51 samples, 0.02%)</title><rect x="94.7313%" y="405" width="0.0182%" height="15" fill="rgb(226,211,11)" fg:x="264807" fg:w="51"/><text x="94.9813%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (51 samples, 0.02%)</title><rect x="94.7313%" y="389" width="0.0182%" height="15" fill="rgb(236,162,54)" fg:x="264807" fg:w="51"/><text x="94.9813%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (1,678 samples, 0.60%)</title><rect x="94.1496%" y="501" width="0.6003%" height="15" fill="rgb(220,229,9)" fg:x="263181" fg:w="1678"/><text x="94.3996%" y="511.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (1,563 samples, 0.56%)</title><rect x="94.1907%" y="485" width="0.5591%" height="15" fill="rgb(250,87,22)" fg:x="263296" fg:w="1563"/><text x="94.4407%" y="495.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1,563 samples, 0.56%)</title><rect x="94.1907%" y="469" width="0.5591%" height="15" fill="rgb(239,43,17)" fg:x="263296" fg:w="1563"/><text x="94.4407%" y="479.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (1,563 samples, 0.56%)</title><rect x="94.1907%" y="453" width="0.5591%" height="15" fill="rgb(231,177,25)" fg:x="263296" fg:w="1563"/><text x="94.4407%" y="463.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (1,563 samples, 0.56%)</title><rect x="94.1907%" y="437" width="0.5591%" height="15" fill="rgb(219,179,1)" fg:x="263296" fg:w="1563"/><text x="94.4407%" y="447.50"></text></g><g><title>`0x7FF8903E143E (62 samples, 0.02%)</title><rect x="94.7588%" y="437" width="0.0222%" height="15" fill="rgb(238,219,53)" fg:x="264884" fg:w="62"/><text x="95.0088%" y="447.50"></text></g><g><title>`0x7FF8903E1446 (119 samples, 0.04%)</title><rect x="94.7810%" y="437" width="0.0426%" height="15" fill="rgb(232,167,36)" fg:x="264946" fg:w="119"/><text x="95.0310%" y="447.50"></text></g><g><title>`0x7FF8903E145E (50 samples, 0.02%)</title><rect x="94.8261%" y="437" width="0.0179%" height="15" fill="rgb(244,19,51)" fg:x="265072" fg:w="50"/><text x="95.0761%" y="447.50"></text></g><g><title>`0x7FF8903E1466 (82 samples, 0.03%)</title><rect x="94.8439%" y="437" width="0.0293%" height="15" fill="rgb(224,6,22)" fg:x="265122" fg:w="82"/><text x="95.0939%" y="447.50"></text></g><g><title>`0x7FF8903E1423 (28 samples, 0.01%)</title><rect x="94.8826%" y="405" width="0.0100%" height="15" fill="rgb(224,145,5)" fg:x="265230" fg:w="28"/><text x="95.1326%" y="415.50"></text></g><g><title>`0x7FF8903E143E (217 samples, 0.08%)</title><rect x="94.9012%" y="405" width="0.0776%" height="15" fill="rgb(234,130,49)" fg:x="265282" fg:w="217"/><text x="95.1512%" y="415.50"></text></g><g><title>`0x7FF8903E1446 (106 samples, 0.04%)</title><rect x="94.9788%" y="405" width="0.0379%" height="15" fill="rgb(254,6,2)" fg:x="265499" fg:w="106"/><text x="95.2288%" y="415.50"></text></g><g><title>`0x7FF8903E1456 (69 samples, 0.02%)</title><rect x="95.0178%" y="405" width="0.0247%" height="15" fill="rgb(208,96,46)" fg:x="265608" fg:w="69"/><text x="95.2678%" y="415.50"></text></g><g><title>`0x7FF8903E145E (526 samples, 0.19%)</title><rect x="95.0425%" y="405" width="0.1882%" height="15" fill="rgb(239,3,39)" fg:x="265677" fg:w="526"/><text x="95.2925%" y="415.50"></text></g><g><title>`0x7FF8903E1466 (967 samples, 0.35%)</title><rect x="95.2307%" y="405" width="0.3459%" height="15" fill="rgb(233,210,1)" fg:x="266203" fg:w="967"/><text x="95.4807%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::impl$5::clone (2,321 samples, 0.83%)</title><rect x="94.7549%" y="501" width="0.8303%" height="15" fill="rgb(244,137,37)" fg:x="264873" fg:w="2321"/><text x="95.0049%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (2,321 samples, 0.83%)</title><rect x="94.7549%" y="485" width="0.8303%" height="15" fill="rgb(240,136,2)" fg:x="264873" fg:w="2321"/><text x="95.0049%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2,321 samples, 0.83%)</title><rect x="94.7549%" y="469" width="0.8303%" height="15" fill="rgb(239,18,37)" fg:x="264873" fg:w="2321"/><text x="95.0049%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$ (2,321 samples, 0.83%)</title><rect x="94.7549%" y="453" width="0.8303%" height="15" fill="rgb(218,185,22)" fg:x="264873" fg:w="2321"/><text x="95.0049%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (1,984 samples, 0.71%)</title><rect x="94.8754%" y="437" width="0.7098%" height="15" fill="rgb(225,218,4)" fg:x="265210" fg:w="1984"/><text x="95.1254%" y="447.50"></text></g><g><title>ant_colony.exe`core::intrinsics::copy_nonoverlapping (1,984 samples, 0.71%)</title><rect x="94.8754%" y="421" width="0.7098%" height="15" fill="rgb(230,182,32)" fg:x="265210" fg:w="1984"/><text x="95.1254%" y="431.50"></text></g><g><title>ant_colony.exe`core::f64::impl$0::clamp (78 samples, 0.03%)</title><rect x="95.5852%" y="501" width="0.0279%" height="15" fill="rgb(242,56,43)" fg:x="267194" fg:w="78"/><text x="95.8352%" y="511.50"></text></g><g><title>`0x7FF8903E2769 (41 samples, 0.01%)</title><rect x="95.6277%" y="421" width="0.0147%" height="15" fill="rgb(233,99,24)" fg:x="267313" fg:w="41"/><text x="95.8777%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (141 samples, 0.05%)</title><rect x="95.9236%" y="405" width="0.0504%" height="15" fill="rgb(234,209,42)" fg:x="268140" fg:w="141"/><text x="96.1736%" y="415.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (141 samples, 0.05%)</title><rect x="95.9236%" y="389" width="0.0504%" height="15" fill="rgb(227,7,12)" fg:x="268140" fg:w="141"/><text x="96.1736%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (141 samples, 0.05%)</title><rect x="95.9236%" y="373" width="0.0504%" height="15" fill="rgb(245,203,43)" fg:x="268140" fg:w="141"/><text x="96.1736%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (599 samples, 0.21%)</title><rect x="95.9808%" y="405" width="0.2143%" height="15" fill="rgb(238,205,33)" fg:x="268300" fg:w="599"/><text x="96.2308%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (1,644 samples, 0.59%)</title><rect x="95.6277%" y="437" width="0.5881%" height="15" fill="rgb(231,56,7)" fg:x="267313" fg:w="1644"/><text x="95.8777%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,601 samples, 0.57%)</title><rect x="95.6431%" y="421" width="0.5727%" height="15" fill="rgb(244,186,29)" fg:x="267356" fg:w="1601"/><text x="95.8931%" y="431.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (58 samples, 0.02%)</title><rect x="96.1951%" y="405" width="0.0207%" height="15" fill="rgb(234,111,31)" fg:x="268899" fg:w="58"/><text x="96.4451%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (58 samples, 0.02%)</title><rect x="96.1951%" y="389" width="0.0207%" height="15" fill="rgb(241,149,10)" fg:x="268899" fg:w="58"/><text x="96.4451%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (1,776 samples, 0.64%)</title><rect x="95.6131%" y="501" width="0.6353%" height="15" fill="rgb(249,206,44)" fg:x="267272" fg:w="1776"/><text x="95.8631%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1,776 samples, 0.64%)</title><rect x="95.6131%" y="485" width="0.6353%" height="15" fill="rgb(251,153,30)" fg:x="267272" fg:w="1776"/><text x="95.8631%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1,776 samples, 0.64%)</title><rect x="95.6131%" y="469" width="0.6353%" height="15" fill="rgb(239,152,38)" fg:x="267272" fg:w="1776"/><text x="95.8631%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (1,776 samples, 0.64%)</title><rect x="95.6131%" y="453" width="0.6353%" height="15" fill="rgb(249,139,47)" fg:x="267272" fg:w="1776"/><text x="95.8631%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (91 samples, 0.03%)</title><rect x="96.2159%" y="437" width="0.0326%" height="15" fill="rgb(244,64,35)" fg:x="268957" fg:w="91"/><text x="96.4659%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (91 samples, 0.03%)</title><rect x="96.2159%" y="421" width="0.0326%" height="15" fill="rgb(216,46,15)" fg:x="268957" fg:w="91"/><text x="96.4659%" y="431.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (91 samples, 0.03%)</title><rect x="96.2159%" y="405" width="0.0326%" height="15" fill="rgb(250,74,19)" fg:x="268957" fg:w="91"/><text x="96.4659%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::launch (237,220 samples, 84.86%)</title><rect x="11.3889%" y="517" width="84.8624%" height="15" fill="rgb(249,42,33)" fg:x="31836" fg:w="237220"/><text x="11.6389%" y="527.50">ant_colony.exe`ant_colony::graph::ACO::launch</text></g><g><title>`0x7FF8903E143E (280 samples, 0.10%)</title><rect x="96.2599%" y="501" width="0.1002%" height="15" fill="rgb(242,149,17)" fg:x="269080" fg:w="280"/><text x="96.5099%" y="511.50"></text></g><g><title>`0x7FF8903E1446 (178 samples, 0.06%)</title><rect x="96.3600%" y="501" width="0.0637%" height="15" fill="rgb(244,29,21)" fg:x="269360" fg:w="178"/><text x="96.6100%" y="511.50"></text></g><g><title>`0x7FF8903E145E (105 samples, 0.04%)</title><rect x="96.4276%" y="501" width="0.0376%" height="15" fill="rgb(220,130,37)" fg:x="269549" fg:w="105"/><text x="96.6776%" y="511.50"></text></g><g><title>`0x7FF8903E1466 (197 samples, 0.07%)</title><rect x="96.4652%" y="501" width="0.0705%" height="15" fill="rgb(211,67,2)" fg:x="269654" fg:w="197"/><text x="96.7152%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::impl$5::clone (806 samples, 0.29%)</title><rect x="96.2513%" y="517" width="0.2883%" height="15" fill="rgb(235,68,52)" fg:x="269056" fg:w="806"/><text x="96.5013%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_with (196 samples, 0.07%)</title><rect x="96.5460%" y="453" width="0.0701%" height="15" fill="rgb(246,142,3)" fg:x="269880" fg:w="196"/><text x="96.7960%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::write (196 samples, 0.07%)</title><rect x="96.5460%" y="437" width="0.0701%" height="15" fill="rgb(241,25,7)" fg:x="269880" fg:w="196"/><text x="96.7960%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (433 samples, 0.15%)</title><rect x="96.5460%" y="485" width="0.1549%" height="15" fill="rgb(242,119,39)" fg:x="269880" fg:w="433"/><text x="96.7960%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (433 samples, 0.15%)</title><rect x="96.5460%" y="469" width="0.1549%" height="15" fill="rgb(241,98,45)" fg:x="269880" fg:w="433"/><text x="96.7960%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (237 samples, 0.08%)</title><rect x="96.6162%" y="453" width="0.0848%" height="15" fill="rgb(254,28,30)" fg:x="270076" fg:w="237"/><text x="96.8662%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (237 samples, 0.08%)</title><rect x="96.6162%" y="437" width="0.0848%" height="15" fill="rgb(241,142,54)" fg:x="270076" fg:w="237"/><text x="96.8662%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (237 samples, 0.08%)</title><rect x="96.6162%" y="421" width="0.0848%" height="15" fill="rgb(222,85,15)" fg:x="270076" fg:w="237"/><text x="96.8662%" y="431.50"></text></g><g><title>`0x7FF8903E2769 (237 samples, 0.08%)</title><rect x="96.6162%" y="405" width="0.0848%" height="15" fill="rgb(210,85,47)" fg:x="270076" fg:w="237"/><text x="96.8662%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::new(ant_colony::graph::Graph, unsigned long long, double, double, double, double, double, unsigned long long, enum2$&lt;core::option::Option&lt;ant_colony::graph::RootedTree&gt; &gt;, alloc::vec::Vec (455 samples, 0.16%)</title><rect x="96.5400%" y="501" width="0.1628%" height="15" fill="rgb(224,206,25)" fg:x="269863" fg:w="455"/><text x="96.7900%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_with (204 samples, 0.07%)</title><rect x="96.7070%" y="453" width="0.0730%" height="15" fill="rgb(243,201,19)" fg:x="270330" fg:w="204"/><text x="96.9570%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::write (204 samples, 0.07%)</title><rect x="96.7070%" y="437" width="0.0730%" height="15" fill="rgb(236,59,4)" fg:x="270330" fg:w="204"/><text x="96.9570%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (320 samples, 0.11%)</title><rect x="96.7070%" y="485" width="0.1145%" height="15" fill="rgb(254,179,45)" fg:x="270330" fg:w="320"/><text x="96.9570%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (320 samples, 0.11%)</title><rect x="96.7070%" y="469" width="0.1145%" height="15" fill="rgb(226,14,10)" fg:x="270330" fg:w="320"/><text x="96.9570%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (116 samples, 0.04%)</title><rect x="96.7800%" y="453" width="0.0415%" height="15" fill="rgb(244,27,41)" fg:x="270534" fg:w="116"/><text x="97.0300%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (116 samples, 0.04%)</title><rect x="96.7800%" y="437" width="0.0415%" height="15" fill="rgb(235,35,32)" fg:x="270534" fg:w="116"/><text x="97.0300%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (116 samples, 0.04%)</title><rect x="96.7800%" y="421" width="0.0415%" height="15" fill="rgb(218,68,31)" fg:x="270534" fg:w="116"/><text x="97.0300%" y="431.50"></text></g><g><title>`0x7FF8903E2769 (116 samples, 0.04%)</title><rect x="96.7800%" y="405" width="0.0415%" height="15" fill="rgb(207,120,37)" fg:x="270534" fg:w="116"/><text x="97.0300%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (115 samples, 0.04%)</title><rect x="96.8222%" y="469" width="0.0411%" height="15" fill="rgb(227,98,0)" fg:x="270652" fg:w="115"/><text x="97.0722%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (115 samples, 0.04%)</title><rect x="96.8222%" y="453" width="0.0411%" height="15" fill="rgb(207,7,3)" fg:x="270652" fg:w="115"/><text x="97.0722%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (115 samples, 0.04%)</title><rect x="96.8222%" y="437" width="0.0411%" height="15" fill="rgb(206,98,19)" fg:x="270652" fg:w="115"/><text x="97.0722%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (115 samples, 0.04%)</title><rect x="96.8222%" y="421" width="0.0411%" height="15" fill="rgb(217,5,26)" fg:x="270652" fg:w="115"/><text x="97.0722%" y="431.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (115 samples, 0.04%)</title><rect x="96.8222%" y="405" width="0.0411%" height="15" fill="rgb(235,190,38)" fg:x="270652" fg:w="115"/><text x="97.0722%" y="415.50"></text></g><g><title>`0x7FF8903E2769 (115 samples, 0.04%)</title><rect x="96.8222%" y="389" width="0.0411%" height="15" fill="rgb(247,86,24)" fg:x="270652" fg:w="115"/><text x="97.0722%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1,256 samples, 0.45%)</title><rect x="98.0811%" y="389" width="0.4493%" height="15" fill="rgb(205,101,16)" fg:x="274171" fg:w="1256"/><text x="98.3311%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (1,256 samples, 0.45%)</title><rect x="98.0811%" y="373" width="0.4493%" height="15" fill="rgb(246,168,33)" fg:x="274171" fg:w="1256"/><text x="98.3311%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1,256 samples, 0.45%)</title><rect x="98.0811%" y="357" width="0.4493%" height="15" fill="rgb(231,114,1)" fg:x="274171" fg:w="1256"/><text x="98.3311%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (57 samples, 0.02%)</title><rect x="98.5304%" y="389" width="0.0204%" height="15" fill="rgb(207,184,53)" fg:x="275427" fg:w="57"/><text x="98.7804%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (57 samples, 0.02%)</title><rect x="98.5304%" y="373" width="0.0204%" height="15" fill="rgb(224,95,51)" fg:x="275427" fg:w="57"/><text x="98.7804%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (57 samples, 0.02%)</title><rect x="98.5304%" y="357" width="0.0204%" height="15" fill="rgb(212,188,45)" fg:x="275427" fg:w="57"/><text x="98.7804%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (1,932 samples, 0.69%)</title><rect x="98.5508%" y="389" width="0.6911%" height="15" fill="rgb(223,154,38)" fg:x="275484" fg:w="1932"/><text x="98.8008%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (7,267 samples, 2.60%)</title><rect x="96.8673%" y="405" width="2.5997%" height="15" fill="rgb(251,22,52)" fg:x="270778" fg:w="7267"/><text x="97.1173%" y="415.50">an..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (629 samples, 0.23%)</title><rect x="99.2420%" y="389" width="0.2250%" height="15" fill="rgb(229,209,22)" fg:x="277416" fg:w="629"/><text x="99.4920%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (629 samples, 0.23%)</title><rect x="99.2420%" y="373" width="0.2250%" height="15" fill="rgb(234,138,34)" fg:x="277416" fg:w="629"/><text x="99.4920%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (7,394 samples, 2.65%)</title><rect x="96.8222%" y="485" width="2.6451%" height="15" fill="rgb(212,95,11)" fg:x="270652" fg:w="7394"/><text x="97.0722%" y="495.50">an..</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (7,279 samples, 2.60%)</title><rect x="96.8634%" y="469" width="2.6040%" height="15" fill="rgb(240,179,47)" fg:x="270767" fg:w="7279"/><text x="97.1134%" y="479.50">an..</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (7,279 samples, 2.60%)</title><rect x="96.8634%" y="453" width="2.6040%" height="15" fill="rgb(240,163,11)" fg:x="270767" fg:w="7279"/><text x="97.1134%" y="463.50">an..</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (7,279 samples, 2.60%)</title><rect x="96.8634%" y="437" width="2.6040%" height="15" fill="rgb(236,37,12)" fg:x="270767" fg:w="7279"/><text x="97.1134%" y="447.50">an..</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (7,279 samples, 2.60%)</title><rect x="96.8634%" y="421" width="2.6040%" height="15" fill="rgb(232,164,16)" fg:x="270767" fg:w="7279"/><text x="97.1134%" y="431.50">an..</text></g><g><title>ant_colony.exe`core::fmt::Arguments::new_const(ref$ (8,188 samples, 2.93%)</title><rect x="96.5396%" y="517" width="2.9292%" height="15" fill="rgb(244,205,15)" fg:x="269862" fg:w="8188"/><text x="96.7896%" y="527.50">an..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::new(ant_colony::graph::Graph, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, alloc::vec::Vec (7,732 samples, 2.77%)</title><rect x="96.7027%" y="501" width="2.7660%" height="15" fill="rgb(223,117,47)" fg:x="270318" fg:w="7732"/><text x="96.9527%" y="511.50">an..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (36 samples, 0.01%)</title><rect x="99.4888%" y="421" width="0.0129%" height="15" fill="rgb(244,107,35)" fg:x="278106" fg:w="36"/><text x="99.7388%" y="431.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (43 samples, 0.02%)</title><rect x="99.4866%" y="485" width="0.0154%" height="15" fill="rgb(205,140,8)" fg:x="278100" fg:w="43"/><text x="99.7366%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (43 samples, 0.02%)</title><rect x="99.4866%" y="469" width="0.0154%" height="15" fill="rgb(228,84,46)" fg:x="278100" fg:w="43"/><text x="99.7366%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;ref$ (43 samples, 0.02%)</title><rect x="99.4866%" y="453" width="0.0154%" height="15" fill="rgb(254,188,9)" fg:x="278100" fg:w="43"/><text x="99.7366%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (43 samples, 0.02%)</title><rect x="99.4866%" y="437" width="0.0154%" height="15" fill="rgb(206,112,54)" fg:x="278100" fg:w="43"/><text x="99.7366%" y="447.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;, ref$ (89 samples, 0.03%)</title><rect x="99.4777%" y="517" width="0.0318%" height="15" fill="rgb(216,84,49)" fg:x="278075" fg:w="89"/><text x="99.7277%" y="527.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::from_string (89 samples, 0.03%)</title><rect x="99.4777%" y="501" width="0.0318%" height="15" fill="rgb(214,194,35)" fg:x="278075" fg:w="89"/><text x="99.7277%" y="511.50"></text></g><g><title>`0x7FF90A7C7413 (110 samples, 0.04%)</title><rect x="99.5811%" y="261" width="0.0394%" height="15" fill="rgb(249,28,3)" fg:x="278364" fg:w="110"/><text x="99.8311%" y="271.50"></text></g><g><title>`0x7FF90A7C7417 (85 samples, 0.03%)</title><rect x="99.6204%" y="261" width="0.0304%" height="15" fill="rgb(222,56,52)" fg:x="278474" fg:w="85"/><text x="99.8704%" y="271.50"></text></g><g><title>`0x7FF90A6AA199 (206 samples, 0.07%)</title><rect x="99.5800%" y="277" width="0.0737%" height="15" fill="rgb(245,217,50)" fg:x="278361" fg:w="206"/><text x="99.8300%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::grow_one&lt;f64,alloc::alloc::Global&gt; (212 samples, 0.08%)</title><rect x="99.5800%" y="437" width="0.0758%" height="15" fill="rgb(213,201,24)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (212 samples, 0.08%)</title><rect x="99.5800%" y="421" width="0.0758%" height="15" fill="rgb(248,116,28)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (212 samples, 0.08%)</title><rect x="99.5800%" y="405" width="0.0758%" height="15" fill="rgb(219,72,43)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="415.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (212 samples, 0.08%)</title><rect x="99.5800%" y="389" width="0.0758%" height="15" fill="rgb(209,138,14)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (212 samples, 0.08%)</title><rect x="99.5800%" y="373" width="0.0758%" height="15" fill="rgb(222,18,33)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (212 samples, 0.08%)</title><rect x="99.5800%" y="357" width="0.0758%" height="15" fill="rgb(213,199,7)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (212 samples, 0.08%)</title><rect x="99.5800%" y="341" width="0.0758%" height="15" fill="rgb(250,110,10)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="351.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (212 samples, 0.08%)</title><rect x="99.5800%" y="325" width="0.0758%" height="15" fill="rgb(248,123,6)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="335.50"></text></g><g><title>`0x7FF90A6A8F8D (212 samples, 0.08%)</title><rect x="99.5800%" y="309" width="0.0758%" height="15" fill="rgb(206,91,31)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="319.50"></text></g><g><title>`0x7FF90A6A9235 (212 samples, 0.08%)</title><rect x="99.5800%" y="293" width="0.0758%" height="15" fill="rgb(211,154,13)" fg:x="278361" fg:w="212"/><text x="99.8300%" y="303.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (414 samples, 0.15%)</title><rect x="99.5264%" y="453" width="0.1481%" height="15" fill="rgb(225,148,7)" fg:x="278211" fg:w="414"/><text x="99.7764%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::write (52 samples, 0.02%)</title><rect x="99.6559%" y="437" width="0.0186%" height="15" fill="rgb(220,160,43)" fg:x="278573" fg:w="52"/><text x="99.9059%" y="447.50"></text></g><g><title>ant_colony.exe`enum2$&lt;serde_json::de::ParserNumber&gt;::visit(enum2$ (39 samples, 0.01%)</title><rect x="99.7127%" y="373" width="0.0140%" height="15" fill="rgb(213,52,39)" fg:x="278732" fg:w="39"/><text x="99.9627%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_integer&lt;serde_json::read::StrRead&gt; (90 samples, 0.03%)</title><rect x="99.7267%" y="373" width="0.0322%" height="15" fill="rgb(243,137,7)" fg:x="278771" fg:w="90"/><text x="99.9767%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::eat_char (36 samples, 0.01%)</title><rect x="99.8430%" y="341" width="0.0129%" height="15" fill="rgb(230,79,13)" fg:x="279096" fg:w="36"/><text x="100.0930%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::discard (36 samples, 0.01%)</title><rect x="99.8430%" y="325" width="0.0129%" height="15" fill="rgb(247,105,23)" fg:x="279096" fg:w="36"/><text x="100.0930%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::discard (36 samples, 0.01%)</title><rect x="99.8430%" y="309" width="0.0129%" height="15" fill="rgb(223,179,41)" fg:x="279096" fg:w="36"/><text x="100.0930%" y="319.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::f64_from_parts (87 samples, 0.03%)</title><rect x="99.8558%" y="341" width="0.0311%" height="15" fill="rgb(218,9,34)" fg:x="279132" fg:w="87"/><text x="100.1058%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_decimal (231 samples, 0.08%)</title><rect x="99.8315%" y="357" width="0.0826%" height="15" fill="rgb(222,106,8)" fg:x="279064" fg:w="231"/><text x="100.0815%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek_or_null (76 samples, 0.03%)</title><rect x="99.8870%" y="341" width="0.0272%" height="15" fill="rgb(211,220,0)" fg:x="279219" fg:w="76"/><text x="100.1370%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (76 samples, 0.03%)</title><rect x="99.8870%" y="325" width="0.0272%" height="15" fill="rgb(229,52,16)" fg:x="279219" fg:w="76"/><text x="100.1370%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (76 samples, 0.03%)</title><rect x="99.8870%" y="309" width="0.0272%" height="15" fill="rgb(212,155,18)" fg:x="279219" fg:w="76"/><text x="100.1370%" y="319.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (76 samples, 0.03%)</title><rect x="99.8870%" y="293" width="0.0272%" height="15" fill="rgb(242,21,14)" fg:x="279219" fg:w="76"/><text x="100.1370%" y="303.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_number&lt;serde_json::read::StrRead&gt; (470 samples, 0.17%)</title><rect x="99.7589%" y="373" width="0.1681%" height="15" fill="rgb(222,19,48)" fg:x="278861" fg:w="470"/><text x="100.0089%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek_or_null (36 samples, 0.01%)</title><rect x="99.9141%" y="357" width="0.0129%" height="15" fill="rgb(232,45,27)" fg:x="279295" fg:w="36"/><text x="100.1641%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (36 samples, 0.01%)</title><rect x="99.9141%" y="341" width="0.0129%" height="15" fill="rgb(249,103,42)" fg:x="279295" fg:w="36"/><text x="100.1641%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (36 samples, 0.01%)</title><rect x="99.9141%" y="325" width="0.0129%" height="15" fill="rgb(246,81,33)" fg:x="279295" fg:w="36"/><text x="100.1641%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (36 samples, 0.01%)</title><rect x="99.9141%" y="309" width="0.0129%" height="15" fill="rgb(252,33,42)" fg:x="279295" fg:w="36"/><text x="100.1641%" y="319.50"></text></g><g><title>ant_colony.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;f64&gt;, serde_json::de::Deserializer (675 samples, 0.24%)</title><rect x="99.6970%" y="437" width="0.2415%" height="15" fill="rgb(209,212,41)" fg:x="278688" fg:w="675"/><text x="99.9470%" y="447.50"></text></g><g><title>ant_colony.exe`serde::de::impls::impl$76::deserialize(serde_json::de::Deserializer (675 samples, 0.24%)</title><rect x="99.6970%" y="421" width="0.2415%" height="15" fill="rgb(207,154,6)" fg:x="278688" fg:w="675"/><text x="99.9470%" y="431.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$7::deserialize_f64(serde_json::de::Deserializer (675 samples, 0.24%)</title><rect x="99.6970%" y="405" width="0.2415%" height="15" fill="rgb(223,64,47)" fg:x="278688" fg:w="675"/><text x="99.9470%" y="415.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::deserialize_number (675 samples, 0.24%)</title><rect x="99.6970%" y="389" width="0.2415%" height="15" fill="rgb(211,161,38)" fg:x="278688" fg:w="675"/><text x="99.9470%" y="399.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (32 samples, 0.01%)</title><rect x="99.9270%" y="373" width="0.0114%" height="15" fill="rgb(219,138,40)" fg:x="279331" fg:w="32"/><text x="100.1770%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (32 samples, 0.01%)</title><rect x="99.9270%" y="357" width="0.0114%" height="15" fill="rgb(241,228,46)" fg:x="279331" fg:w="32"/><text x="100.1770%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (32 samples, 0.01%)</title><rect x="99.9270%" y="341" width="0.0114%" height="15" fill="rgb(223,209,38)" fg:x="279331" fg:w="32"/><text x="100.1770%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (32 samples, 0.01%)</title><rect x="99.9270%" y="325" width="0.0114%" height="15" fill="rgb(236,164,45)" fg:x="279331" fg:w="32"/><text x="100.1770%" y="335.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,serde_json::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,serde_json::error::Error&gt; &gt;, ref$ (1,272 samples, 0.46%)</title><rect x="99.5095%" y="517" width="0.4550%" height="15" fill="rgb(231,15,5)" fg:x="278164" fg:w="1272"/><text x="99.7595%" y="527.50"></text></g><g><title>ant_colony.exe`serde_json::de::from_trait&lt;serde_json::read::StrRead,alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt; (1,272 samples, 0.46%)</title><rect x="99.5095%" y="501" width="0.4550%" height="15" fill="rgb(252,35,15)" fg:x="278164" fg:w="1272"/><text x="99.7595%" y="511.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$7::deserialize_seq&lt;serde_json::read::StrRead,serde::de::impls::impl$19::deserialize::VecVisitor&lt;f64&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$19::deserialize::VecVisitor (1,272 samples, 0.46%)</title><rect x="99.5095%" y="485" width="0.4550%" height="15" fill="rgb(248,181,18)" fg:x="278164" fg:w="1272"/><text x="99.7595%" y="495.50"></text></g><g><title>ant_colony.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;f64,serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt; &gt;(serde::de::impls::impl$19::deserialize::VecVisitor&lt;f64&gt;, serde_json::de::SeqAccess (1,272 samples, 0.46%)</title><rect x="99.5095%" y="469" width="0.4550%" height="15" fill="rgb(233,39,42)" fg:x="278164" fg:w="1272"/><text x="99.7595%" y="479.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$9::next_element_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;f64&gt; &gt;(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (791 samples, 0.28%)</title><rect x="99.6816%" y="453" width="0.2830%" height="15" fill="rgb(238,110,33)" fg:x="278645" fg:w="791"/><text x="99.9316%" y="463.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$9::next_element_seed::has_next_element(serde_json::de::SeqAccess (73 samples, 0.03%)</title><rect x="99.9385%" y="437" width="0.0261%" height="15" fill="rgb(233,195,10)" fg:x="279363" fg:w="73"/><text x="100.1885%" y="447.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (40 samples, 0.01%)</title><rect x="99.9503%" y="421" width="0.0143%" height="15" fill="rgb(254,105,3)" fg:x="279396" fg:w="40"/><text x="100.2003%" y="431.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (40 samples, 0.01%)</title><rect x="99.9503%" y="405" width="0.0143%" height="15" fill="rgb(221,225,9)" fg:x="279396" fg:w="40"/><text x="100.2003%" y="415.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (40 samples, 0.01%)</title><rect x="99.9503%" y="389" width="0.0143%" height="15" fill="rgb(224,227,45)" fg:x="279396" fg:w="40"/><text x="100.2003%" y="399.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (40 samples, 0.01%)</title><rect x="99.9503%" y="373" width="0.0143%" height="15" fill="rgb(229,198,43)" fg:x="279396" fg:w="40"/><text x="100.2003%" y="383.50"></text></g><g><title>ant_colony.exe`core::result::Result::is_err (28 samples, 0.01%)</title><rect x="99.9653%" y="437" width="0.0100%" height="15" fill="rgb(206,209,35)" fg:x="279438" fg:w="28"/><text x="100.2153%" y="447.50"></text></g><g><title>ant_colony.exe`core::result::Result::is_ok (28 samples, 0.01%)</title><rect x="99.9653%" y="421" width="0.0100%" height="15" fill="rgb(245,195,53)" fg:x="279438" fg:w="28"/><text x="100.2153%" y="431.50"></text></g><g><title>ant_colony.exe`core::str::converts::from_utf8 (28 samples, 0.01%)</title><rect x="99.9653%" y="405" width="0.0100%" height="15" fill="rgb(240,92,26)" fg:x="279438" fg:w="28"/><text x="100.2153%" y="415.50"></text></g><g><title>ant_colony.exe`core::str::validations::run_utf8_validation (28 samples, 0.01%)</title><rect x="99.9653%" y="389" width="0.0100%" height="15" fill="rgb(207,40,23)" fg:x="279438" fg:w="28"/><text x="100.2153%" y="399.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt;, ref$ (97 samples, 0.03%)</title><rect x="99.9649%" y="517" width="0.0347%" height="15" fill="rgb(223,111,35)" fg:x="279437" fg:w="97"/><text x="100.2149%" y="527.50"></text></g><g><title>ant_colony.exe`std::fs::impl$8::read_to_string (97 samples, 0.03%)</title><rect x="99.9649%" y="501" width="0.0347%" height="15" fill="rgb(229,147,28)" fg:x="279437" fg:w="97"/><text x="100.2149%" y="511.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_to_string (97 samples, 0.03%)</title><rect x="99.9649%" y="485" width="0.0347%" height="15" fill="rgb(211,29,28)" fg:x="279437" fg:w="97"/><text x="100.2149%" y="495.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_string (96 samples, 0.03%)</title><rect x="99.9653%" y="469" width="0.0343%" height="15" fill="rgb(228,72,33)" fg:x="279438" fg:w="96"/><text x="100.2153%" y="479.50"></text></g><g><title>ant_colony.exe`std::io::append_to_string (96 samples, 0.03%)</title><rect x="99.9653%" y="453" width="0.0343%" height="15" fill="rgb(205,214,31)" fg:x="279438" fg:w="96"/><text x="100.2153%" y="463.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (68 samples, 0.02%)</title><rect x="99.9753%" y="437" width="0.0243%" height="15" fill="rgb(224,111,15)" fg:x="279466" fg:w="68"/><text x="100.2253%" y="447.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_buf (68 samples, 0.02%)</title><rect x="99.9753%" y="421" width="0.0243%" height="15" fill="rgb(253,21,26)" fg:x="279466" fg:w="68"/><text x="100.2253%" y="431.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::read_buf (68 samples, 0.02%)</title><rect x="99.9753%" y="405" width="0.0243%" height="15" fill="rgb(245,139,43)" fg:x="279466" fg:w="68"/><text x="100.2253%" y="415.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read_buf (68 samples, 0.02%)</title><rect x="99.9753%" y="389" width="0.0243%" height="15" fill="rgb(252,170,7)" fg:x="279466" fg:w="68"/><text x="100.2253%" y="399.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (68 samples, 0.02%)</title><rect x="99.9753%" y="373" width="0.0243%" height="15" fill="rgb(231,118,14)" fg:x="279466" fg:w="68"/><text x="100.2253%" y="383.50"></text></g><g><title>`0x7FF90A7C1BC4 (68 samples, 0.02%)</title><rect x="99.9753%" y="357" width="0.0243%" height="15" fill="rgb(238,83,0)" fg:x="279466" fg:w="68"/><text x="100.2253%" y="367.50"></text></g><g><title>all (279,535 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="279535"/><text x="0.2500%" y="767.50"></text></g><g><title>`0x7FF90A69C34C (279,512 samples, 99.99%)</title><rect x="0.0082%" y="741" width="99.9918%" height="15" fill="rgb(222,119,46)" fg:x="23" fg:w="279512"/><text x="0.2582%" y="751.50">`0x7FF90A69C34C</text></g><g><title>`0x7FF909E5E8D7 (279,512 samples, 99.99%)</title><rect x="0.0082%" y="725" width="99.9918%" height="15" fill="rgb(222,165,49)" fg:x="23" fg:w="279512"/><text x="0.2582%" y="735.50">`0x7FF909E5E8D7</text></g><g><title>ant_colony.exe`__scrt_common_main_seh() (279,511 samples, 99.99%)</title><rect x="0.0086%" y="709" width="99.9914%" height="15" fill="rgb(219,113,52)" fg:x="24" fg:w="279511"/><text x="0.2586%" y="719.50">ant_colony.exe`__scrt_common_main_seh()</text></g><g><title>ant_colony.exe`invoke_main() (279,504 samples, 99.99%)</title><rect x="0.0111%" y="693" width="99.9889%" height="15" fill="rgb(214,7,15)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="703.50">ant_colony.exe`invoke_main()</text></g><g><title>ant_colony.exe`main (279,504 samples, 99.99%)</title><rect x="0.0111%" y="677" width="99.9889%" height="15" fill="rgb(235,32,4)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="687.50">ant_colony.exe`main</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal (279,504 samples, 99.99%)</title><rect x="0.0111%" y="661" width="99.9889%" height="15" fill="rgb(238,90,54)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="671.50">ant_colony.exe`std::rt::lang_start_internal</text></g><g><title>ant_colony.exe`std::panic::catch_unwind (279,504 samples, 99.99%)</title><rect x="0.0111%" y="645" width="99.9889%" height="15" fill="rgb(213,208,19)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="655.50">ant_colony.exe`std::panic::catch_unwind</text></g><g><title>ant_colony.exe`std::panicking::try (279,504 samples, 99.99%)</title><rect x="0.0111%" y="629" width="99.9889%" height="15" fill="rgb(233,156,4)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="639.50">ant_colony.exe`std::panicking::try</text></g><g><title>ant_colony.exe`std::panicking::try::do_call (279,504 samples, 99.99%)</title><rect x="0.0111%" y="613" width="99.9889%" height="15" fill="rgb(207,194,5)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="623.50">ant_colony.exe`std::panicking::try::do_call</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal::closure$0 (279,504 samples, 99.99%)</title><rect x="0.0111%" y="597" width="99.9889%" height="15" fill="rgb(206,111,30)" fg:x="31" fg:w="279504"/><text x="0.2611%" y="607.50">ant_colony.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (279,503 samples, 99.99%)</title><rect x="0.0114%" y="581" width="99.9886%" height="15" fill="rgb(243,70,54)" fg:x="32" fg:w="279503"/><text x="0.2614%" y="591.50">ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (279,503 samples, 99.99%)</title><rect x="0.0114%" y="565" width="99.9886%" height="15" fill="rgb(242,28,8)" fg:x="32" fg:w="279503"/><text x="0.2614%" y="575.50">ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>ant_colony.exe`ant_colony::main (279,503 samples, 99.99%)</title><rect x="0.0114%" y="549" width="99.9886%" height="15" fill="rgb(219,106,18)" fg:x="32" fg:w="279503"/><text x="0.2614%" y="559.50">ant_colony.exe`ant_colony::main</text></g><g><title>ant_colony.exe`ant_colony::test_on_facebook (279,503 samples, 99.99%)</title><rect x="0.0114%" y="533" width="99.9886%" height="15" fill="rgb(244,222,10)" fg:x="32" fg:w="279503"/><text x="0.2614%" y="543.50">ant_colony.exe`ant_colony::test_on_facebook</text></g></svg></svg>