<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="11567"><g><title>`0x7FFAE3715FC0 (2 samples, 0.02%)</title><rect x="0.0000%" y="1109" width="0.0173%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1119.50"></text></g><g><title>`0x7FFAE36E8842 (3 samples, 0.03%)</title><rect x="0.0605%" y="997" width="0.0259%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="3"/><text x="0.3105%" y="1007.50"></text></g><g><title>`0x7FFAE36ED255 (3 samples, 0.03%)</title><rect x="0.0605%" y="981" width="0.0259%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="3"/><text x="0.3105%" y="991.50"></text></g><g><title>`0x7FFAE374B611 (3 samples, 0.03%)</title><rect x="0.0605%" y="965" width="0.0259%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="3"/><text x="0.3105%" y="975.50"></text></g><g><title>`0x7FFAE374BBB8 (3 samples, 0.03%)</title><rect x="0.0605%" y="949" width="0.0259%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="3"/><text x="0.3105%" y="959.50"></text></g><g><title>`0x7FFAE36E9F82 (2 samples, 0.02%)</title><rect x="0.0692%" y="933" width="0.0173%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="2"/><text x="0.3192%" y="943.50"></text></g><g><title>`0x7FFAE37BB734 (6 samples, 0.05%)</title><rect x="0.0605%" y="1045" width="0.0519%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="6"/><text x="0.3105%" y="1055.50"></text></g><g><title>`0x7FFAE3735D80 (6 samples, 0.05%)</title><rect x="0.0605%" y="1029" width="0.0519%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="6"/><text x="0.3105%" y="1039.50"></text></g><g><title>`0x7FFAE36E84E0 (6 samples, 0.05%)</title><rect x="0.0605%" y="1013" width="0.0519%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="6"/><text x="0.3105%" y="1023.50"></text></g><g><title>`0x7FFAE36E88D4 (3 samples, 0.03%)</title><rect x="0.0865%" y="997" width="0.0259%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="3"/><text x="0.3365%" y="1007.50"></text></g><g><title>`0x7FFAE371AE03 (3 samples, 0.03%)</title><rect x="0.0865%" y="981" width="0.0259%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="3"/><text x="0.3365%" y="991.50"></text></g><g><title>`0x7FFAE371BCA6 (3 samples, 0.03%)</title><rect x="0.0865%" y="965" width="0.0259%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="3"/><text x="0.3365%" y="975.50"></text></g><g><title>`0x7FFAE371BC7A (3 samples, 0.03%)</title><rect x="0.0865%" y="949" width="0.0259%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="3"/><text x="0.3365%" y="959.50"></text></g><g><title>`0x7FFAE375193C (3 samples, 0.03%)</title><rect x="0.0865%" y="933" width="0.0259%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="3"/><text x="0.3365%" y="943.50"></text></g><g><title>`0x7FFAE3752983 (3 samples, 0.03%)</title><rect x="0.0865%" y="917" width="0.0259%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="3"/><text x="0.3365%" y="927.50"></text></g><g><title>`0x7FFAE374548B (7 samples, 0.06%)</title><rect x="0.0605%" y="1061" width="0.0605%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="7"/><text x="0.3105%" y="1071.50"></text></g><g><title>`0x7FFAE3715FCE (16 samples, 0.14%)</title><rect x="0.0173%" y="1109" width="0.1383%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="16"/><text x="0.2673%" y="1119.50"></text></g><g><title>`0x7FFAE374364E (16 samples, 0.14%)</title><rect x="0.0173%" y="1093" width="0.1383%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="16"/><text x="0.2673%" y="1103.50"></text></g><g><title>`0x7FFAE3743864 (15 samples, 0.13%)</title><rect x="0.0259%" y="1077" width="0.1297%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="15"/><text x="0.2759%" y="1087.50"></text></g><g><title>`0x7FFAE37456AC (2 samples, 0.02%)</title><rect x="0.1383%" y="1061" width="0.0173%" height="15" fill="rgb(226,26,5)" fg:x="16" fg:w="2"/><text x="0.3883%" y="1071.50"></text></g><g><title>`0x7FFAE371BCA6 (2 samples, 0.02%)</title><rect x="0.1383%" y="1045" width="0.0173%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="2"/><text x="0.3883%" y="1055.50"></text></g><g><title>`0x7FFAE371BCA6 (2 samples, 0.02%)</title><rect x="0.1383%" y="1029" width="0.0173%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="2"/><text x="0.3883%" y="1039.50"></text></g><g><title>`0x7FFAE371BC7A (2 samples, 0.02%)</title><rect x="0.1383%" y="1013" width="0.0173%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="2"/><text x="0.3883%" y="1023.50"></text></g><g><title>`0x7FFAE375193C (2 samples, 0.02%)</title><rect x="0.1383%" y="997" width="0.0173%" height="15" fill="rgb(247,18,42)" fg:x="16" fg:w="2"/><text x="0.3883%" y="1007.50"></text></g><g><title>`0x7FFAE3752983 (2 samples, 0.02%)</title><rect x="0.1383%" y="981" width="0.0173%" height="15" fill="rgb(241,131,45)" fg:x="16" fg:w="2"/><text x="0.3883%" y="991.50"></text></g><g><title>`0x7FFAE12B6E26 (2 samples, 0.02%)</title><rect x="0.1383%" y="965" width="0.0173%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="2"/><text x="0.3883%" y="975.50"></text></g><g><title>`0x7FFAE131AD56 (2 samples, 0.02%)</title><rect x="0.1383%" y="949" width="0.0173%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="2"/><text x="0.3883%" y="959.50"></text></g><g><title>`0x7FFAE371C320 (2 samples, 0.02%)</title><rect x="0.1556%" y="1109" width="0.0173%" height="15" fill="rgb(238,160,17)" fg:x="18" fg:w="2"/><text x="0.4056%" y="1119.50"></text></g><g><title>`0x7FFAE374E111 (2 samples, 0.02%)</title><rect x="0.1816%" y="1029" width="0.0173%" height="15" fill="rgb(214,148,48)" fg:x="21" fg:w="2"/><text x="0.4316%" y="1039.50"></text></g><g><title>`0x7FFAE375C32A (3 samples, 0.03%)</title><rect x="0.1816%" y="1045" width="0.0259%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="3"/><text x="0.4316%" y="1055.50"></text></g><g><title>`0x7FFAE3772AA1 (4 samples, 0.03%)</title><rect x="0.1816%" y="1077" width="0.0346%" height="15" fill="rgb(209,103,24)" fg:x="21" fg:w="4"/><text x="0.4316%" y="1087.50"></text></g><g><title>`0x7FFAE375B4B0 (4 samples, 0.03%)</title><rect x="0.1816%" y="1061" width="0.0346%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="4"/><text x="0.4316%" y="1071.50"></text></g><g><title>`0x7FFAE374BA3E (2 samples, 0.02%)</title><rect x="0.2248%" y="885" width="0.0173%" height="15" fill="rgb(213,181,19)" fg:x="26" fg:w="2"/><text x="0.4748%" y="895.50"></text></g><g><title>`0x7FFAE374BF0A (2 samples, 0.02%)</title><rect x="0.2248%" y="869" width="0.0173%" height="15" fill="rgb(254,191,54)" fg:x="26" fg:w="2"/><text x="0.4748%" y="879.50"></text></g><g><title>`0x7FFAE3842004 (2 samples, 0.02%)</title><rect x="0.2248%" y="853" width="0.0173%" height="15" fill="rgb(241,83,37)" fg:x="26" fg:w="2"/><text x="0.4748%" y="863.50"></text></g><g><title>`0x7FFAE36E8860 (4 samples, 0.03%)</title><rect x="0.2248%" y="949" width="0.0346%" height="15" fill="rgb(233,36,39)" fg:x="26" fg:w="4"/><text x="0.4748%" y="959.50"></text></g><g><title>`0x7FFAE375C404 (4 samples, 0.03%)</title><rect x="0.2248%" y="933" width="0.0346%" height="15" fill="rgb(226,3,54)" fg:x="26" fg:w="4"/><text x="0.4748%" y="943.50"></text></g><g><title>`0x7FFAE374E52D (4 samples, 0.03%)</title><rect x="0.2248%" y="917" width="0.0346%" height="15" fill="rgb(245,192,40)" fg:x="26" fg:w="4"/><text x="0.4748%" y="927.50"></text></g><g><title>`0x7FFAE375065C (4 samples, 0.03%)</title><rect x="0.2248%" y="901" width="0.0346%" height="15" fill="rgb(238,167,29)" fg:x="26" fg:w="4"/><text x="0.4748%" y="911.50"></text></g><g><title>`0x7FFAE374BBB8 (2 samples, 0.02%)</title><rect x="0.2421%" y="885" width="0.0173%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="2"/><text x="0.4921%" y="895.50"></text></g><g><title>`0x7FFAE1340046 (7 samples, 0.06%)</title><rect x="0.2161%" y="1061" width="0.0605%" height="15" fill="rgb(231,60,39)" fg:x="25" fg:w="7"/><text x="0.4661%" y="1071.50"></text></g><g><title>`0x7FFAE132553D (7 samples, 0.06%)</title><rect x="0.2161%" y="1045" width="0.0605%" height="15" fill="rgb(208,69,12)" fg:x="25" fg:w="7"/><text x="0.4661%" y="1055.50"></text></g><g><title>`0x7FFAE12B423B (7 samples, 0.06%)</title><rect x="0.2161%" y="1029" width="0.0605%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="7"/><text x="0.4661%" y="1039.50"></text></g><g><title>`0x7FFAE1316225 (7 samples, 0.06%)</title><rect x="0.2161%" y="1013" width="0.0605%" height="15" fill="rgb(213,116,39)" fg:x="25" fg:w="7"/><text x="0.4661%" y="1023.50"></text></g><g><title>`0x7FFAE09828E6 (7 samples, 0.06%)</title><rect x="0.2161%" y="997" width="0.0605%" height="15" fill="rgb(222,207,29)" fg:x="25" fg:w="7"/><text x="0.4661%" y="1007.50"></text></g><g><title>`0x7FFAE3735D80 (7 samples, 0.06%)</title><rect x="0.2161%" y="981" width="0.0605%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="7"/><text x="0.4661%" y="991.50"></text></g><g><title>`0x7FFAE36E84E0 (7 samples, 0.06%)</title><rect x="0.2161%" y="965" width="0.0605%" height="15" fill="rgb(218,138,4)" fg:x="25" fg:w="7"/><text x="0.4661%" y="975.50"></text></g><g><title>`0x7FFAE36E88D4 (2 samples, 0.02%)</title><rect x="0.2594%" y="949" width="0.0173%" height="15" fill="rgb(250,191,14)" fg:x="30" fg:w="2"/><text x="0.5094%" y="959.50"></text></g><g><title>`0x7FFAE371AE03 (2 samples, 0.02%)</title><rect x="0.2594%" y="933" width="0.0173%" height="15" fill="rgb(239,60,40)" fg:x="30" fg:w="2"/><text x="0.5094%" y="943.50"></text></g><g><title>`0x7FFAE1340093 (2 samples, 0.02%)</title><rect x="0.2766%" y="1061" width="0.0173%" height="15" fill="rgb(206,27,48)" fg:x="32" fg:w="2"/><text x="0.5266%" y="1071.50"></text></g><g><title>`0x7FFAE2FC18AB (2 samples, 0.02%)</title><rect x="0.2766%" y="1045" width="0.0173%" height="15" fill="rgb(225,35,8)" fg:x="32" fg:w="2"/><text x="0.5266%" y="1055.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::str::iter::Split&lt;ref$ (5 samples, 0.04%)</title><rect x="0.3026%" y="885" width="0.0432%" height="15" fill="rgb(250,213,24)" fg:x="35" fg:w="5"/><text x="0.5526%" y="895.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next(core::str::iter::Split&lt;ref$ (5 samples, 0.04%)</title><rect x="0.3026%" y="869" width="0.0432%" height="15" fill="rgb(247,123,22)" fg:x="35" fg:w="5"/><text x="0.5526%" y="879.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (5 samples, 0.04%)</title><rect x="0.3026%" y="853" width="0.0432%" height="15" fill="rgb(231,138,38)" fg:x="35" fg:w="5"/><text x="0.5526%" y="863.50"></text></g><g><title>ant_colony.exe`core::str::pattern::impl$33::next_match (5 samples, 0.04%)</title><rect x="0.3026%" y="837" width="0.0432%" height="15" fill="rgb(231,145,46)" fg:x="35" fg:w="5"/><text x="0.5526%" y="847.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (5 samples, 0.04%)</title><rect x="0.3026%" y="821" width="0.0432%" height="15" fill="rgb(251,118,11)" fg:x="35" fg:w="5"/><text x="0.5526%" y="831.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_buf (2 samples, 0.02%)</title><rect x="0.3458%" y="789" width="0.0173%" height="15" fill="rgb(217,147,25)" fg:x="40" fg:w="2"/><text x="0.5958%" y="799.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::read_buf (2 samples, 0.02%)</title><rect x="0.3458%" y="773" width="0.0173%" height="15" fill="rgb(247,81,37)" fg:x="40" fg:w="2"/><text x="0.5958%" y="783.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read_buf (2 samples, 0.02%)</title><rect x="0.3458%" y="757" width="0.0173%" height="15" fill="rgb(209,12,38)" fg:x="40" fg:w="2"/><text x="0.5958%" y="767.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (2 samples, 0.02%)</title><rect x="0.3458%" y="741" width="0.0173%" height="15" fill="rgb(227,1,9)" fg:x="40" fg:w="2"/><text x="0.5958%" y="751.50"></text></g><g><title>`0x7FFAE3841BC4 (2 samples, 0.02%)</title><rect x="0.3458%" y="725" width="0.0173%" height="15" fill="rgb(248,47,43)" fg:x="40" fg:w="2"/><text x="0.5958%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (3 samples, 0.03%)</title><rect x="0.3458%" y="885" width="0.0259%" height="15" fill="rgb(221,10,30)" fg:x="40" fg:w="3"/><text x="0.5958%" y="895.50"></text></g><g><title>ant_colony.exe`std::fs::impl$8::read_to_string (3 samples, 0.03%)</title><rect x="0.3458%" y="869" width="0.0259%" height="15" fill="rgb(210,229,1)" fg:x="40" fg:w="3"/><text x="0.5958%" y="879.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_to_string (3 samples, 0.03%)</title><rect x="0.3458%" y="853" width="0.0259%" height="15" fill="rgb(222,148,37)" fg:x="40" fg:w="3"/><text x="0.5958%" y="863.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_string (3 samples, 0.03%)</title><rect x="0.3458%" y="837" width="0.0259%" height="15" fill="rgb(234,67,33)" fg:x="40" fg:w="3"/><text x="0.5958%" y="847.50"></text></g><g><title>ant_colony.exe`std::io::append_to_string (3 samples, 0.03%)</title><rect x="0.3458%" y="821" width="0.0259%" height="15" fill="rgb(247,98,35)" fg:x="40" fg:w="3"/><text x="0.5958%" y="831.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (3 samples, 0.03%)</title><rect x="0.3458%" y="805" width="0.0259%" height="15" fill="rgb(247,138,52)" fg:x="40" fg:w="3"/><text x="0.5958%" y="815.50"></text></g><g><title>ant_colony.exe`core::str::impl$0::trim(ref$ (2 samples, 0.02%)</title><rect x="0.3717%" y="885" width="0.0173%" height="15" fill="rgb(213,79,30)" fg:x="43" fg:w="2"/><text x="0.6217%" y="895.50"></text></g><g><title>ant_colony.exe`alloc::string::impl$111::spec_to_string(ref$ (2 samples, 0.02%)</title><rect x="0.3717%" y="869" width="0.0173%" height="15" fill="rgb(246,177,23)" fg:x="43" fg:w="2"/><text x="0.6217%" y="879.50"></text></g><g><title>ant_colony.exe`alloc::string::impl$47::from(ref$ (2 samples, 0.02%)</title><rect x="0.3717%" y="853" width="0.0173%" height="15" fill="rgb(230,62,27)" fg:x="43" fg:w="2"/><text x="0.6217%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::str::impl$4::to_owned(ref$ (2 samples, 0.02%)</title><rect x="0.3717%" y="837" width="0.0173%" height="15" fill="rgb(216,154,8)" fg:x="43" fg:w="2"/><text x="0.6217%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.3717%" y="821" width="0.0173%" height="15" fill="rgb(244,35,45)" fg:x="43" fg:w="2"/><text x="0.6217%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.3717%" y="805" width="0.0173%" height="15" fill="rgb(251,115,12)" fg:x="43" fg:w="2"/><text x="0.6217%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.3717%" y="789" width="0.0173%" height="15" fill="rgb(240,54,50)" fg:x="43" fg:w="2"/><text x="0.6217%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.3717%" y="773" width="0.0173%" height="15" fill="rgb(233,84,52)" fg:x="43" fg:w="2"/><text x="0.6217%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.3717%" y="757" width="0.0173%" height="15" fill="rgb(207,117,47)" fg:x="43" fg:w="2"/><text x="0.6217%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.3717%" y="741" width="0.0173%" height="15" fill="rgb(249,43,39)" fg:x="43" fg:w="2"/><text x="0.6217%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="0.3717%" y="725" width="0.0173%" height="15" fill="rgb(209,38,44)" fg:x="43" fg:w="2"/><text x="0.6217%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.02%)</title><rect x="0.3717%" y="709" width="0.0173%" height="15" fill="rgb(236,212,23)" fg:x="43" fg:w="2"/><text x="0.6217%" y="719.50"></text></g><g><title>`0x7FFAE36EF164 (2 samples, 0.02%)</title><rect x="0.3717%" y="693" width="0.0173%" height="15" fill="rgb(242,79,21)" fg:x="43" fg:w="2"/><text x="0.6217%" y="703.50"></text></g><g><title>`0x7FFAE36EFBC0 (3 samples, 0.03%)</title><rect x="0.4928%" y="661" width="0.0259%" height="15" fill="rgb(211,96,35)" fg:x="57" fg:w="3"/><text x="0.7428%" y="671.50"></text></g><g><title>`0x7FFAE36EFFFF (6 samples, 0.05%)</title><rect x="0.5187%" y="661" width="0.0519%" height="15" fill="rgb(253,215,40)" fg:x="60" fg:w="6"/><text x="0.7687%" y="671.50"></text></g><g><title>`0x7FFAE36EF164 (16 samples, 0.14%)</title><rect x="0.4409%" y="693" width="0.1383%" height="15" fill="rgb(211,81,21)" fg:x="51" fg:w="16"/><text x="0.6909%" y="703.50"></text></g><g><title>`0x7FFAE36EF2A4 (14 samples, 0.12%)</title><rect x="0.4582%" y="677" width="0.1210%" height="15" fill="rgb(208,190,38)" fg:x="53" fg:w="14"/><text x="0.7082%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity (17 samples, 0.15%)</title><rect x="0.4409%" y="773" width="0.1470%" height="15" fill="rgb(235,213,38)" fg:x="51" fg:w="17"/><text x="0.6909%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity_in (17 samples, 0.15%)</title><rect x="0.4409%" y="757" width="0.1470%" height="15" fill="rgb(237,122,38)" fg:x="51" fg:w="17"/><text x="0.6909%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity_in (17 samples, 0.15%)</title><rect x="0.4409%" y="741" width="0.1470%" height="15" fill="rgb(244,218,35)" fg:x="51" fg:w="17"/><text x="0.6909%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (17 samples, 0.15%)</title><rect x="0.4409%" y="725" width="0.1470%" height="15" fill="rgb(240,68,47)" fg:x="51" fg:w="17"/><text x="0.6909%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (17 samples, 0.15%)</title><rect x="0.4409%" y="709" width="0.1470%" height="15" fill="rgb(210,16,53)" fg:x="51" fg:w="17"/><text x="0.6909%" y="719.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::get_end (2 samples, 0.02%)</title><rect x="0.6052%" y="709" width="0.0173%" height="15" fill="rgb(235,124,12)" fg:x="70" fg:w="2"/><text x="0.8552%" y="719.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4 samples, 0.03%)</title><rect x="0.6225%" y="709" width="0.0346%" height="15" fill="rgb(224,169,11)" fg:x="72" fg:w="4"/><text x="0.8725%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::impl$0::get(ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.6311%" y="693" width="0.0259%" height="15" fill="rgb(250,166,2)" fg:x="73" fg:w="3"/><text x="0.8811%" y="703.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.6311%" y="677" width="0.0259%" height="15" fill="rgb(242,216,29)" fg:x="73" fg:w="3"/><text x="0.8811%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;*, core::str::iter::Split&lt;ref$ (9 samples, 0.08%)</title><rect x="0.5879%" y="773" width="0.0778%" height="15" fill="rgb(230,116,27)" fg:x="68" fg:w="9"/><text x="0.8379%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::extend_desugared(core::str::iter::Split&lt;ref$ (9 samples, 0.08%)</title><rect x="0.5879%" y="757" width="0.0778%" height="15" fill="rgb(228,99,48)" fg:x="68" fg:w="9"/><text x="0.8379%" y="767.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next&lt;ref$&lt;str$&gt; &gt;(core::str::iter::Split&lt;ref$ (9 samples, 0.08%)</title><rect x="0.5879%" y="741" width="0.0778%" height="15" fill="rgb(253,11,6)" fg:x="68" fg:w="9"/><text x="0.8379%" y="751.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (7 samples, 0.06%)</title><rect x="0.6052%" y="725" width="0.0605%" height="15" fill="rgb(247,143,39)" fg:x="70" fg:w="7"/><text x="0.8552%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (34 samples, 0.29%)</title><rect x="0.4150%" y="837" width="0.2939%" height="15" fill="rgb(236,97,10)" fg:x="48" fg:w="34"/><text x="0.6650%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_slice (34 samples, 0.29%)</title><rect x="0.4150%" y="821" width="0.2939%" height="15" fill="rgb(233,208,19)" fg:x="48" fg:w="34"/><text x="0.6650%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;str$&gt;,core::str::iter::Split&lt;ref$&lt;str$&gt; &gt; &gt;(core::str::iter::Split&lt;ref$ (34 samples, 0.29%)</title><rect x="0.4150%" y="805" width="0.2939%" height="15" fill="rgb(216,164,2)" fg:x="48" fg:w="34"/><text x="0.6650%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::str::iter::Split&lt;ref$ (33 samples, 0.29%)</title><rect x="0.4236%" y="789" width="0.2853%" height="15" fill="rgb(220,129,5)" fg:x="49" fg:w="33"/><text x="0.6736%" y="799.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next&lt;ref$&lt;str$&gt; &gt;(core::str::iter::Split&lt;ref$ (5 samples, 0.04%)</title><rect x="0.6657%" y="773" width="0.0432%" height="15" fill="rgb(242,17,10)" fg:x="77" fg:w="5"/><text x="0.9157%" y="783.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (4 samples, 0.03%)</title><rect x="0.6743%" y="757" width="0.0346%" height="15" fill="rgb(242,107,0)" fg:x="78" fg:w="4"/><text x="0.9243%" y="767.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4 samples, 0.03%)</title><rect x="0.6743%" y="741" width="0.0346%" height="15" fill="rgb(251,28,31)" fg:x="78" fg:w="4"/><text x="0.9243%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;ref$ (42 samples, 0.36%)</title><rect x="0.4150%" y="853" width="0.3631%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="42"/><text x="0.6650%" y="863.50"></text></g><g><title>ant_colony.exe`core::num::impl$31::from_str(ref$ (8 samples, 0.07%)</title><rect x="0.7089%" y="837" width="0.0692%" height="15" fill="rgb(215,21,27)" fg:x="82" fg:w="8"/><text x="0.9589%" y="847.50"></text></g><g><title>ant_colony.exe`core::num::impl$32::from_str_radix(ref$ (8 samples, 0.07%)</title><rect x="0.7089%" y="821" width="0.0692%" height="15" fill="rgb(232,23,21)" fg:x="82" fg:w="8"/><text x="0.9589%" y="831.50"></text></g><g><title>ant_colony.exe`core::num::impl$32::from_ascii_radix(ref$&lt;slice2$ (8 samples, 0.07%)</title><rect x="0.7089%" y="805" width="0.0692%" height="15" fill="rgb(244,5,23)" fg:x="82" fg:w="8"/><text x="0.9589%" y="815.50"></text></g><g><title>`0x7FFAE3725FC4 (17 samples, 0.15%)</title><rect x="0.7954%" y="677" width="0.1470%" height="15" fill="rgb(226,81,46)" fg:x="92" fg:w="17"/><text x="1.0454%" y="687.50"></text></g><g><title>`0x7FFAE38481EC (17 samples, 0.15%)</title><rect x="0.7954%" y="661" width="0.1470%" height="15" fill="rgb(247,70,30)" fg:x="92" fg:w="17"/><text x="1.0454%" y="671.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::new_empty (22 samples, 0.19%)</title><rect x="0.7781%" y="853" width="0.1902%" height="15" fill="rgb(212,68,19)" fg:x="90" fg:w="22"/><text x="1.0281%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (22 samples, 0.19%)</title><rect x="0.7781%" y="837" width="0.1902%" height="15" fill="rgb(240,187,13)" fg:x="90" fg:w="22"/><text x="1.0281%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (22 samples, 0.19%)</title><rect x="0.7781%" y="821" width="0.1902%" height="15" fill="rgb(223,113,26)" fg:x="90" fg:w="22"/><text x="1.0281%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::with_capacity_zeroed_in (22 samples, 0.19%)</title><rect x="0.7781%" y="805" width="0.1902%" height="15" fill="rgb(206,192,2)" fg:x="90" fg:w="22"/><text x="1.0281%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (22 samples, 0.19%)</title><rect x="0.7781%" y="789" width="0.1902%" height="15" fill="rgb(241,108,4)" fg:x="90" fg:w="22"/><text x="1.0281%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (22 samples, 0.19%)</title><rect x="0.7781%" y="773" width="0.1902%" height="15" fill="rgb(247,173,49)" fg:x="90" fg:w="22"/><text x="1.0281%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (22 samples, 0.19%)</title><rect x="0.7781%" y="757" width="0.1902%" height="15" fill="rgb(224,114,35)" fg:x="90" fg:w="22"/><text x="1.0281%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (22 samples, 0.19%)</title><rect x="0.7781%" y="741" width="0.1902%" height="15" fill="rgb(245,159,27)" fg:x="90" fg:w="22"/><text x="1.0281%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (22 samples, 0.19%)</title><rect x="0.7781%" y="725" width="0.1902%" height="15" fill="rgb(245,172,44)" fg:x="90" fg:w="22"/><text x="1.0281%" y="735.50"></text></g><g><title>`0x7FFAE36EF164 (22 samples, 0.19%)</title><rect x="0.7781%" y="709" width="0.1902%" height="15" fill="rgb(236,23,11)" fg:x="90" fg:w="22"/><text x="1.0281%" y="719.50"></text></g><g><title>`0x7FFAE36EF591 (22 samples, 0.19%)</title><rect x="0.7781%" y="693" width="0.1902%" height="15" fill="rgb(205,117,38)" fg:x="90" fg:w="22"/><text x="1.0281%" y="703.50"></text></g><g><title>`0x7FFAE37269A2 (3 samples, 0.03%)</title><rect x="0.9423%" y="677" width="0.0259%" height="15" fill="rgb(237,72,25)" fg:x="109" fg:w="3"/><text x="1.1923%" y="687.50"></text></g><g><title>`0x7FFAE3727D7F (3 samples, 0.03%)</title><rect x="0.9423%" y="661" width="0.0259%" height="15" fill="rgb(244,70,9)" fg:x="109" fg:w="3"/><text x="1.1923%" y="671.50"></text></g><g><title>`0x7FFAE37286F4 (3 samples, 0.03%)</title><rect x="0.9423%" y="645" width="0.0259%" height="15" fill="rgb(217,125,39)" fg:x="109" fg:w="3"/><text x="1.1923%" y="655.50"></text></g><g><title>`0x7FFAE372822A (3 samples, 0.03%)</title><rect x="0.9423%" y="629" width="0.0259%" height="15" fill="rgb(235,36,10)" fg:x="109" fg:w="3"/><text x="1.1923%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (2 samples, 0.02%)</title><rect x="0.9769%" y="789" width="0.0173%" height="15" fill="rgb(251,123,47)" fg:x="113" fg:w="2"/><text x="1.2269%" y="799.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.9769%" y="773" width="0.0173%" height="15" fill="rgb(221,13,13)" fg:x="113" fg:w="2"/><text x="1.2269%" y="783.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (2 samples, 0.02%)</title><rect x="0.9769%" y="757" width="0.0173%" height="15" fill="rgb(238,131,9)" fg:x="113" fg:w="2"/><text x="1.2269%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (4 samples, 0.03%)</title><rect x="0.9683%" y="853" width="0.0346%" height="15" fill="rgb(211,50,8)" fg:x="112" fg:w="4"/><text x="1.2183%" y="863.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (4 samples, 0.03%)</title><rect x="0.9683%" y="837" width="0.0346%" height="15" fill="rgb(245,182,24)" fg:x="112" fg:w="4"/><text x="1.2183%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;ref$ (4 samples, 0.03%)</title><rect x="0.9683%" y="821" width="0.0346%" height="15" fill="rgb(242,14,37)" fg:x="112" fg:w="4"/><text x="1.2183%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (4 samples, 0.03%)</title><rect x="0.9683%" y="805" width="0.0346%" height="15" fill="rgb(246,228,12)" fg:x="112" fg:w="4"/><text x="1.2183%" y="815.50"></text></g><g><title>ant_colony.exe`core::slice::cmp::impl$5::equal (2 samples, 0.02%)</title><rect x="1.0980%" y="789" width="0.0173%" height="15" fill="rgb(213,55,15)" fg:x="127" fg:w="2"/><text x="1.3480%" y="799.50"></text></g><g><title>ant_colony.exe`memcmp (2 samples, 0.02%)</title><rect x="1.0980%" y="773" width="0.0173%" height="15" fill="rgb(209,9,3)" fg:x="127" fg:w="2"/><text x="1.3480%" y="783.50"></text></g><g><title>ant_colony.exe`core::str::impl$0::split(ref$&lt;str$&gt;, ref$ (14 samples, 0.12%)</title><rect x="1.0029%" y="853" width="0.1210%" height="15" fill="rgb(230,59,30)" fg:x="116" fg:w="14"/><text x="1.2529%" y="863.50"></text></g><g><title>ant_colony.exe`core::str::pattern::StrSearcher::new (5 samples, 0.04%)</title><rect x="1.0807%" y="837" width="0.0432%" height="15" fill="rgb(209,121,21)" fg:x="125" fg:w="5"/><text x="1.3307%" y="847.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::new (3 samples, 0.03%)</title><rect x="1.0980%" y="821" width="0.0259%" height="15" fill="rgb(220,109,13)" fg:x="127" fg:w="3"/><text x="1.3480%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index (3 samples, 0.03%)</title><rect x="1.0980%" y="805" width="0.0259%" height="15" fill="rgb(232,18,1)" fg:x="127" fg:w="3"/><text x="1.3480%" y="815.50"></text></g><g><title>`0x7FFAE37754CE (2 samples, 0.02%)</title><rect x="1.1498%" y="821" width="0.0173%" height="15" fill="rgb(215,41,42)" fg:x="133" fg:w="2"/><text x="1.3998%" y="831.50"></text></g><g><title>`0x7FFAE3775543 (3 samples, 0.03%)</title><rect x="1.1671%" y="821" width="0.0259%" height="15" fill="rgb(224,123,36)" fg:x="135" fg:w="3"/><text x="1.4171%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::get_graphs (111 samples, 0.96%)</title><rect x="0.2939%" y="901" width="0.9596%" height="15" fill="rgb(240,125,3)" fg:x="34" fg:w="111"/><text x="0.5439%" y="911.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;, ref$ (100 samples, 0.86%)</title><rect x="0.3890%" y="885" width="0.8645%" height="15" fill="rgb(205,98,50)" fg:x="45" fg:w="100"/><text x="0.6390%" y="895.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::from_string (100 samples, 0.86%)</title><rect x="0.3890%" y="869" width="0.8645%" height="15" fill="rgb(205,185,37)" fg:x="45" fg:w="100"/><text x="0.6390%" y="879.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next(core::str::iter::Split&lt;ref$ (15 samples, 0.13%)</title><rect x="1.1239%" y="853" width="0.1297%" height="15" fill="rgb(238,207,15)" fg:x="130" fg:w="15"/><text x="1.3739%" y="863.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (15 samples, 0.13%)</title><rect x="1.1239%" y="837" width="0.1297%" height="15" fill="rgb(213,199,42)" fg:x="130" fg:w="15"/><text x="1.3739%" y="847.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (3 samples, 0.03%)</title><rect x="1.2276%" y="821" width="0.0259%" height="15" fill="rgb(235,201,11)" fg:x="142" fg:w="3"/><text x="1.4776%" y="831.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (3 samples, 0.03%)</title><rect x="1.2276%" y="805" width="0.0259%" height="15" fill="rgb(207,46,11)" fg:x="142" fg:w="3"/><text x="1.4776%" y="815.50"></text></g><g><title>`0x7FFAE2FA3F90 (3 samples, 0.03%)</title><rect x="1.2276%" y="789" width="0.0259%" height="15" fill="rgb(241,35,35)" fg:x="142" fg:w="3"/><text x="1.4776%" y="799.50"></text></g><g><title>`0x7FFAE12FF7B0 (2 samples, 0.02%)</title><rect x="1.5475%" y="853" width="0.0173%" height="15" fill="rgb(243,32,47)" fg:x="179" fg:w="2"/><text x="1.7975%" y="863.50"></text></g><g><title>`0x7FFAE12FF85B (4 samples, 0.03%)</title><rect x="1.5648%" y="853" width="0.0346%" height="15" fill="rgb(247,202,23)" fg:x="181" fg:w="4"/><text x="1.8148%" y="863.50"></text></g><g><title>`0x7FFAE12FF88B (3 samples, 0.03%)</title><rect x="1.5994%" y="853" width="0.0259%" height="15" fill="rgb(219,102,11)" fg:x="185" fg:w="3"/><text x="1.8494%" y="863.50"></text></g><g><title>`0x7FFAE12FF8C1 (3 samples, 0.03%)</title><rect x="1.6253%" y="853" width="0.0259%" height="15" fill="rgb(243,110,44)" fg:x="188" fg:w="3"/><text x="1.8753%" y="863.50"></text></g><g><title>`0x7FFAE12FF8FA (3 samples, 0.03%)</title><rect x="1.6512%" y="853" width="0.0259%" height="15" fill="rgb(222,74,54)" fg:x="191" fg:w="3"/><text x="1.9012%" y="863.50"></text></g><g><title>`0x7FFAE12FF92B (8 samples, 0.07%)</title><rect x="1.6772%" y="853" width="0.0692%" height="15" fill="rgb(216,99,12)" fg:x="194" fg:w="8"/><text x="1.9272%" y="863.50"></text></g><g><title>`0x7FFAE12FF948 (4 samples, 0.03%)</title><rect x="1.7550%" y="853" width="0.0346%" height="15" fill="rgb(226,22,26)" fg:x="203" fg:w="4"/><text x="2.0050%" y="863.50"></text></g><g><title>`0x7FFAE12FF975 (3 samples, 0.03%)</title><rect x="1.7896%" y="853" width="0.0259%" height="15" fill="rgb(217,163,10)" fg:x="207" fg:w="3"/><text x="2.0396%" y="863.50"></text></g><g><title>`0x7FFAE12FF9C5 (6 samples, 0.05%)</title><rect x="1.8242%" y="853" width="0.0519%" height="15" fill="rgb(213,25,53)" fg:x="211" fg:w="6"/><text x="2.0742%" y="863.50"></text></g><g><title>`0x7FFAE12FFA17 (2 samples, 0.02%)</title><rect x="1.8933%" y="853" width="0.0173%" height="15" fill="rgb(252,105,26)" fg:x="219" fg:w="2"/><text x="2.1433%" y="863.50"></text></g><g><title>`0x7FFAE12FFA45 (6 samples, 0.05%)</title><rect x="1.9106%" y="853" width="0.0519%" height="15" fill="rgb(220,39,43)" fg:x="221" fg:w="6"/><text x="2.1606%" y="863.50"></text></g><g><title>`0x7FFAE12FFA7F (4 samples, 0.03%)</title><rect x="1.9711%" y="853" width="0.0346%" height="15" fill="rgb(229,68,48)" fg:x="228" fg:w="4"/><text x="2.2211%" y="863.50"></text></g><g><title>`0x7FFAE12FFA8B (3 samples, 0.03%)</title><rect x="2.0057%" y="853" width="0.0259%" height="15" fill="rgb(252,8,32)" fg:x="232" fg:w="3"/><text x="2.2557%" y="863.50"></text></g><g><title>`0x7FFAE12FFA93 (2 samples, 0.02%)</title><rect x="2.0316%" y="853" width="0.0173%" height="15" fill="rgb(223,20,43)" fg:x="235" fg:w="2"/><text x="2.2816%" y="863.50"></text></g><g><title>`0x7FFAE12FFA9F (3 samples, 0.03%)</title><rect x="2.0576%" y="853" width="0.0259%" height="15" fill="rgb(229,81,49)" fg:x="238" fg:w="3"/><text x="2.3076%" y="863.50"></text></g><g><title>`0x7FFAE12FFAA3 (8 samples, 0.07%)</title><rect x="2.0835%" y="853" width="0.0692%" height="15" fill="rgb(236,28,36)" fg:x="241" fg:w="8"/><text x="2.3335%" y="863.50"></text></g><g><title>`0x7FFAE12FFAA7 (4 samples, 0.03%)</title><rect x="2.1527%" y="853" width="0.0346%" height="15" fill="rgb(249,185,26)" fg:x="249" fg:w="4"/><text x="2.4027%" y="863.50"></text></g><g><title>`0x7FFAE12FFAAF (5 samples, 0.04%)</title><rect x="2.1873%" y="853" width="0.0432%" height="15" fill="rgb(249,174,33)" fg:x="253" fg:w="5"/><text x="2.4373%" y="863.50"></text></g><g><title>`0x7FFAE12FFAB7 (4 samples, 0.03%)</title><rect x="2.2305%" y="853" width="0.0346%" height="15" fill="rgb(233,201,37)" fg:x="258" fg:w="4"/><text x="2.4805%" y="863.50"></text></g><g><title>`0x7FFAE12FFABF (7 samples, 0.06%)</title><rect x="2.2651%" y="853" width="0.0605%" height="15" fill="rgb(221,78,26)" fg:x="262" fg:w="7"/><text x="2.5151%" y="863.50"></text></g><g><title>`0x7FFAE12FFAE3 (7 samples, 0.06%)</title><rect x="2.3256%" y="853" width="0.0605%" height="15" fill="rgb(250,127,30)" fg:x="269" fg:w="7"/><text x="2.5756%" y="863.50"></text></g><g><title>`0x7FFAE12FFAF9 (2 samples, 0.02%)</title><rect x="2.3861%" y="853" width="0.0173%" height="15" fill="rgb(230,49,44)" fg:x="276" fg:w="2"/><text x="2.6361%" y="863.50"></text></g><g><title>`0x7FFAE12FFB01 (6 samples, 0.05%)</title><rect x="2.4120%" y="853" width="0.0519%" height="15" fill="rgb(229,67,23)" fg:x="279" fg:w="6"/><text x="2.6620%" y="863.50"></text></g><g><title>`0x7FFAE12FFB0F (4 samples, 0.03%)</title><rect x="2.4639%" y="853" width="0.0346%" height="15" fill="rgb(249,83,47)" fg:x="285" fg:w="4"/><text x="2.7139%" y="863.50"></text></g><g><title>`0x7FFAE12FFB13 (10 samples, 0.09%)</title><rect x="2.4985%" y="853" width="0.0865%" height="15" fill="rgb(215,43,3)" fg:x="289" fg:w="10"/><text x="2.7485%" y="863.50"></text></g><g><title>`0x7FFAE12FFB17 (3 samples, 0.03%)</title><rect x="2.5849%" y="853" width="0.0259%" height="15" fill="rgb(238,154,13)" fg:x="299" fg:w="3"/><text x="2.8349%" y="863.50"></text></g><g><title>`0x7FFAE12FFB42 (2 samples, 0.02%)</title><rect x="2.6109%" y="853" width="0.0173%" height="15" fill="rgb(219,56,2)" fg:x="302" fg:w="2"/><text x="2.8609%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by(ref_mut$&lt;slice2$&lt;tuple$ (2 samples, 0.02%)</title><rect x="2.6368%" y="853" width="0.0173%" height="15" fill="rgb(233,0,4)" fg:x="305" fg:w="2"/><text x="2.8868%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::slice::stable_sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (2 samples, 0.02%)</title><rect x="2.6368%" y="837" width="0.0173%" height="15" fill="rgb(235,30,7)" fg:x="305" fg:w="2"/><text x="2.8868%" y="847.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (2 samples, 0.02%)</title><rect x="2.6368%" y="821" width="0.0173%" height="15" fill="rgb(250,79,13)" fg:x="305" fg:w="2"/><text x="2.8868%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left&lt;tuple$&lt;f64,usize&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,usize&gt;,ant_colony::graph::impl$2::launch::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, unsigned long long, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (2 samples, 0.02%)</title><rect x="2.6368%" y="805" width="0.0173%" height="15" fill="rgb(211,146,34)" fg:x="305" fg:w="2"/><text x="2.8868%" y="815.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;f64,usize&gt;*, tuple$&lt;f64,usize&gt;*, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (2 samples, 0.02%)</title><rect x="2.6368%" y="789" width="0.0173%" height="15" fill="rgb(228,22,38)" fg:x="305" fg:w="2"/><text x="2.8868%" y="799.50"></text></g><g><title>`0x7FFAE372A07D (6 samples, 0.05%)</title><rect x="2.6887%" y="677" width="0.0519%" height="15" fill="rgb(235,168,5)" fg:x="311" fg:w="6"/><text x="2.9387%" y="687.50"></text></g><g><title>`0x7FFAE36EF164 (6 samples, 0.05%)</title><rect x="2.6887%" y="661" width="0.0519%" height="15" fill="rgb(221,155,16)" fg:x="311" fg:w="6"/><text x="2.9387%" y="671.50"></text></g><g><title>`0x7FFAE36EF591 (6 samples, 0.05%)</title><rect x="2.6887%" y="645" width="0.0519%" height="15" fill="rgb(215,215,53)" fg:x="311" fg:w="6"/><text x="2.9387%" y="655.50"></text></g><g><title>`0x7FFAE3847349 (3 samples, 0.03%)</title><rect x="2.7578%" y="661" width="0.0259%" height="15" fill="rgb(223,4,10)" fg:x="319" fg:w="3"/><text x="3.0078%" y="671.50"></text></g><g><title>`0x7FFAE3847353 (7 samples, 0.06%)</title><rect x="2.7924%" y="661" width="0.0605%" height="15" fill="rgb(234,103,6)" fg:x="323" fg:w="7"/><text x="3.0424%" y="671.50"></text></g><g><title>`0x7FFAE384735E (3 samples, 0.03%)</title><rect x="2.8616%" y="661" width="0.0259%" height="15" fill="rgb(227,97,0)" fg:x="331" fg:w="3"/><text x="3.1116%" y="671.50"></text></g><g><title>`0x7FFAE3847362 (4 samples, 0.03%)</title><rect x="2.8875%" y="661" width="0.0346%" height="15" fill="rgb(234,150,53)" fg:x="334" fg:w="4"/><text x="3.1375%" y="671.50"></text></g><g><title>`0x7FFAE3847366 (4 samples, 0.03%)</title><rect x="2.9221%" y="661" width="0.0346%" height="15" fill="rgb(228,201,54)" fg:x="338" fg:w="4"/><text x="3.1721%" y="671.50"></text></g><g><title>`0x7FFAE3847409 (3 samples, 0.03%)</title><rect x="2.9740%" y="661" width="0.0259%" height="15" fill="rgb(222,22,37)" fg:x="344" fg:w="3"/><text x="3.2240%" y="671.50"></text></g><g><title>`0x7FFAE3847413 (30 samples, 0.26%)</title><rect x="2.9999%" y="661" width="0.2594%" height="15" fill="rgb(237,53,32)" fg:x="347" fg:w="30"/><text x="3.2499%" y="671.50"></text></g><g><title>`0x7FFAE372A199 (73 samples, 0.63%)</title><rect x="2.7492%" y="677" width="0.6311%" height="15" fill="rgb(233,25,53)" fg:x="318" fg:w="73"/><text x="2.9992%" y="687.50"></text></g><g><title>`0x7FFAE3847417 (14 samples, 0.12%)</title><rect x="3.2593%" y="661" width="0.1210%" height="15" fill="rgb(210,40,34)" fg:x="377" fg:w="14"/><text x="3.5093%" y="671.50"></text></g><g><title>`0x7FFAE3709B68 (6 samples, 0.05%)</title><rect x="3.3803%" y="629" width="0.0519%" height="15" fill="rgb(241,220,44)" fg:x="391" fg:w="6"/><text x="3.6303%" y="639.50"></text></g><g><title>`0x7FFAE36F801E (6 samples, 0.05%)</title><rect x="3.3803%" y="613" width="0.0519%" height="15" fill="rgb(235,28,35)" fg:x="391" fg:w="6"/><text x="3.6303%" y="623.50"></text></g><g><title>`0x7FFAE37CB4C9 (6 samples, 0.05%)</title><rect x="3.3803%" y="597" width="0.0519%" height="15" fill="rgb(210,56,17)" fg:x="391" fg:w="6"/><text x="3.6303%" y="607.50"></text></g><g><title>`0x7FFAE3841EC4 (6 samples, 0.05%)</title><rect x="3.3803%" y="581" width="0.0519%" height="15" fill="rgb(224,130,29)" fg:x="391" fg:w="6"/><text x="3.6303%" y="591.50"></text></g><g><title>`0x7FFAE36F49D6 (7 samples, 0.06%)</title><rect x="3.3803%" y="645" width="0.0605%" height="15" fill="rgb(235,212,8)" fg:x="391" fg:w="7"/><text x="3.6303%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::grow_one&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt; (93 samples, 0.80%)</title><rect x="2.6887%" y="837" width="0.8040%" height="15" fill="rgb(223,33,50)" fg:x="311" fg:w="93"/><text x="2.9387%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (93 samples, 0.80%)</title><rect x="2.6887%" y="821" width="0.8040%" height="15" fill="rgb(219,149,13)" fg:x="311" fg:w="93"/><text x="2.9387%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (93 samples, 0.80%)</title><rect x="2.6887%" y="805" width="0.8040%" height="15" fill="rgb(250,156,29)" fg:x="311" fg:w="93"/><text x="2.9387%" y="815.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (93 samples, 0.80%)</title><rect x="2.6887%" y="789" width="0.8040%" height="15" fill="rgb(216,193,19)" fg:x="311" fg:w="93"/><text x="2.9387%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (93 samples, 0.80%)</title><rect x="2.6887%" y="773" width="0.8040%" height="15" fill="rgb(216,135,14)" fg:x="311" fg:w="93"/><text x="2.9387%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (93 samples, 0.80%)</title><rect x="2.6887%" y="757" width="0.8040%" height="15" fill="rgb(241,47,5)" fg:x="311" fg:w="93"/><text x="2.9387%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (93 samples, 0.80%)</title><rect x="2.6887%" y="741" width="0.8040%" height="15" fill="rgb(233,42,35)" fg:x="311" fg:w="93"/><text x="2.9387%" y="751.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (93 samples, 0.80%)</title><rect x="2.6887%" y="725" width="0.8040%" height="15" fill="rgb(231,13,6)" fg:x="311" fg:w="93"/><text x="2.9387%" y="735.50"></text></g><g><title>`0x7FFAE3728F8D (93 samples, 0.80%)</title><rect x="2.6887%" y="709" width="0.8040%" height="15" fill="rgb(207,181,40)" fg:x="311" fg:w="93"/><text x="2.9387%" y="719.50"></text></g><g><title>`0x7FFAE3729235 (93 samples, 0.80%)</title><rect x="2.6887%" y="693" width="0.8040%" height="15" fill="rgb(254,173,49)" fg:x="311" fg:w="93"/><text x="2.9387%" y="703.50"></text></g><g><title>`0x7FFAE372A1AC (13 samples, 0.11%)</title><rect x="3.3803%" y="677" width="0.1124%" height="15" fill="rgb(221,1,38)" fg:x="391" fg:w="13"/><text x="3.6303%" y="687.50"></text></g><g><title>`0x7FFAE37759E0 (13 samples, 0.11%)</title><rect x="3.3803%" y="661" width="0.1124%" height="15" fill="rgb(206,124,46)" fg:x="391" fg:w="13"/><text x="3.6303%" y="671.50"></text></g><g><title>`0x7FFAE36F5578 (6 samples, 0.05%)</title><rect x="3.4408%" y="645" width="0.0519%" height="15" fill="rgb(249,21,11)" fg:x="398" fg:w="6"/><text x="3.6908%" y="655.50"></text></g><g><title>`0x7FFAE376802F (6 samples, 0.05%)</title><rect x="3.4408%" y="629" width="0.0519%" height="15" fill="rgb(222,201,40)" fg:x="398" fg:w="6"/><text x="3.6908%" y="639.50"></text></g><g><title>`0x7FFAE3841EC4 (6 samples, 0.05%)</title><rect x="3.4408%" y="613" width="0.0519%" height="15" fill="rgb(235,61,29)" fg:x="398" fg:w="6"/><text x="3.6908%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (134 samples, 1.16%)</title><rect x="2.6541%" y="853" width="1.1585%" height="15" fill="rgb(219,207,3)" fg:x="307" fg:w="134"/><text x="2.9041%" y="863.50"></text></g><g><title>ant_colony.exe`core::ptr::write (37 samples, 0.32%)</title><rect x="3.4927%" y="837" width="0.3199%" height="15" fill="rgb(222,56,46)" fg:x="404" fg:w="37"/><text x="3.7427%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (4 samples, 0.03%)</title><rect x="3.8126%" y="853" width="0.0346%" height="15" fill="rgb(239,76,54)" fg:x="441" fg:w="4"/><text x="4.0626%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;array$ (2 samples, 0.02%)</title><rect x="6.3716%" y="837" width="0.0173%" height="15" fill="rgb(231,124,27)" fg:x="737" fg:w="2"/><text x="6.6216%" y="847.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::gain_of_edge (429 samples, 3.71%)</title><rect x="6.3889%" y="837" width="3.7088%" height="15" fill="rgb(249,195,6)" fg:x="739" fg:w="429"/><text x="6.6389%" y="847.50">ant_..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (59 samples, 0.51%)</title><rect x="9.5876%" y="821" width="0.5101%" height="15" fill="rgb(237,174,47)" fg:x="1109" fg:w="59"/><text x="9.8376%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (59 samples, 0.51%)</title><rect x="9.5876%" y="805" width="0.5101%" height="15" fill="rgb(206,201,31)" fg:x="1109" fg:w="59"/><text x="9.8376%" y="815.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (59 samples, 0.51%)</title><rect x="9.5876%" y="789" width="0.5101%" height="15" fill="rgb(231,57,52)" fg:x="1109" fg:w="59"/><text x="9.8376%" y="799.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (64 samples, 0.55%)</title><rect x="10.0977%" y="805" width="0.5533%" height="15" fill="rgb(248,177,22)" fg:x="1168" fg:w="64"/><text x="10.3477%" y="815.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;array$ (131 samples, 1.13%)</title><rect x="10.0977%" y="837" width="1.1325%" height="15" fill="rgb(215,211,37)" fg:x="1168" fg:w="131"/><text x="10.3477%" y="847.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (131 samples, 1.13%)</title><rect x="10.0977%" y="821" width="1.1325%" height="15" fill="rgb(241,128,51)" fg:x="1168" fg:w="131"/><text x="10.3477%" y="831.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (67 samples, 0.58%)</title><rect x="10.6510%" y="805" width="0.5792%" height="15" fill="rgb(227,165,31)" fg:x="1232" fg:w="67"/><text x="10.9010%" y="815.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (10 samples, 0.09%)</title><rect x="11.3858%" y="821" width="0.0865%" height="15" fill="rgb(228,167,24)" fg:x="1317" fg:w="10"/><text x="11.6358%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::get_chosen_edge (1,716 samples, 14.84%)</title><rect x="3.8472%" y="853" width="14.8353%" height="15" fill="rgb(228,143,12)" fg:x="445" fg:w="1716"/><text x="4.0972%" y="863.50">ant_colony.exe`ant_colo..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (862 samples, 7.45%)</title><rect x="11.2302%" y="837" width="7.4522%" height="15" fill="rgb(249,149,8)" fg:x="1299" fg:w="862"/><text x="11.4802%" y="847.50">ant_colony..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (834 samples, 7.21%)</title><rect x="11.4723%" y="821" width="7.2102%" height="15" fill="rgb(243,35,44)" fg:x="1327" fg:w="834"/><text x="11.7223%" y="831.50">ant_colony..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::clear (3 samples, 0.03%)</title><rect x="18.7084%" y="837" width="0.0259%" height="15" fill="rgb(246,89,9)" fg:x="2164" fg:w="3"/><text x="18.9584%" y="847.50"></text></g><g><title>ant_colony.exe`memset (2 samples, 0.02%)</title><rect x="18.7170%" y="821" width="0.0173%" height="15" fill="rgb(233,213,13)" fg:x="2165" fg:w="2"/><text x="18.9670%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (2 samples, 0.02%)</title><rect x="18.7343%" y="837" width="0.0173%" height="15" fill="rgb(233,141,41)" fg:x="2167" fg:w="2"/><text x="18.9843%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="18.7343%" y="821" width="0.0173%" height="15" fill="rgb(239,167,4)" fg:x="2167" fg:w="2"/><text x="18.9843%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::init_origin (9 samples, 0.08%)</title><rect x="18.6825%" y="853" width="0.0778%" height="15" fill="rgb(209,217,16)" fg:x="2161" fg:w="9"/><text x="18.9325%" y="863.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (2 samples, 0.02%)</title><rect x="18.9159%" y="821" width="0.0173%" height="15" fill="rgb(219,88,35)" fg:x="2188" fg:w="2"/><text x="19.1659%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (70 samples, 0.61%)</title><rect x="18.7948%" y="837" width="0.6052%" height="15" fill="rgb(220,193,23)" fg:x="2174" fg:w="70"/><text x="19.0448%" y="847.50"></text></g><g><title>ant_colony.exe`core::ptr::read (54 samples, 0.47%)</title><rect x="18.9332%" y="821" width="0.4668%" height="15" fill="rgb(230,90,52)" fg:x="2190" fg:w="54"/><text x="19.1832%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (29 samples, 0.25%)</title><rect x="19.4000%" y="805" width="0.2507%" height="15" fill="rgb(252,106,19)" fg:x="2244" fg:w="29"/><text x="19.6500%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_ptr (29 samples, 0.25%)</title><rect x="19.4000%" y="789" width="0.2507%" height="15" fill="rgb(206,74,20)" fg:x="2244" fg:w="29"/><text x="19.6500%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (29 samples, 0.25%)</title><rect x="19.4000%" y="773" width="0.2507%" height="15" fill="rgb(230,138,44)" fg:x="2244" fg:w="29"/><text x="19.6500%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (29 samples, 0.25%)</title><rect x="19.4000%" y="757" width="0.2507%" height="15" fill="rgb(235,182,43)" fg:x="2244" fg:w="29"/><text x="19.6500%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (29 samples, 0.25%)</title><rect x="19.4000%" y="741" width="0.2507%" height="15" fill="rgb(242,16,51)" fg:x="2244" fg:w="29"/><text x="19.6500%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (30 samples, 0.26%)</title><rect x="19.4000%" y="837" width="0.2594%" height="15" fill="rgb(248,9,4)" fg:x="2244" fg:w="30"/><text x="19.6500%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (30 samples, 0.26%)</title><rect x="19.4000%" y="821" width="0.2594%" height="15" fill="rgb(210,31,22)" fg:x="2244" fg:w="30"/><text x="19.6500%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::set_len (3 samples, 0.03%)</title><rect x="32.5668%" y="805" width="0.0259%" height="15" fill="rgb(239,54,39)" fg:x="3767" fg:w="3"/><text x="32.8168%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (559 samples, 4.83%)</title><rect x="29.8781%" y="821" width="4.8327%" height="15" fill="rgb(230,99,41)" fg:x="3456" fg:w="559"/><text x="30.1281%" y="831.50">ant_co..</text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (245 samples, 2.12%)</title><rect x="32.5927%" y="805" width="2.1181%" height="15" fill="rgb(253,106,12)" fg:x="3770" fg:w="245"/><text x="32.8427%" y="815.50">a..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;array$ (436 samples, 3.77%)</title><rect x="34.7108%" y="821" width="3.7693%" height="15" fill="rgb(213,46,41)" fg:x="4015" fg:w="436"/><text x="34.9608%" y="831.50">ant_..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;array$ (436 samples, 3.77%)</title><rect x="34.7108%" y="805" width="3.7693%" height="15" fill="rgb(215,133,35)" fg:x="4015" fg:w="436"/><text x="34.9608%" y="815.50">ant_..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;array$ (436 samples, 3.77%)</title><rect x="34.7108%" y="789" width="3.7693%" height="15" fill="rgb(213,28,5)" fg:x="4015" fg:w="436"/><text x="34.9608%" y="799.50">ant_..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges1 (2,180 samples, 18.85%)</title><rect x="19.6594%" y="837" width="18.8467%" height="15" fill="rgb(215,77,49)" fg:x="2274" fg:w="2180"/><text x="19.9094%" y="847.50">ant_colony.exe`ant_colony::gr..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (3 samples, 0.03%)</title><rect x="38.4802%" y="821" width="0.0259%" height="15" fill="rgb(248,100,22)" fg:x="4451" fg:w="3"/><text x="38.7302%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (3 samples, 0.03%)</title><rect x="38.4802%" y="805" width="0.0259%" height="15" fill="rgb(208,67,9)" fg:x="4451" fg:w="3"/><text x="38.7302%" y="815.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (3 samples, 0.03%)</title><rect x="38.4802%" y="789" width="0.0259%" height="15" fill="rgb(219,133,21)" fg:x="4451" fg:w="3"/><text x="38.7302%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (24 samples, 0.21%)</title><rect x="42.3273%" y="805" width="0.2075%" height="15" fill="rgb(246,46,29)" fg:x="4896" fg:w="24"/><text x="42.5773%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (18 samples, 0.16%)</title><rect x="42.3792%" y="789" width="0.1556%" height="15" fill="rgb(246,185,52)" fg:x="4902" fg:w="18"/><text x="42.6292%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (18 samples, 0.16%)</title><rect x="42.3792%" y="773" width="0.1556%" height="15" fill="rgb(252,136,11)" fg:x="4902" fg:w="18"/><text x="42.6292%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (18 samples, 0.16%)</title><rect x="42.3792%" y="757" width="0.1556%" height="15" fill="rgb(219,138,53)" fg:x="4902" fg:w="18"/><text x="42.6292%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (311 samples, 2.69%)</title><rect x="39.9326%" y="821" width="2.6887%" height="15" fill="rgb(211,51,23)" fg:x="4619" fg:w="311"/><text x="40.1826%" y="831.50">an..</text></g><g><title>ant_colony.exe`core::ptr::write (10 samples, 0.09%)</title><rect x="42.5348%" y="805" width="0.0865%" height="15" fill="rgb(247,221,28)" fg:x="4920" fg:w="10"/><text x="42.7848%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (46 samples, 0.40%)</title><rect x="42.6213%" y="789" width="0.3977%" height="15" fill="rgb(251,222,45)" fg:x="4930" fg:w="46"/><text x="42.8713%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_ptr (32 samples, 0.28%)</title><rect x="42.7423%" y="773" width="0.2766%" height="15" fill="rgb(217,162,53)" fg:x="4944" fg:w="32"/><text x="42.9923%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (32 samples, 0.28%)</title><rect x="42.7423%" y="757" width="0.2766%" height="15" fill="rgb(229,93,14)" fg:x="4944" fg:w="32"/><text x="42.9923%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (32 samples, 0.28%)</title><rect x="42.7423%" y="741" width="0.2766%" height="15" fill="rgb(209,67,49)" fg:x="4944" fg:w="32"/><text x="42.9923%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (32 samples, 0.28%)</title><rect x="42.7423%" y="725" width="0.2766%" height="15" fill="rgb(213,87,29)" fg:x="4944" fg:w="32"/><text x="42.9923%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (63 samples, 0.54%)</title><rect x="42.6213%" y="821" width="0.5447%" height="15" fill="rgb(205,151,52)" fg:x="4930" fg:w="63"/><text x="42.8713%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (63 samples, 0.54%)</title><rect x="42.6213%" y="805" width="0.5447%" height="15" fill="rgb(253,215,39)" fg:x="4930" fg:w="63"/><text x="42.8713%" y="815.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (17 samples, 0.15%)</title><rect x="43.0189%" y="789" width="0.1470%" height="15" fill="rgb(221,220,41)" fg:x="4976" fg:w="17"/><text x="43.2689%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (4 samples, 0.03%)</title><rect x="44.2379%" y="805" width="0.0346%" height="15" fill="rgb(218,133,21)" fg:x="5117" fg:w="4"/><text x="44.4879%" y="815.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (4 samples, 0.03%)</title><rect x="44.2379%" y="789" width="0.0346%" height="15" fill="rgb(221,193,43)" fg:x="5117" fg:w="4"/><text x="44.4879%" y="799.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (4 samples, 0.03%)</title><rect x="44.2379%" y="773" width="0.0346%" height="15" fill="rgb(240,128,52)" fg:x="5117" fg:w="4"/><text x="44.4879%" y="783.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (133 samples, 1.15%)</title><rect x="43.1659%" y="821" width="1.1498%" height="15" fill="rgb(253,114,12)" fg:x="4993" fg:w="133"/><text x="43.4159%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (5 samples, 0.04%)</title><rect x="44.2725%" y="805" width="0.0432%" height="15" fill="rgb(215,223,47)" fg:x="5121" fg:w="5"/><text x="44.5225%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (5 samples, 0.04%)</title><rect x="44.2725%" y="789" width="0.0432%" height="15" fill="rgb(248,225,23)" fg:x="5121" fg:w="5"/><text x="44.5225%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (5 samples, 0.04%)</title><rect x="44.2725%" y="773" width="0.0432%" height="15" fill="rgb(250,108,0)" fg:x="5121" fg:w="5"/><text x="44.5225%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (5 samples, 0.04%)</title><rect x="44.2725%" y="757" width="0.0432%" height="15" fill="rgb(228,208,7)" fg:x="5121" fg:w="5"/><text x="44.5225%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (3 samples, 0.03%)</title><rect x="44.2898%" y="741" width="0.0259%" height="15" fill="rgb(244,45,10)" fg:x="5123" fg:w="3"/><text x="44.5398%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (3 samples, 0.03%)</title><rect x="44.2898%" y="725" width="0.0259%" height="15" fill="rgb(207,125,25)" fg:x="5123" fg:w="3"/><text x="44.5398%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.03%)</title><rect x="44.2898%" y="709" width="0.0259%" height="15" fill="rgb(210,195,18)" fg:x="5123" fg:w="3"/><text x="44.5398%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.03%)</title><rect x="44.2898%" y="693" width="0.0259%" height="15" fill="rgb(249,80,12)" fg:x="5123" fg:w="3"/><text x="44.5398%" y="703.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges (3,236 samples, 27.98%)</title><rect x="18.7603%" y="853" width="27.9761%" height="15" fill="rgb(221,65,9)" fg:x="2170" fg:w="3236"/><text x="19.0103%" y="863.50">ant_colony.exe`ant_colony::graph::ACO::update..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges2 (952 samples, 8.23%)</title><rect x="38.5061%" y="837" width="8.2303%" height="15" fill="rgb(235,49,36)" fg:x="4454" fg:w="952"/><text x="38.7561%" y="847.50">ant_colony...</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (280 samples, 2.42%)</title><rect x="44.3157%" y="821" width="2.4207%" height="15" fill="rgb(225,32,20)" fg:x="5126" fg:w="280"/><text x="44.5657%" y="831.50">an..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (271 samples, 2.34%)</title><rect x="44.3935%" y="805" width="2.3429%" height="15" fill="rgb(215,141,46)" fg:x="5135" fg:w="271"/><text x="44.6435%" y="815.50">a..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (22 samples, 0.19%)</title><rect x="46.8574%" y="837" width="0.1902%" height="15" fill="rgb(250,160,47)" fg:x="5420" fg:w="22"/><text x="47.1074%" y="847.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (22 samples, 0.19%)</title><rect x="46.8574%" y="821" width="0.1902%" height="15" fill="rgb(216,222,40)" fg:x="5420" fg:w="22"/><text x="47.1074%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (22 samples, 0.19%)</title><rect x="46.8574%" y="805" width="0.1902%" height="15" fill="rgb(234,217,39)" fg:x="5420" fg:w="22"/><text x="47.1074%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (20 samples, 0.17%)</title><rect x="47.9986%" y="789" width="0.1729%" height="15" fill="rgb(207,178,40)" fg:x="5552" fg:w="20"/><text x="48.2486%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (6 samples, 0.05%)</title><rect x="48.1197%" y="773" width="0.0519%" height="15" fill="rgb(221,136,13)" fg:x="5566" fg:w="6"/><text x="48.3697%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (6 samples, 0.05%)</title><rect x="48.1197%" y="757" width="0.0519%" height="15" fill="rgb(249,199,10)" fg:x="5566" fg:w="6"/><text x="48.3697%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (6 samples, 0.05%)</title><rect x="48.1197%" y="741" width="0.0519%" height="15" fill="rgb(249,222,13)" fg:x="5566" fg:w="6"/><text x="48.3697%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (6 samples, 0.05%)</title><rect x="48.1197%" y="725" width="0.0519%" height="15" fill="rgb(244,185,38)" fg:x="5566" fg:w="6"/><text x="48.3697%" y="735.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (131 samples, 1.13%)</title><rect x="47.0476%" y="837" width="1.1325%" height="15" fill="rgb(236,202,9)" fg:x="5442" fg:w="131"/><text x="47.2976%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (21 samples, 0.18%)</title><rect x="47.9986%" y="821" width="0.1816%" height="15" fill="rgb(250,229,37)" fg:x="5552" fg:w="21"/><text x="48.2486%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (21 samples, 0.18%)</title><rect x="47.9986%" y="805" width="0.1816%" height="15" fill="rgb(206,174,23)" fg:x="5552" fg:w="21"/><text x="48.2486%" y="815.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (176 samples, 1.52%)</title><rect x="46.7364%" y="853" width="1.5216%" height="15" fill="rgb(211,33,43)" fg:x="5406" fg:w="176"/><text x="46.9864%" y="863.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::incr_neighboor_count_unchecked (9 samples, 0.08%)</title><rect x="48.1802%" y="837" width="0.0778%" height="15" fill="rgb(245,58,50)" fg:x="5573" fg:w="9"/><text x="48.4302%" y="847.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::clear (11 samples, 0.10%)</title><rect x="48.2580%" y="853" width="0.0951%" height="15" fill="rgb(244,68,36)" fg:x="5582" fg:w="11"/><text x="48.5080%" y="863.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (11 samples, 0.10%)</title><rect x="48.2580%" y="837" width="0.0951%" height="15" fill="rgb(232,229,15)" fg:x="5582" fg:w="11"/><text x="48.5080%" y="847.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (11 samples, 0.10%)</title><rect x="48.2580%" y="821" width="0.0951%" height="15" fill="rgb(254,30,23)" fg:x="5582" fg:w="11"/><text x="48.5080%" y="831.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (11 samples, 0.10%)</title><rect x="48.2580%" y="805" width="0.0951%" height="15" fill="rgb(235,160,14)" fg:x="5582" fg:w="11"/><text x="48.5080%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (8 samples, 0.07%)</title><rect x="48.8459%" y="837" width="0.0692%" height="15" fill="rgb(212,155,44)" fg:x="5650" fg:w="8"/><text x="49.0959%" y="847.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (8 samples, 0.07%)</title><rect x="48.8459%" y="821" width="0.0692%" height="15" fill="rgb(226,2,50)" fg:x="5650" fg:w="8"/><text x="49.0959%" y="831.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (8 samples, 0.07%)</title><rect x="48.8459%" y="805" width="0.0692%" height="15" fill="rgb(234,177,6)" fg:x="5650" fg:w="8"/><text x="49.0959%" y="815.50"></text></g><g><title>`0x7FFAAE7628A4 (5 samples, 0.04%)</title><rect x="48.9410%" y="821" width="0.0432%" height="15" fill="rgb(217,24,9)" fg:x="5661" fg:w="5"/><text x="49.1910%" y="831.50"></text></g><g><title>`0x7FFAAE7628A9 (5 samples, 0.04%)</title><rect x="48.9842%" y="821" width="0.0432%" height="15" fill="rgb(220,13,46)" fg:x="5666" fg:w="5"/><text x="49.2342%" y="831.50"></text></g><g><title>`0x7FFAAE7628AE (5 samples, 0.04%)</title><rect x="49.0274%" y="821" width="0.0432%" height="15" fill="rgb(239,221,27)" fg:x="5671" fg:w="5"/><text x="49.2774%" y="831.50"></text></g><g><title>`0x7FFAAE7628B3 (2 samples, 0.02%)</title><rect x="49.0706%" y="821" width="0.0173%" height="15" fill="rgb(222,198,25)" fg:x="5676" fg:w="2"/><text x="49.3206%" y="831.50"></text></g><g><title>`0x7FFAAE7628BB (2 samples, 0.02%)</title><rect x="49.0879%" y="821" width="0.0173%" height="15" fill="rgb(211,99,13)" fg:x="5678" fg:w="2"/><text x="49.3379%" y="831.50"></text></g><g><title>`0x7FFAAE7628C3 (3 samples, 0.03%)</title><rect x="49.1052%" y="821" width="0.0259%" height="15" fill="rgb(232,111,31)" fg:x="5680" fg:w="3"/><text x="49.3552%" y="831.50"></text></g><g><title>`0x7FFAAE7628CB (2 samples, 0.02%)</title><rect x="49.1311%" y="821" width="0.0173%" height="15" fill="rgb(245,82,37)" fg:x="5683" fg:w="2"/><text x="49.3811%" y="831.50"></text></g><g><title>`0x7FFAAE7628D3 (5 samples, 0.04%)</title><rect x="49.1484%" y="821" width="0.0432%" height="15" fill="rgb(227,149,46)" fg:x="5685" fg:w="5"/><text x="49.3984%" y="831.50"></text></g><g><title>`0x7FFAAE762901 (3 samples, 0.03%)</title><rect x="49.2090%" y="821" width="0.0259%" height="15" fill="rgb(218,36,50)" fg:x="5692" fg:w="3"/><text x="49.4590%" y="831.50"></text></g><g><title>`0x7FFAE2FA4980 (5 samples, 0.04%)</title><rect x="49.2435%" y="757" width="0.0432%" height="15" fill="rgb(226,80,48)" fg:x="5696" fg:w="5"/><text x="49.4935%" y="767.50"></text></g><g><title>`0x7FFAE37753CE (2 samples, 0.02%)</title><rect x="49.2954%" y="757" width="0.0173%" height="15" fill="rgb(238,224,15)" fg:x="5702" fg:w="2"/><text x="49.5454%" y="767.50"></text></g><g><title>`0x7FFAE37753D0 (2 samples, 0.02%)</title><rect x="49.3127%" y="757" width="0.0173%" height="15" fill="rgb(241,136,10)" fg:x="5704" fg:w="2"/><text x="49.5627%" y="767.50"></text></g><g><title>`0x7FFAE37753D7 (2 samples, 0.02%)</title><rect x="49.3386%" y="757" width="0.0173%" height="15" fill="rgb(208,32,45)" fg:x="5707" fg:w="2"/><text x="49.5886%" y="767.50"></text></g><g><title>`0x7FFAE37753D9 (3 samples, 0.03%)</title><rect x="49.3559%" y="757" width="0.0259%" height="15" fill="rgb(207,135,9)" fg:x="5709" fg:w="3"/><text x="49.6059%" y="767.50"></text></g><g><title>`0x7FFAE37753E0 (2 samples, 0.02%)</title><rect x="49.3819%" y="757" width="0.0173%" height="15" fill="rgb(206,86,44)" fg:x="5712" fg:w="2"/><text x="49.6319%" y="767.50"></text></g><g><title>`0x7FFAE37753E6 (3 samples, 0.03%)</title><rect x="49.3992%" y="757" width="0.0259%" height="15" fill="rgb(245,177,15)" fg:x="5714" fg:w="3"/><text x="49.6492%" y="767.50"></text></g><g><title>`0x7FFAE37753FD (2 samples, 0.02%)</title><rect x="49.4337%" y="757" width="0.0173%" height="15" fill="rgb(206,64,50)" fg:x="5718" fg:w="2"/><text x="49.6837%" y="767.50"></text></g><g><title>`0x7FFAE3775403 (3 samples, 0.03%)</title><rect x="49.4510%" y="757" width="0.0259%" height="15" fill="rgb(234,36,40)" fg:x="5720" fg:w="3"/><text x="49.7010%" y="767.50"></text></g><g><title>`0x7FFAE377540A (3 samples, 0.03%)</title><rect x="49.4770%" y="757" width="0.0259%" height="15" fill="rgb(213,64,8)" fg:x="5723" fg:w="3"/><text x="49.7270%" y="767.50"></text></g><g><title>`0x7FFAE3775421 (2 samples, 0.02%)</title><rect x="49.5115%" y="757" width="0.0173%" height="15" fill="rgb(210,75,36)" fg:x="5727" fg:w="2"/><text x="49.7615%" y="767.50"></text></g><g><title>`0x7FFAE3775447 (2 samples, 0.02%)</title><rect x="49.5288%" y="757" width="0.0173%" height="15" fill="rgb(229,88,21)" fg:x="5729" fg:w="2"/><text x="49.7788%" y="767.50"></text></g><g><title>`0x7FFAE3775451 (2 samples, 0.02%)</title><rect x="49.5548%" y="757" width="0.0173%" height="15" fill="rgb(252,204,47)" fg:x="5732" fg:w="2"/><text x="49.8048%" y="767.50"></text></g><g><title>`0x7FFAE377545E (3 samples, 0.03%)</title><rect x="49.5721%" y="757" width="0.0259%" height="15" fill="rgb(208,77,27)" fg:x="5734" fg:w="3"/><text x="49.8221%" y="767.50"></text></g><g><title>`0x7FFAE3775485 (2 samples, 0.02%)</title><rect x="49.6326%" y="757" width="0.0173%" height="15" fill="rgb(221,76,26)" fg:x="5741" fg:w="2"/><text x="49.8826%" y="767.50"></text></g><g><title>`0x7FFAE377549D (22 samples, 0.19%)</title><rect x="49.6499%" y="757" width="0.1902%" height="15" fill="rgb(225,139,18)" fg:x="5743" fg:w="22"/><text x="49.8999%" y="767.50"></text></g><g><title>`0x7FFAE37754B4 (24 samples, 0.21%)</title><rect x="49.8401%" y="757" width="0.2075%" height="15" fill="rgb(230,137,11)" fg:x="5765" fg:w="24"/><text x="50.0901%" y="767.50"></text></g><g><title>`0x7FFAE37754B8 (37 samples, 0.32%)</title><rect x="50.0475%" y="757" width="0.3199%" height="15" fill="rgb(212,28,1)" fg:x="5789" fg:w="37"/><text x="50.2975%" y="767.50"></text></g><g><title>`0x7FFAE37754CA (8 samples, 0.07%)</title><rect x="50.3761%" y="757" width="0.0692%" height="15" fill="rgb(248,164,17)" fg:x="5827" fg:w="8"/><text x="50.6261%" y="767.50"></text></g><g><title>`0x7FFAE37754CE (17 samples, 0.15%)</title><rect x="50.4452%" y="757" width="0.1470%" height="15" fill="rgb(222,171,42)" fg:x="5835" fg:w="17"/><text x="50.6952%" y="767.50"></text></g><g><title>`0x7FFAE37754D7 (4 samples, 0.03%)</title><rect x="50.5922%" y="757" width="0.0346%" height="15" fill="rgb(243,84,45)" fg:x="5852" fg:w="4"/><text x="50.8422%" y="767.50"></text></g><g><title>`0x7FFAE37754E0 (7 samples, 0.06%)</title><rect x="50.6268%" y="757" width="0.0605%" height="15" fill="rgb(252,49,23)" fg:x="5856" fg:w="7"/><text x="50.8768%" y="767.50"></text></g><g><title>`0x7FFAE377550F (3 samples, 0.03%)</title><rect x="50.6873%" y="757" width="0.0259%" height="15" fill="rgb(215,19,7)" fg:x="5863" fg:w="3"/><text x="50.9373%" y="767.50"></text></g><g><title>`0x7FFAE377552D (7 samples, 0.06%)</title><rect x="50.7132%" y="757" width="0.0605%" height="15" fill="rgb(238,81,41)" fg:x="5866" fg:w="7"/><text x="50.9632%" y="767.50"></text></g><g><title>`0x7FFAE3775543 (77 samples, 0.67%)</title><rect x="50.7738%" y="757" width="0.6657%" height="15" fill="rgb(210,199,37)" fg:x="5873" fg:w="77"/><text x="51.0238%" y="767.50"></text></g><g><title>`0x7FFAE3775563 (4 samples, 0.03%)</title><rect x="51.4394%" y="757" width="0.0346%" height="15" fill="rgb(244,192,49)" fg:x="5950" fg:w="4"/><text x="51.6894%" y="767.50"></text></g><g><title>`0x7FFAE37755AB (4 samples, 0.03%)</title><rect x="51.4740%" y="757" width="0.0346%" height="15" fill="rgb(226,211,11)" fg:x="5954" fg:w="4"/><text x="51.7240%" y="767.50"></text></g><g><title>`0x7FFAE37755BF (2 samples, 0.02%)</title><rect x="51.5086%" y="757" width="0.0173%" height="15" fill="rgb(236,162,54)" fg:x="5958" fg:w="2"/><text x="51.7586%" y="767.50"></text></g><g><title>`0x7FFAE3775659 (22 samples, 0.19%)</title><rect x="51.5345%" y="757" width="0.1902%" height="15" fill="rgb(220,229,9)" fg:x="5961" fg:w="22"/><text x="51.7845%" y="767.50"></text></g><g><title>`0x7FFAE3775748 (11 samples, 0.10%)</title><rect x="51.7247%" y="757" width="0.0951%" height="15" fill="rgb(250,87,22)" fg:x="5983" fg:w="11"/><text x="51.9747%" y="767.50"></text></g><g><title>`0x7FFAE3775752 (5 samples, 0.04%)</title><rect x="51.8198%" y="757" width="0.0432%" height="15" fill="rgb(239,43,17)" fg:x="5994" fg:w="5"/><text x="52.0698%" y="767.50"></text></g><g><title>`0x7FFAE37759F4 (3 samples, 0.03%)</title><rect x="51.8631%" y="757" width="0.0259%" height="15" fill="rgb(231,177,25)" fg:x="5999" fg:w="3"/><text x="52.1131%" y="767.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_dealloc (6 samples, 0.05%)</title><rect x="51.8890%" y="757" width="0.0519%" height="15" fill="rgb(219,179,1)" fg:x="6002" fg:w="6"/><text x="52.1390%" y="767.50"></text></g><g><title>`0x7FFAE36EE6B2 (2 samples, 0.02%)</title><rect x="80.4011%" y="661" width="0.0173%" height="15" fill="rgb(238,219,53)" fg:x="9300" fg:w="2"/><text x="80.6511%" y="671.50"></text></g><g><title>`0x7FFAE36EF15D (2 samples, 0.02%)</title><rect x="80.4184%" y="661" width="0.0173%" height="15" fill="rgb(232,167,36)" fg:x="9302" fg:w="2"/><text x="80.6684%" y="671.50"></text></g><g><title>`0x7FFAE36EF1C0 (3 samples, 0.03%)</title><rect x="80.4530%" y="645" width="0.0259%" height="15" fill="rgb(244,19,51)" fg:x="9306" fg:w="3"/><text x="80.7030%" y="655.50"></text></g><g><title>`0x7FFAE36EF1FA (3 samples, 0.03%)</title><rect x="80.4876%" y="645" width="0.0259%" height="15" fill="rgb(224,6,22)" fg:x="9310" fg:w="3"/><text x="80.7376%" y="655.50"></text></g><g><title>`0x7FFAE36EF21F (3 samples, 0.03%)</title><rect x="80.5135%" y="645" width="0.0259%" height="15" fill="rgb(224,145,5)" fg:x="9313" fg:w="3"/><text x="80.7635%" y="655.50"></text></g><g><title>`0x7FFAE36EF24E (4 samples, 0.03%)</title><rect x="80.5395%" y="645" width="0.0346%" height="15" fill="rgb(234,130,49)" fg:x="9316" fg:w="4"/><text x="80.7895%" y="655.50"></text></g><g><title>`0x7FFAE36EF26B (3 samples, 0.03%)</title><rect x="80.5827%" y="645" width="0.0259%" height="15" fill="rgb(254,6,2)" fg:x="9321" fg:w="3"/><text x="80.8327%" y="655.50"></text></g><g><title>`0x7FFAE36EF29B (3 samples, 0.03%)</title><rect x="80.6086%" y="645" width="0.0259%" height="15" fill="rgb(208,96,46)" fg:x="9324" fg:w="3"/><text x="80.8586%" y="655.50"></text></g><g><title>`0x7FFAE36EF8C0 (5 samples, 0.04%)</title><rect x="80.6432%" y="629" width="0.0432%" height="15" fill="rgb(239,3,39)" fg:x="9328" fg:w="5"/><text x="80.8932%" y="639.50"></text></g><g><title>`0x7FFAE36EF8D5 (7 samples, 0.06%)</title><rect x="80.6864%" y="629" width="0.0605%" height="15" fill="rgb(233,210,1)" fg:x="9333" fg:w="7"/><text x="80.9364%" y="639.50"></text></g><g><title>`0x7FFAE36EF8F5 (6 samples, 0.05%)</title><rect x="80.7470%" y="629" width="0.0519%" height="15" fill="rgb(244,137,37)" fg:x="9340" fg:w="6"/><text x="80.9970%" y="639.50"></text></g><g><title>`0x7FFAE36EF91C (8 samples, 0.07%)</title><rect x="80.8075%" y="629" width="0.0692%" height="15" fill="rgb(240,136,2)" fg:x="9347" fg:w="8"/><text x="81.0575%" y="639.50"></text></g><g><title>`0x7FFAE36EF921 (3 samples, 0.03%)</title><rect x="80.8766%" y="629" width="0.0259%" height="15" fill="rgb(239,18,37)" fg:x="9355" fg:w="3"/><text x="81.1266%" y="639.50"></text></g><g><title>`0x7FFAE36EF9A7 (2 samples, 0.02%)</title><rect x="80.9112%" y="629" width="0.0173%" height="15" fill="rgb(218,185,22)" fg:x="9359" fg:w="2"/><text x="81.1612%" y="639.50"></text></g><g><title>`0x7FFAE36EF9AB (2 samples, 0.02%)</title><rect x="80.9285%" y="629" width="0.0173%" height="15" fill="rgb(225,218,4)" fg:x="9361" fg:w="2"/><text x="81.1785%" y="639.50"></text></g><g><title>`0x7FFAE36EF9D6 (4 samples, 0.03%)</title><rect x="80.9544%" y="629" width="0.0346%" height="15" fill="rgb(230,182,32)" fg:x="9364" fg:w="4"/><text x="81.2044%" y="639.50"></text></g><g><title>`0x7FFAE36EFA25 (3 samples, 0.03%)</title><rect x="80.9890%" y="629" width="0.0259%" height="15" fill="rgb(242,56,43)" fg:x="9368" fg:w="3"/><text x="81.2390%" y="639.50"></text></g><g><title>`0x7FFAE36EFA31 (4 samples, 0.03%)</title><rect x="81.0150%" y="629" width="0.0346%" height="15" fill="rgb(233,99,24)" fg:x="9371" fg:w="4"/><text x="81.2650%" y="639.50"></text></g><g><title>`0x7FFAE36EFA38 (4 samples, 0.03%)</title><rect x="81.0495%" y="629" width="0.0346%" height="15" fill="rgb(234,209,42)" fg:x="9375" fg:w="4"/><text x="81.2995%" y="639.50"></text></g><g><title>`0x7FFAE36EFA5B (3 samples, 0.03%)</title><rect x="81.0928%" y="629" width="0.0259%" height="15" fill="rgb(227,7,12)" fg:x="9380" fg:w="3"/><text x="81.3428%" y="639.50"></text></g><g><title>`0x7FFAE36EFA68 (6 samples, 0.05%)</title><rect x="81.1187%" y="629" width="0.0519%" height="15" fill="rgb(245,203,43)" fg:x="9383" fg:w="6"/><text x="81.3687%" y="639.50"></text></g><g><title>`0x7FFAE36EFA8D (6 samples, 0.05%)</title><rect x="81.1792%" y="629" width="0.0519%" height="15" fill="rgb(238,205,33)" fg:x="9390" fg:w="6"/><text x="81.4292%" y="639.50"></text></g><g><title>`0x7FFAE36EFACE (3 samples, 0.03%)</title><rect x="81.2311%" y="629" width="0.0259%" height="15" fill="rgb(231,56,7)" fg:x="9396" fg:w="3"/><text x="81.4811%" y="639.50"></text></g><g><title>`0x7FFAE36EFB00 (4 samples, 0.03%)</title><rect x="81.2570%" y="629" width="0.0346%" height="15" fill="rgb(244,186,29)" fg:x="9399" fg:w="4"/><text x="81.5070%" y="639.50"></text></g><g><title>`0x7FFAE36EFB2A (7 samples, 0.06%)</title><rect x="81.3003%" y="629" width="0.0605%" height="15" fill="rgb(234,111,31)" fg:x="9404" fg:w="7"/><text x="81.5503%" y="639.50"></text></g><g><title>`0x7FFAE36EFB4E (4 samples, 0.03%)</title><rect x="81.3694%" y="629" width="0.0346%" height="15" fill="rgb(241,149,10)" fg:x="9412" fg:w="4"/><text x="81.6194%" y="639.50"></text></g><g><title>`0x7FFAE36EFB60 (7 samples, 0.06%)</title><rect x="81.4040%" y="629" width="0.0605%" height="15" fill="rgb(249,206,44)" fg:x="9416" fg:w="7"/><text x="81.6540%" y="639.50"></text></g><g><title>`0x7FFAE36EFB71 (2 samples, 0.02%)</title><rect x="81.4732%" y="629" width="0.0173%" height="15" fill="rgb(251,153,30)" fg:x="9424" fg:w="2"/><text x="81.7232%" y="639.50"></text></g><g><title>`0x7FFAE36EFB77 (6 samples, 0.05%)</title><rect x="81.4904%" y="629" width="0.0519%" height="15" fill="rgb(239,152,38)" fg:x="9426" fg:w="6"/><text x="81.7404%" y="639.50"></text></g><g><title>`0x7FFAE36EFB92 (2 samples, 0.02%)</title><rect x="81.5510%" y="629" width="0.0173%" height="15" fill="rgb(249,139,47)" fg:x="9433" fg:w="2"/><text x="81.8010%" y="639.50"></text></g><g><title>`0x7FFAE36EFBAA (7 samples, 0.06%)</title><rect x="81.5942%" y="629" width="0.0605%" height="15" fill="rgb(244,64,35)" fg:x="9438" fg:w="7"/><text x="81.8442%" y="639.50"></text></g><g><title>`0x7FFAE36EFBC0 (23 samples, 0.20%)</title><rect x="81.6634%" y="629" width="0.1988%" height="15" fill="rgb(216,46,15)" fg:x="9446" fg:w="23"/><text x="81.9134%" y="639.50"></text></g><g><title>`0x7FFAE36EFFF4 (2 samples, 0.02%)</title><rect x="81.8708%" y="629" width="0.0173%" height="15" fill="rgb(250,74,19)" fg:x="9470" fg:w="2"/><text x="82.1208%" y="639.50"></text></g><g><title>`0x7FFAE36EFFFF (105 samples, 0.91%)</title><rect x="81.8881%" y="629" width="0.9078%" height="15" fill="rgb(249,42,33)" fg:x="9472" fg:w="105"/><text x="82.1381%" y="639.50"></text></g><g><title>`0x7FFAE36F001E (5 samples, 0.04%)</title><rect x="82.7959%" y="629" width="0.0432%" height="15" fill="rgb(242,149,17)" fg:x="9577" fg:w="5"/><text x="83.0459%" y="639.50"></text></g><g><title>`0x7FFAE36F0022 (2 samples, 0.02%)</title><rect x="82.8391%" y="629" width="0.0173%" height="15" fill="rgb(244,29,21)" fg:x="9582" fg:w="2"/><text x="83.0891%" y="639.50"></text></g><g><title>`0x7FFAE3848066 (5 samples, 0.04%)</title><rect x="82.8564%" y="613" width="0.0432%" height="15" fill="rgb(220,130,37)" fg:x="9584" fg:w="5"/><text x="83.1064%" y="623.50"></text></g><g><title>`0x7FFAE3848111 (5 samples, 0.04%)</title><rect x="82.9083%" y="613" width="0.0432%" height="15" fill="rgb(211,67,2)" fg:x="9590" fg:w="5"/><text x="83.1583%" y="623.50"></text></g><g><title>`0x7FFAE36F002D (18 samples, 0.16%)</title><rect x="82.8564%" y="629" width="0.1556%" height="15" fill="rgb(235,68,52)" fg:x="9584" fg:w="18"/><text x="83.1064%" y="639.50"></text></g><g><title>`0x7FFAE3852030 (7 samples, 0.06%)</title><rect x="82.9515%" y="613" width="0.0605%" height="15" fill="rgb(246,142,3)" fg:x="9595" fg:w="7"/><text x="83.2015%" y="623.50"></text></g><g><title>`0x7FFAE36F003D (5 samples, 0.04%)</title><rect x="83.0120%" y="629" width="0.0432%" height="15" fill="rgb(241,25,7)" fg:x="9602" fg:w="5"/><text x="83.2620%" y="639.50"></text></g><g><title>`0x7FFAE36F005A (2 samples, 0.02%)</title><rect x="83.0552%" y="629" width="0.0173%" height="15" fill="rgb(242,119,39)" fg:x="9607" fg:w="2"/><text x="83.3052%" y="639.50"></text></g><g><title>`0x7FFAE36F0060 (6 samples, 0.05%)</title><rect x="83.0725%" y="629" width="0.0519%" height="15" fill="rgb(241,98,45)" fg:x="9609" fg:w="6"/><text x="83.3225%" y="639.50"></text></g><g><title>`0x7FFAE36EF2A4 (288 samples, 2.49%)</title><rect x="80.6432%" y="645" width="2.4898%" height="15" fill="rgb(254,28,30)" fg:x="9328" fg:w="288"/><text x="80.8932%" y="655.50">`0..</text></g><g><title>`0x7FFAE36EF2B0 (6 samples, 0.05%)</title><rect x="83.1331%" y="645" width="0.0519%" height="15" fill="rgb(241,142,54)" fg:x="9616" fg:w="6"/><text x="83.3831%" y="655.50"></text></g><g><title>`0x7FFAE36EF35B (4 samples, 0.03%)</title><rect x="83.1849%" y="645" width="0.0346%" height="15" fill="rgb(222,85,15)" fg:x="9622" fg:w="4"/><text x="83.4349%" y="655.50"></text></g><g><title>`0x7FFAE36EF164 (328 samples, 2.84%)</title><rect x="80.4357%" y="661" width="2.8357%" height="15" fill="rgb(210,85,47)" fg:x="9304" fg:w="328"/><text x="80.6857%" y="671.50">`0..</text></g><g><title>`0x7FFAE36EF38C (4 samples, 0.03%)</title><rect x="83.2368%" y="645" width="0.0346%" height="15" fill="rgb(224,206,25)" fg:x="9628" fg:w="4"/><text x="83.4868%" y="655.50"></text></g><g><title>`0x7FFAE36EF167 (4 samples, 0.03%)</title><rect x="83.2714%" y="661" width="0.0346%" height="15" fill="rgb(243,201,19)" fg:x="9632" fg:w="4"/><text x="83.5214%" y="671.50"></text></g><g><title>`0x7FFAE36EF183 (7 samples, 0.06%)</title><rect x="83.3060%" y="661" width="0.0605%" height="15" fill="rgb(236,59,4)" fg:x="9636" fg:w="7"/><text x="83.5560%" y="671.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_alloc_zeroed (2 samples, 0.02%)</title><rect x="83.3665%" y="661" width="0.0173%" height="15" fill="rgb(254,179,45)" fg:x="9643" fg:w="2"/><text x="83.6165%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (5 samples, 0.04%)</title><rect x="83.3838%" y="661" width="0.0432%" height="15" fill="rgb(226,14,10)" fg:x="9645" fg:w="5"/><text x="83.6338%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (5 samples, 0.04%)</title><rect x="83.3838%" y="645" width="0.0432%" height="15" fill="rgb(244,27,41)" fg:x="9645" fg:w="5"/><text x="83.6338%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (5 samples, 0.04%)</title><rect x="83.3838%" y="629" width="0.0432%" height="15" fill="rgb(235,35,32)" fg:x="9645" fg:w="5"/><text x="83.6338%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::layout_array (5 samples, 0.04%)</title><rect x="83.4270%" y="661" width="0.0432%" height="15" fill="rgb(218,68,31)" fg:x="9650" fg:w="5"/><text x="83.6770%" y="671.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat (5 samples, 0.04%)</title><rect x="83.4270%" y="645" width="0.0432%" height="15" fill="rgb(207,120,37)" fg:x="9650" fg:w="5"/><text x="83.6770%" y="655.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat_packed (5 samples, 0.04%)</title><rect x="83.4270%" y="629" width="0.0432%" height="15" fill="rgb(227,98,0)" fg:x="9650" fg:w="5"/><text x="83.6770%" y="639.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::checked_mul (5 samples, 0.04%)</title><rect x="83.4270%" y="613" width="0.0432%" height="15" fill="rgb(207,7,3)" fg:x="9650" fg:w="5"/><text x="83.6770%" y="623.50"></text></g><g><title>ant_colony.exe`core::intrinsics::unlikely (5 samples, 0.04%)</title><rect x="83.4270%" y="597" width="0.0432%" height="15" fill="rgb(206,98,19)" fg:x="9650" fg:w="5"/><text x="83.6770%" y="607.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_alloc_zeroed (3 samples, 0.03%)</title><rect x="83.4702%" y="661" width="0.0259%" height="15" fill="rgb(217,5,26)" fg:x="9655" fg:w="3"/><text x="83.7202%" y="671.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::alloc_zeroed (3 samples, 0.03%)</title><rect x="83.4702%" y="645" width="0.0259%" height="15" fill="rgb(235,190,38)" fg:x="9655" fg:w="3"/><text x="83.7202%" y="655.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::allocate (3 samples, 0.03%)</title><rect x="83.4702%" y="629" width="0.0259%" height="15" fill="rgb(247,86,24)" fg:x="9655" fg:w="3"/><text x="83.7202%" y="639.50"></text></g><g><title>`0x7FFAE2FA3F90 (4 samples, 0.03%)</title><rect x="83.5826%" y="629" width="0.0346%" height="15" fill="rgb(205,101,16)" fg:x="9668" fg:w="4"/><text x="83.8326%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (376 samples, 3.25%)</title><rect x="80.3839%" y="741" width="3.2506%" height="15" fill="rgb(246,168,33)" fg:x="9298" fg:w="376"/><text x="80.6339%" y="751.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (376 samples, 3.25%)</title><rect x="80.3839%" y="725" width="3.2506%" height="15" fill="rgb(231,114,1)" fg:x="9298" fg:w="376"/><text x="80.6339%" y="735.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (376 samples, 3.25%)</title><rect x="80.3839%" y="709" width="3.2506%" height="15" fill="rgb(207,184,53)" fg:x="9298" fg:w="376"/><text x="80.6339%" y="719.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (376 samples, 3.25%)</title><rect x="80.3839%" y="693" width="3.2506%" height="15" fill="rgb(224,95,51)" fg:x="9298" fg:w="376"/><text x="80.6339%" y="703.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (376 samples, 3.25%)</title><rect x="80.3839%" y="677" width="3.2506%" height="15" fill="rgb(212,188,45)" fg:x="9298" fg:w="376"/><text x="80.6339%" y="687.50">ant..</text></g><g><title>ant_colony.exe`std::sys::alloc::windows::process_heap_alloc (16 samples, 0.14%)</title><rect x="83.4962%" y="661" width="0.1383%" height="15" fill="rgb(223,154,38)" fg:x="9658" fg:w="16"/><text x="83.7462%" y="671.50"></text></g><g><title>ant_colony.exe`core::intrinsics::unlikely (7 samples, 0.06%)</title><rect x="83.5740%" y="645" width="0.0605%" height="15" fill="rgb(251,22,52)" fg:x="9667" fg:w="7"/><text x="83.8240%" y="655.50"></text></g><g><title>`0x7FFAE2FA3F9D (2 samples, 0.02%)</title><rect x="83.6172%" y="629" width="0.0173%" height="15" fill="rgb(229,209,22)" fg:x="9672" fg:w="2"/><text x="83.8672%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (649 samples, 5.61%)</title><rect x="83.6345%" y="741" width="5.6108%" height="15" fill="rgb(234,138,34)" fg:x="9674" fg:w="649"/><text x="83.8845%" y="751.50">ant_col..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (649 samples, 5.61%)</title><rect x="83.6345%" y="725" width="5.6108%" height="15" fill="rgb(212,95,11)" fg:x="9674" fg:w="649"/><text x="83.8845%" y="735.50">ant_col..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (649 samples, 5.61%)</title><rect x="83.6345%" y="709" width="5.6108%" height="15" fill="rgb(240,179,47)" fg:x="9674" fg:w="649"/><text x="83.8845%" y="719.50">ant_col..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (135 samples, 1.17%)</title><rect x="89.2453%" y="741" width="1.1671%" height="15" fill="rgb(240,163,11)" fg:x="10323" fg:w="135"/><text x="89.4953%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (135 samples, 1.17%)</title><rect x="89.2453%" y="725" width="1.1671%" height="15" fill="rgb(236,37,12)" fg:x="10323" fg:w="135"/><text x="89.4953%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (135 samples, 1.17%)</title><rect x="89.2453%" y="709" width="1.1671%" height="15" fill="rgb(232,164,16)" fg:x="10323" fg:w="135"/><text x="89.4953%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (52 samples, 0.45%)</title><rect x="92.0982%" y="725" width="0.4496%" height="15" fill="rgb(244,205,15)" fg:x="10653" fg:w="52"/><text x="92.3482%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (52 samples, 0.45%)</title><rect x="92.0982%" y="709" width="0.4496%" height="15" fill="rgb(223,117,47)" fg:x="10653" fg:w="52"/><text x="92.3482%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (52 samples, 0.45%)</title><rect x="92.0982%" y="693" width="0.4496%" height="15" fill="rgb(244,107,35)" fg:x="10653" fg:w="52"/><text x="92.3482%" y="703.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (332 samples, 2.87%)</title><rect x="90.4124%" y="741" width="2.8702%" height="15" fill="rgb(205,140,8)" fg:x="10458" fg:w="332"/><text x="90.6624%" y="751.50">an..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (85 samples, 0.73%)</title><rect x="92.5478%" y="725" width="0.7348%" height="15" fill="rgb(228,84,46)" fg:x="10705" fg:w="85"/><text x="92.7978%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (41 samples, 0.35%)</title><rect x="92.9282%" y="709" width="0.3545%" height="15" fill="rgb(254,188,9)" fg:x="10749" fg:w="41"/><text x="93.1782%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (41 samples, 0.35%)</title><rect x="92.9282%" y="693" width="0.3545%" height="15" fill="rgb(206,112,54)" fg:x="10749" fg:w="41"/><text x="93.1782%" y="703.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (41 samples, 0.35%)</title><rect x="92.9282%" y="677" width="0.3545%" height="15" fill="rgb(216,84,49)" fg:x="10749" fg:w="41"/><text x="93.1782%" y="687.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (19 samples, 0.16%)</title><rect x="93.2826%" y="741" width="0.1643%" height="15" fill="rgb(214,194,35)" fg:x="10790" fg:w="19"/><text x="93.5326%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (19 samples, 0.16%)</title><rect x="93.2826%" y="725" width="0.1643%" height="15" fill="rgb(249,28,3)" fg:x="10790" fg:w="19"/><text x="93.5326%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (19 samples, 0.16%)</title><rect x="93.2826%" y="709" width="0.1643%" height="15" fill="rgb(222,56,52)" fg:x="10790" fg:w="19"/><text x="93.5326%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (19 samples, 0.16%)</title><rect x="93.2826%" y="693" width="0.1643%" height="15" fill="rgb(245,217,50)" fg:x="10790" fg:w="19"/><text x="93.5326%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (19 samples, 0.16%)</title><rect x="93.2826%" y="677" width="0.1643%" height="15" fill="rgb(213,201,24)" fg:x="10790" fg:w="19"/><text x="93.5326%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (19 samples, 0.16%)</title><rect x="93.2826%" y="661" width="0.1643%" height="15" fill="rgb(248,116,28)" fg:x="10790" fg:w="19"/><text x="93.5326%" y="671.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (5,231 samples, 45.22%)</title><rect x="51.9409%" y="757" width="45.2235%" height="15" fill="rgb(219,72,43)" fg:x="6008" fg:w="5231"/><text x="52.1909%" y="767.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::ve..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (430 samples, 3.72%)</title><rect x="93.4469%" y="741" width="3.7175%" height="15" fill="rgb(209,138,14)" fg:x="10809" fg:w="430"/><text x="93.6969%" y="751.50">ant_..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (430 samples, 3.72%)</title><rect x="93.4469%" y="725" width="3.7175%" height="15" fill="rgb(222,18,33)" fg:x="10809" fg:w="430"/><text x="93.6969%" y="735.50">ant_..</text></g><g><title>`0x7FFAE2FA3F90 (7 samples, 0.06%)</title><rect x="97.2681%" y="725" width="0.0605%" height="15" fill="rgb(213,199,7)" fg:x="11251" fg:w="7"/><text x="97.5181%" y="735.50"></text></g><g><title>`0x7FFAE2FA3F9D (6 samples, 0.05%)</title><rect x="97.3373%" y="725" width="0.0519%" height="15" fill="rgb(250,110,10)" fg:x="11259" fg:w="6"/><text x="97.5873%" y="735.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (5,608 samples, 48.48%)</title><rect x="48.9150%" y="837" width="48.4828%" height="15" fill="rgb(248,123,6)" fg:x="5658" fg:w="5608"/><text x="49.1650%" y="847.50">ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (5,570 samples, 48.15%)</title><rect x="49.2435%" y="821" width="48.1542%" height="15" fill="rgb(206,91,31)" fg:x="5696" fg:w="5570"/><text x="49.4935%" y="831.50">ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (5,570 samples, 48.15%)</title><rect x="49.2435%" y="805" width="48.1542%" height="15" fill="rgb(211,154,13)" fg:x="5696" fg:w="5570"/><text x="49.4935%" y="815.50">ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (5,570 samples, 48.15%)</title><rect x="49.2435%" y="789" width="48.1542%" height="15" fill="rgb(225,148,7)" fg:x="5696" fg:w="5570"/><text x="49.4935%" y="799.50">ant_colony.exe`core::iter::range::impl$43::forward_unchecked</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (5,570 samples, 48.15%)</title><rect x="49.2435%" y="773" width="48.1542%" height="15" fill="rgb(220,160,43)" fg:x="5696" fg:w="5570"/><text x="49.4935%" y="783.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (27 samples, 0.23%)</title><rect x="97.1643%" y="757" width="0.2334%" height="15" fill="rgb(213,52,39)" fg:x="11239" fg:w="27"/><text x="97.4143%" y="767.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (19 samples, 0.16%)</title><rect x="97.2335%" y="741" width="0.1643%" height="15" fill="rgb(243,137,7)" fg:x="11247" fg:w="19"/><text x="97.4835%" y="751.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (5,683 samples, 49.13%)</title><rect x="48.3531%" y="853" width="49.1311%" height="15" fill="rgb(230,79,13)" fg:x="5593" fg:w="5683"/><text x="48.6031%" y="863.50">ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,al..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (10 samples, 0.09%)</title><rect x="97.3978%" y="837" width="0.0865%" height="15" fill="rgb(247,105,23)" fg:x="11266" fg:w="10"/><text x="97.6478%" y="847.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (10 samples, 0.09%)</title><rect x="97.3978%" y="821" width="0.0865%" height="15" fill="rgb(223,179,41)" fg:x="11266" fg:w="10"/><text x="97.6478%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_edges (3 samples, 0.03%)</title><rect x="97.4842%" y="853" width="0.0259%" height="15" fill="rgb(218,9,34)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (3 samples, 0.03%)</title><rect x="97.4842%" y="837" width="0.0259%" height="15" fill="rgb(222,106,8)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.03%)</title><rect x="97.4842%" y="821" width="0.0259%" height="15" fill="rgb(211,220,0)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (3 samples, 0.03%)</title><rect x="97.4842%" y="805" width="0.0259%" height="15" fill="rgb(229,52,16)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.03%)</title><rect x="97.4842%" y="789" width="0.0259%" height="15" fill="rgb(212,155,18)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.03%)</title><rect x="97.4842%" y="773" width="0.0259%" height="15" fill="rgb(242,21,14)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::grow_one&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt; (3 samples, 0.03%)</title><rect x="97.4842%" y="757" width="0.0259%" height="15" fill="rgb(222,19,48)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (3 samples, 0.03%)</title><rect x="97.4842%" y="741" width="0.0259%" height="15" fill="rgb(232,45,27)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="97.4842%" y="725" width="0.0259%" height="15" fill="rgb(249,103,42)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="735.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.03%)</title><rect x="97.4842%" y="709" width="0.0259%" height="15" fill="rgb(246,81,33)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.03%)</title><rect x="97.4842%" y="693" width="0.0259%" height="15" fill="rgb(252,33,42)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.03%)</title><rect x="97.4842%" y="677" width="0.0259%" height="15" fill="rgb(209,212,41)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.03%)</title><rect x="97.4842%" y="661" width="0.0259%" height="15" fill="rgb(207,154,6)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="671.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.03%)</title><rect x="97.4842%" y="645" width="0.0259%" height="15" fill="rgb(223,64,47)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="655.50"></text></g><g><title>`0x7FFAE3728F8D (3 samples, 0.03%)</title><rect x="97.4842%" y="629" width="0.0259%" height="15" fill="rgb(211,161,38)" fg:x="11276" fg:w="3"/><text x="97.7342%" y="639.50"></text></g><g><title>`0x7FFAE3729235 (2 samples, 0.02%)</title><rect x="97.4929%" y="613" width="0.0173%" height="15" fill="rgb(219,138,40)" fg:x="11277" fg:w="2"/><text x="97.7429%" y="623.50"></text></g><g><title>`0x7FFAE3729AEA (2 samples, 0.02%)</title><rect x="97.4929%" y="597" width="0.0173%" height="15" fill="rgb(241,228,46)" fg:x="11277" fg:w="2"/><text x="97.7429%" y="607.50"></text></g><g><title>`0x7FFAE36EF164 (2 samples, 0.02%)</title><rect x="97.4929%" y="581" width="0.0173%" height="15" fill="rgb(223,209,38)" fg:x="11277" fg:w="2"/><text x="97.7429%" y="591.50"></text></g><g><title>`0x7FFAE36EF2A4 (2 samples, 0.02%)</title><rect x="97.4929%" y="565" width="0.0173%" height="15" fill="rgb(236,164,45)" fg:x="11277" fg:w="2"/><text x="97.7429%" y="575.50"></text></g><g><title>ant_colony.exe`core::f64::impl$0::clamp (4 samples, 0.03%)</title><rect x="97.5102%" y="853" width="0.0346%" height="15" fill="rgb(231,15,5)" fg:x="11279" fg:w="4"/><text x="97.7602%" y="863.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (3 samples, 0.03%)</title><rect x="97.5447%" y="853" width="0.0259%" height="15" fill="rgb(252,35,15)" fg:x="11283" fg:w="3"/><text x="97.7947%" y="863.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (3 samples, 0.03%)</title><rect x="97.5447%" y="837" width="0.0259%" height="15" fill="rgb(248,181,18)" fg:x="11283" fg:w="3"/><text x="97.7947%" y="847.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (3 samples, 0.03%)</title><rect x="97.5447%" y="821" width="0.0259%" height="15" fill="rgb(233,39,42)" fg:x="11283" fg:w="3"/><text x="97.7947%" y="831.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec&lt;array$ (14 samples, 0.12%)</title><rect x="97.5793%" y="853" width="0.1210%" height="15" fill="rgb(238,110,33)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::vec::Vec&lt;array$ (14 samples, 0.12%)</title><rect x="97.5793%" y="837" width="0.1210%" height="15" fill="rgb(233,195,10)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="847.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;alloc::vec::Vec&lt;array$ (14 samples, 0.12%)</title><rect x="97.5793%" y="821" width="0.1210%" height="15" fill="rgb(254,105,3)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="831.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;array$ (14 samples, 0.12%)</title><rect x="97.5793%" y="805" width="0.1210%" height="15" fill="rgb(221,225,9)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="815.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;array$ (14 samples, 0.12%)</title><rect x="97.5793%" y="789" width="0.1210%" height="15" fill="rgb(224,227,45)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;array$ (14 samples, 0.12%)</title><rect x="97.5793%" y="773" width="0.1210%" height="15" fill="rgb(229,198,43)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (14 samples, 0.12%)</title><rect x="97.5793%" y="757" width="0.1210%" height="15" fill="rgb(206,209,35)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (14 samples, 0.12%)</title><rect x="97.5793%" y="741" width="0.1210%" height="15" fill="rgb(245,195,53)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (14 samples, 0.12%)</title><rect x="97.5793%" y="725" width="0.1210%" height="15" fill="rgb(240,92,26)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="735.50"></text></g><g><title>`0x7FFAE37759E0 (14 samples, 0.12%)</title><rect x="97.5793%" y="709" width="0.1210%" height="15" fill="rgb(207,40,23)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="719.50"></text></g><g><title>`0x7FFAE36F5578 (14 samples, 0.12%)</title><rect x="97.5793%" y="693" width="0.1210%" height="15" fill="rgb(223,111,35)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="703.50"></text></g><g><title>`0x7FFAE376802F (14 samples, 0.12%)</title><rect x="97.5793%" y="677" width="0.1210%" height="15" fill="rgb(229,147,28)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="687.50"></text></g><g><title>`0x7FFAE3841EC4 (14 samples, 0.12%)</title><rect x="97.5793%" y="661" width="0.1210%" height="15" fill="rgb(211,29,28)" fg:x="11287" fg:w="14"/><text x="97.8293%" y="671.50"></text></g><g><title>ant_colony.exe`pow (6 samples, 0.05%)</title><rect x="97.7004%" y="853" width="0.0519%" height="15" fill="rgb(228,72,33)" fg:x="11301" fg:w="6"/><text x="97.9504%" y="863.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::launch (11,178 samples, 96.64%)</title><rect x="1.2536%" y="869" width="96.6370%" height="15" fill="rgb(205,214,31)" fg:x="145" fg:w="11178"/><text x="1.5036%" y="879.50">ant_colony.exe`ant_colony::graph::ACO::launch</text></g><g><title>ant_colony.exe`rand_xoshiro::xoshiro256plusplus::impl$2::next_u64 (16 samples, 0.14%)</title><rect x="97.7522%" y="853" width="0.1383%" height="15" fill="rgb(224,111,15)" fg:x="11307" fg:w="16"/><text x="98.0022%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (3 samples, 0.03%)</title><rect x="97.8906%" y="453" width="0.0259%" height="15" fill="rgb(253,21,26)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (3 samples, 0.03%)</title><rect x="97.8906%" y="437" width="0.0259%" height="15" fill="rgb(245,139,43)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (3 samples, 0.03%)</title><rect x="97.8906%" y="421" width="0.0259%" height="15" fill="rgb(252,170,7)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="431.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::global_registry (3 samples, 0.03%)</title><rect x="97.8906%" y="405" width="0.0259%" height="15" fill="rgb(231,118,14)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="415.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::set_global_registry(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.03%)</title><rect x="97.8906%" y="389" width="0.0259%" height="15" fill="rgb(238,83,0)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="399.50"></text></g><g><title>ant_colony.exe`std::sync::poison::once::Once::call_once(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.03%)</title><rect x="97.8906%" y="373" width="0.0259%" height="15" fill="rgb(221,39,39)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="383.50"></text></g><g><title>ant_colony.exe`std::sys::sync::once::futex::Once::call (3 samples, 0.03%)</title><rect x="97.8906%" y="357" width="0.0259%" height="15" fill="rgb(222,119,46)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="367.50"></text></g><g><title>ant_colony.exe`core::cell::Cell::get (3 samples, 0.03%)</title><rect x="97.8906%" y="341" width="0.0259%" height="15" fill="rgb(222,165,49)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="351.50"></text></g><g><title>ant_colony.exe`std::sync::poison::once::impl$2::call_once::closure$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*)()&gt; &gt;(std::sync::poison::once::impl$2::call_once::closure_env$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.03%)</title><rect x="97.8906%" y="325" width="0.0259%" height="15" fill="rgb(219,113,52)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::set_global_registry::closure$0(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.03%)</title><rect x="97.8906%" y="309" width="0.0259%" height="15" fill="rgb(214,7,15)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="319.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (3 samples, 0.03%)</title><rect x="97.8906%" y="293" width="0.0259%" height="15" fill="rgb(235,32,4)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="303.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::default_global_registry (3 samples, 0.03%)</title><rect x="97.8906%" y="277" width="0.0259%" height="15" fill="rgb(238,90,54)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="287.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::Registry::new&lt;rayon_core::registry::DefaultSpawn&gt;(rayon_core::ThreadPoolBuilder (3 samples, 0.03%)</title><rect x="97.8906%" y="261" width="0.0259%" height="15" fill="rgb(213,208,19)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="271.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::impl$2::spawn (3 samples, 0.03%)</title><rect x="97.8906%" y="245" width="0.0259%" height="15" fill="rgb(233,156,4)" fg:x="11323" fg:w="3"/><text x="98.1406%" y="255.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn (2 samples, 0.02%)</title><rect x="97.8992%" y="229" width="0.0173%" height="15" fill="rgb(207,194,5)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="239.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn_unchecked&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (2 samples, 0.02%)</title><rect x="97.8992%" y="213" width="0.0173%" height="15" fill="rgb(206,111,30)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="223.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, rayon_core::registry::impl$2::spawn::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (2 samples, 0.02%)</title><rect x="97.8992%" y="197" width="0.0173%" height="15" fill="rgb(243,70,54)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="207.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::thread::Thread::new (2 samples, 0.02%)</title><rect x="97.8992%" y="181" width="0.0173%" height="15" fill="rgb(242,28,8)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="191.50"></text></g><g><title>`0x7FFAE2FB313D (2 samples, 0.02%)</title><rect x="97.8992%" y="165" width="0.0173%" height="15" fill="rgb(219,106,18)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="175.50"></text></g><g><title>`0x7FFAE0A40AA9 (2 samples, 0.02%)</title><rect x="97.8992%" y="149" width="0.0173%" height="15" fill="rgb(244,222,10)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="159.50"></text></g><g><title>`0x7FFAE3843414 (2 samples, 0.02%)</title><rect x="97.8992%" y="133" width="0.0173%" height="15" fill="rgb(236,179,52)" fg:x="11324" fg:w="2"/><text x="98.1492%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::new(ant_colony::graph::Graph, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par (4 samples, 0.03%)</title><rect x="97.8906%" y="869" width="0.0346%" height="15" fill="rgb(213,23,39)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="879.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_edge_betweeness_centrality (4 samples, 0.03%)</title><rect x="97.8906%" y="853" width="0.0346%" height="15" fill="rgb(238,48,10)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="863.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (4 samples, 0.03%)</title><rect x="97.8906%" y="837" width="0.0346%" height="15" fill="rgb(251,196,23)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="847.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (4 samples, 0.03%)</title><rect x="97.8906%" y="821" width="0.0346%" height="15" fill="rgb(250,152,24)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_zeroed_in (4 samples, 0.03%)</title><rect x="97.8906%" y="805" width="0.0346%" height="15" fill="rgb(209,150,17)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (4 samples, 0.03%)</title><rect x="97.8906%" y="789" width="0.0346%" height="15" fill="rgb(234,202,34)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (4 samples, 0.03%)</title><rect x="97.8906%" y="773" width="0.0346%" height="15" fill="rgb(253,148,53)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::layout_array (4 samples, 0.03%)</title><rect x="97.8906%" y="757" width="0.0346%" height="15" fill="rgb(218,129,16)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="767.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat (4 samples, 0.03%)</title><rect x="97.8906%" y="741" width="0.0346%" height="15" fill="rgb(216,85,19)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="751.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat_packed (4 samples, 0.03%)</title><rect x="97.8906%" y="725" width="0.0346%" height="15" fill="rgb(235,228,7)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="735.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::checked_mul (4 samples, 0.03%)</title><rect x="97.8906%" y="709" width="0.0346%" height="15" fill="rgb(245,175,0)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="719.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::overflowing_mul (4 samples, 0.03%)</title><rect x="97.8906%" y="693" width="0.0346%" height="15" fill="rgb(208,168,36)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="703.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="97.8906%" y="677" width="0.0346%" height="15" fill="rgb(246,171,24)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.03%)</title><rect x="97.8906%" y="661" width="0.0346%" height="15" fill="rgb(215,142,24)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_mut_slice (4 samples, 0.03%)</title><rect x="97.8906%" y="645" width="0.0346%" height="15" fill="rgb(250,187,7)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.03%)</title><rect x="97.8906%" y="629" width="0.0346%" height="15" fill="rgb(228,66,33)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="97.8906%" y="613" width="0.0346%" height="15" fill="rgb(234,215,21)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="97.8906%" y="597" width="0.0346%" height="15" fill="rgb(222,191,20)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="607.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="97.8906%" y="581" width="0.0346%" height="15" fill="rgb(245,79,54)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="591.50"></text></g><g><title>ant_colony.exe`rayon::vec::impl$4::with_producer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(rayon::vec::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="97.8906%" y="565" width="0.0346%" height="15" fill="rgb(240,10,37)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="575.50"></text></g><g><title>ant_colony.exe`rayon::vec::impl$7::with_producer(rayon::vec::Drain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="97.8906%" y="549" width="0.0346%" height="15" fill="rgb(214,192,32)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="559.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge::impl$0::callback(rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex (4 samples, 0.03%)</title><rect x="97.8906%" y="533" width="0.0346%" height="15" fill="rgb(209,36,54)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="543.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer(unsigned long long, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="97.8906%" y="517" width="0.0346%" height="15" fill="rgb(220,10,11)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="527.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::LengthSplitter::new (4 samples, 0.03%)</title><rect x="97.8906%" y="501" width="0.0346%" height="15" fill="rgb(221,106,17)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="511.50"></text></g><g><title>ant_colony.exe`rayon_core::current_num_threads (4 samples, 0.03%)</title><rect x="97.8906%" y="485" width="0.0346%" height="15" fill="rgb(251,142,44)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="495.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::Registry::current_num_threads (4 samples, 0.03%)</title><rect x="97.8906%" y="469" width="0.0346%" height="15" fill="rgb(238,13,15)" fg:x="11323" fg:w="4"/><text x="98.1406%" y="479.50"></text></g><g><title>ant_colony.exe`core::fmt::Formatter::write_str (44 samples, 0.38%)</title><rect x="97.9511%" y="661" width="0.3804%" height="15" fill="rgb(208,107,27)" fg:x="11330" fg:w="44"/><text x="98.2011%" y="671.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::fs::File&gt;(std::io::default_write_fmt::Adapter&lt;std::fs::File&gt;*, ref$ (44 samples, 0.38%)</title><rect x="97.9511%" y="645" width="0.3804%" height="15" fill="rgb(205,136,37)" fg:x="11330" fg:w="44"/><text x="98.2011%" y="655.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (44 samples, 0.38%)</title><rect x="97.9511%" y="629" width="0.3804%" height="15" fill="rgb(250,205,27)" fg:x="11330" fg:w="44"/><text x="98.2011%" y="639.50"></text></g><g><title>ant_colony.exe`std::fs::impl$9::write (44 samples, 0.38%)</title><rect x="97.9511%" y="613" width="0.3804%" height="15" fill="rgb(210,80,43)" fg:x="11330" fg:w="44"/><text x="98.2011%" y="623.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_write (44 samples, 0.38%)</title><rect x="97.9511%" y="597" width="0.3804%" height="15" fill="rgb(247,160,36)" fg:x="11330" fg:w="44"/><text x="98.2011%" y="607.50"></text></g><g><title>`0x7FFAE3841C04 (43 samples, 0.37%)</title><rect x="97.9597%" y="581" width="0.3717%" height="15" fill="rgb(234,13,49)" fg:x="11331" fg:w="43"/><text x="98.2097%" y="591.50"></text></g><g><title>ant_colony.exe`core::fmt::Formatter::write_formatted_parts (147 samples, 1.27%)</title><rect x="98.3401%" y="645" width="1.2709%" height="15" fill="rgb(234,122,0)" fg:x="11375" fg:w="147"/><text x="98.5901%" y="655.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::fs::File&gt;(std::io::default_write_fmt::Adapter&lt;std::fs::File&gt;*, ref$ (147 samples, 1.27%)</title><rect x="98.3401%" y="629" width="1.2709%" height="15" fill="rgb(207,146,38)" fg:x="11375" fg:w="147"/><text x="98.5901%" y="639.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (146 samples, 1.26%)</title><rect x="98.3488%" y="613" width="1.2622%" height="15" fill="rgb(207,177,25)" fg:x="11376" fg:w="146"/><text x="98.5988%" y="623.50"></text></g><g><title>ant_colony.exe`std::fs::impl$9::write (145 samples, 1.25%)</title><rect x="98.3574%" y="597" width="1.2536%" height="15" fill="rgb(211,178,42)" fg:x="11377" fg:w="145"/><text x="98.6074%" y="607.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_write (144 samples, 1.24%)</title><rect x="98.3660%" y="581" width="1.2449%" height="15" fill="rgb(230,69,54)" fg:x="11378" fg:w="144"/><text x="98.6160%" y="591.50"></text></g><g><title>`0x7FFAE3841C04 (141 samples, 1.22%)</title><rect x="98.3920%" y="565" width="1.2190%" height="15" fill="rgb(214,135,41)" fg:x="11381" fg:w="141"/><text x="98.6420%" y="575.50"></text></g><g><title>ant_colony.exe`core::fmt::float::float_to_decimal_common_shortest&lt;f64&gt; (149 samples, 1.29%)</title><rect x="98.3315%" y="661" width="1.2881%" height="15" fill="rgb(237,67,25)" fg:x="11374" fg:w="149"/><text x="98.5815%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$27::fmt&lt;f64,alloc::alloc::Global&gt;(alloc::vec::Vec (198 samples, 1.71%)</title><rect x="97.9251%" y="805" width="1.7118%" height="15" fill="rgb(222,189,50)" fg:x="11327" fg:w="198"/><text x="98.1751%" y="815.50"></text></g><g><title>ant_colony.exe`core::fmt::impl$28::fmt(ref$&lt;slice2$ (198 samples, 1.71%)</title><rect x="97.9251%" y="789" width="1.7118%" height="15" fill="rgb(245,148,34)" fg:x="11327" fg:w="198"/><text x="98.1751%" y="799.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugList::entries(core::slice::iter::Iter (198 samples, 1.71%)</title><rect x="97.9251%" y="773" width="1.7118%" height="15" fill="rgb(222,29,6)" fg:x="11327" fg:w="198"/><text x="98.1751%" y="783.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (198 samples, 1.71%)</title><rect x="97.9251%" y="757" width="1.7118%" height="15" fill="rgb(221,189,43)" fg:x="11327" fg:w="198"/><text x="98.1751%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;f64&gt;*, core::ptr::non_null::NonNull (197 samples, 1.70%)</title><rect x="97.9338%" y="741" width="1.7031%" height="15" fill="rgb(207,36,27)" fg:x="11328" fg:w="197"/><text x="98.1838%" y="751.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugSet::entry (196 samples, 1.69%)</title><rect x="97.9424%" y="725" width="1.6945%" height="15" fill="rgb(217,90,24)" fg:x="11329" fg:w="196"/><text x="98.1924%" y="735.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugInner::entry_with (196 samples, 1.69%)</title><rect x="97.9424%" y="709" width="1.6945%" height="15" fill="rgb(224,66,35)" fg:x="11329" fg:w="196"/><text x="98.1924%" y="719.50"></text></g><g><title>ant_colony.exe`core::result::Result::and_then (195 samples, 1.69%)</title><rect x="97.9511%" y="693" width="1.6858%" height="15" fill="rgb(221,13,50)" fg:x="11330" fg:w="195"/><text x="98.2011%" y="703.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::impl$5::entry_with::closure$0 (195 samples, 1.69%)</title><rect x="97.9511%" y="677" width="1.6858%" height="15" fill="rgb(236,68,49)" fg:x="11330" fg:w="195"/><text x="98.2011%" y="687.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$ (199 samples, 1.72%)</title><rect x="97.9251%" y="869" width="1.7204%" height="15" fill="rgb(229,146,28)" fg:x="11327" fg:w="199"/><text x="98.1751%" y="879.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_fmt&lt;std::fs::File&gt; (199 samples, 1.72%)</title><rect x="97.9251%" y="853" width="1.7204%" height="15" fill="rgb(225,31,38)" fg:x="11327" fg:w="199"/><text x="98.1751%" y="863.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt (199 samples, 1.72%)</title><rect x="97.9251%" y="837" width="1.7204%" height="15" fill="rgb(250,208,3)" fg:x="11327" fg:w="199"/><text x="98.1751%" y="847.50"></text></g><g><title>ant_colony.exe`core::fmt::write (199 samples, 1.72%)</title><rect x="97.9251%" y="821" width="1.7204%" height="15" fill="rgb(246,54,23)" fg:x="11327" fg:w="199"/><text x="98.1751%" y="831.50"></text></g><g><title>ant_colony.exe`ant_colony::test_on_graphs2(alloc::vec::Vec (11,384 samples, 98.42%)</title><rect x="1.2536%" y="901" width="98.4179%" height="15" fill="rgb(243,76,11)" fg:x="145" fg:w="11384"/><text x="1.5036%" y="911.50">ant_colony.exe`ant_colony::test_on_graphs2(alloc::vec::Vec</text></g><g><title>ant_colony.exe`ant_colony::evaluate_score2(alloc::vec::Vec&lt;ant_colony::graph::Graph,alloc::alloc::Global&gt;*, unsigned long long, unsigned long long, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par (11,384 samples, 98.42%)</title><rect x="1.2536%" y="885" width="98.4179%" height="15" fill="rgb(245,21,50)" fg:x="145" fg:w="11384"/><text x="1.5036%" y="895.50">ant_colony.exe`ant_colony::evaluate_score2(alloc::vec::Vec&lt;ant_colony::graph::Graph,alloc::alloc::Global&gt;*, unsigned long long, unsigned long long, unsigned long lo..</text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;, ref$ (2 samples, 0.02%)</title><rect x="99.6542%" y="869" width="0.0173%" height="15" fill="rgb(228,9,43)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="879.50"></text></g><g><title>ant_colony.exe`std::fs::OpenOptions::_open (2 samples, 0.02%)</title><rect x="99.6542%" y="853" width="0.0173%" height="15" fill="rgb(208,100,47)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="863.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::open (2 samples, 0.02%)</title><rect x="99.6542%" y="837" width="0.0173%" height="15" fill="rgb(232,26,8)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="847.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="99.6542%" y="821" width="0.0173%" height="15" fill="rgb(216,166,38)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="831.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="99.6542%" y="805" width="0.0173%" height="15" fill="rgb(251,202,51)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop (2 samples, 0.02%)</title><rect x="99.6542%" y="789" width="0.0173%" height="15" fill="rgb(254,216,34)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner::deallocate (2 samples, 0.02%)</title><rect x="99.6542%" y="773" width="0.0173%" height="15" fill="rgb(251,32,27)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner::current_memory (2 samples, 0.02%)</title><rect x="99.6542%" y="757" width="0.0173%" height="15" fill="rgb(208,127,28)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="767.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::open_native (2 samples, 0.02%)</title><rect x="99.6542%" y="741" width="0.0173%" height="15" fill="rgb(224,137,22)" fg:x="11527" fg:w="2"/><text x="99.9042%" y="751.50"></text></g><g><title>`0x7FFAE3709B68 (11 samples, 0.10%)</title><rect x="99.6801%" y="709" width="0.0951%" height="15" fill="rgb(254,70,32)" fg:x="11530" fg:w="11"/><text x="99.9301%" y="719.50"></text></g><g><title>`0x7FFAE36F801E (11 samples, 0.10%)</title><rect x="99.6801%" y="693" width="0.0951%" height="15" fill="rgb(229,75,37)" fg:x="11530" fg:w="11"/><text x="99.9301%" y="703.50"></text></g><g><title>`0x7FFAE37CB4C9 (11 samples, 0.10%)</title><rect x="99.6801%" y="677" width="0.0951%" height="15" fill="rgb(252,64,23)" fg:x="11530" fg:w="11"/><text x="99.9301%" y="687.50"></text></g><g><title>`0x7FFAE3841EC4 (11 samples, 0.10%)</title><rect x="99.6801%" y="661" width="0.0951%" height="15" fill="rgb(232,162,48)" fg:x="11530" fg:w="11"/><text x="99.9301%" y="671.50"></text></g><g><title>ant_colony.exe`__scrt_common_main_seh() (11,518 samples, 99.58%)</title><rect x="0.2161%" y="1077" width="99.5764%" height="15" fill="rgb(246,160,12)" fg:x="25" fg:w="11518"/><text x="0.4661%" y="1087.50">ant_colony.exe`__scrt_common_main_seh()</text></g><g><title>ant_colony.exe`invoke_main() (11,509 samples, 99.50%)</title><rect x="0.2939%" y="1061" width="99.4986%" height="15" fill="rgb(247,166,0)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="1071.50">ant_colony.exe`invoke_main()</text></g><g><title>ant_colony.exe`main (11,509 samples, 99.50%)</title><rect x="0.2939%" y="1045" width="99.4986%" height="15" fill="rgb(249,219,21)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="1055.50">ant_colony.exe`main</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal (11,509 samples, 99.50%)</title><rect x="0.2939%" y="1029" width="99.4986%" height="15" fill="rgb(205,209,3)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="1039.50">ant_colony.exe`std::rt::lang_start_internal</text></g><g><title>ant_colony.exe`std::panic::catch_unwind (11,509 samples, 99.50%)</title><rect x="0.2939%" y="1013" width="99.4986%" height="15" fill="rgb(243,44,1)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="1023.50">ant_colony.exe`std::panic::catch_unwind</text></g><g><title>ant_colony.exe`std::panicking::try (11,509 samples, 99.50%)</title><rect x="0.2939%" y="997" width="99.4986%" height="15" fill="rgb(206,159,16)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="1007.50">ant_colony.exe`std::panicking::try</text></g><g><title>ant_colony.exe`std::panicking::try::do_call (11,509 samples, 99.50%)</title><rect x="0.2939%" y="981" width="99.4986%" height="15" fill="rgb(244,77,30)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="991.50">ant_colony.exe`std::panicking::try::do_call</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal::closure$0 (11,509 samples, 99.50%)</title><rect x="0.2939%" y="965" width="99.4986%" height="15" fill="rgb(218,69,12)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="975.50">ant_colony.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (11,509 samples, 99.50%)</title><rect x="0.2939%" y="949" width="99.4986%" height="15" fill="rgb(212,87,7)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="959.50">ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (11,509 samples, 99.50%)</title><rect x="0.2939%" y="933" width="99.4986%" height="15" fill="rgb(245,114,25)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="943.50">ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>ant_colony.exe`ant_colony::main (11,509 samples, 99.50%)</title><rect x="0.2939%" y="917" width="99.4986%" height="15" fill="rgb(210,61,42)" fg:x="34" fg:w="11509"/><text x="0.5439%" y="927.50">ant_colony.exe`ant_colony::main</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (13 samples, 0.11%)</title><rect x="99.6801%" y="901" width="0.1124%" height="15" fill="rgb(211,52,33)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="911.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (13 samples, 0.11%)</title><rect x="99.6801%" y="885" width="0.1124%" height="15" fill="rgb(234,58,33)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="895.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (13 samples, 0.11%)</title><rect x="99.6801%" y="869" width="0.1124%" height="15" fill="rgb(220,115,36)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="879.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (13 samples, 0.11%)</title><rect x="99.6801%" y="853" width="0.1124%" height="15" fill="rgb(243,153,54)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="863.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (13 samples, 0.11%)</title><rect x="99.6801%" y="837" width="0.1124%" height="15" fill="rgb(251,47,18)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="847.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (13 samples, 0.11%)</title><rect x="99.6801%" y="821" width="0.1124%" height="15" fill="rgb(242,102,42)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="831.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (13 samples, 0.11%)</title><rect x="99.6801%" y="805" width="0.1124%" height="15" fill="rgb(234,31,38)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="815.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (13 samples, 0.11%)</title><rect x="99.6801%" y="789" width="0.1124%" height="15" fill="rgb(221,117,51)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="799.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (13 samples, 0.11%)</title><rect x="99.6801%" y="773" width="0.1124%" height="15" fill="rgb(212,20,18)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (13 samples, 0.11%)</title><rect x="99.6801%" y="757" width="0.1124%" height="15" fill="rgb(245,133,36)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="767.50"></text></g><g><title>`0x7FFAE37759E0 (13 samples, 0.11%)</title><rect x="99.6801%" y="741" width="0.1124%" height="15" fill="rgb(212,6,19)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="751.50"></text></g><g><title>`0x7FFAE36F49D6 (13 samples, 0.11%)</title><rect x="99.6801%" y="725" width="0.1124%" height="15" fill="rgb(218,1,36)" fg:x="11530" fg:w="13"/><text x="99.9301%" y="735.50"></text></g><g><title>`0x7FFAE3709F76 (2 samples, 0.02%)</title><rect x="99.7752%" y="709" width="0.0173%" height="15" fill="rgb(246,84,54)" fg:x="11541" fg:w="2"/><text x="100.0252%" y="719.50"></text></g><g><title>`0x7FFAE376802F (2 samples, 0.02%)</title><rect x="99.7752%" y="693" width="0.0173%" height="15" fill="rgb(242,110,6)" fg:x="11541" fg:w="2"/><text x="100.0252%" y="703.50"></text></g><g><title>`0x7FFAE3841EC4 (2 samples, 0.02%)</title><rect x="99.7752%" y="677" width="0.0173%" height="15" fill="rgb(214,47,5)" fg:x="11541" fg:w="2"/><text x="100.0252%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (2 samples, 0.02%)</title><rect x="99.7925%" y="773" width="0.0173%" height="15" fill="rgb(218,159,25)" fg:x="11543" fg:w="2"/><text x="100.0425%" y="783.50"></text></g><g><title>ant_colony.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (2 samples, 0.02%)</title><rect x="99.7925%" y="757" width="0.0173%" height="15" fill="rgb(215,211,28)" fg:x="11543" fg:w="2"/><text x="100.0425%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (2 samples, 0.02%)</title><rect x="99.7925%" y="741" width="0.0173%" height="15" fill="rgb(238,59,32)" fg:x="11543" fg:w="2"/><text x="100.0425%" y="751.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::find_work (2 samples, 0.02%)</title><rect x="99.7925%" y="725" width="0.0173%" height="15" fill="rgb(226,82,3)" fg:x="11543" fg:w="2"/><text x="100.0425%" y="735.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="741" width="0.0346%" height="15" fill="rgb(240,164,32)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="725" width="0.0346%" height="15" fill="rgb(232,46,7)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="735.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="709" width="0.0346%" height="15" fill="rgb(229,129,53)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="719.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="693" width="0.0346%" height="15" fill="rgb(234,188,29)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="703.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="677" width="0.0346%" height="15" fill="rgb(246,141,4)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="687.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="661" width="0.0346%" height="15" fill="rgb(229,23,39)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="671.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="99.8098%" y="645" width="0.0346%" height="15" fill="rgb(206,12,3)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="655.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="629" width="0.0346%" height="15" fill="rgb(252,226,20)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="639.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="613" width="0.0346%" height="15" fill="rgb(216,123,35)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="623.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="597" width="0.0346%" height="15" fill="rgb(212,68,40)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="607.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="581" width="0.0346%" height="15" fill="rgb(254,125,32)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="591.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="565" width="0.0346%" height="15" fill="rgb(253,97,22)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="575.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="549" width="0.0346%" height="15" fill="rgb(241,101,14)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="559.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="533" width="0.0346%" height="15" fill="rgb(238,103,29)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="543.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="517" width="0.0346%" height="15" fill="rgb(233,195,47)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="527.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="501" width="0.0346%" height="15" fill="rgb(246,218,30)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="511.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="99.8098%" y="485" width="0.0346%" height="15" fill="rgb(219,145,47)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="495.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="469" width="0.0346%" height="15" fill="rgb(243,12,26)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="479.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="453" width="0.0346%" height="15" fill="rgb(214,87,16)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="463.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="437" width="0.0346%" height="15" fill="rgb(208,99,42)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="447.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.8098%" y="421" width="0.0346%" height="15" fill="rgb(253,99,2)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="431.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="405" width="0.0346%" height="15" fill="rgb(220,168,23)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="415.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.8098%" y="389" width="0.0346%" height="15" fill="rgb(242,38,24)" fg:x="11545" fg:w="4"/><text x="100.0598%" y="399.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="373" width="0.0259%" height="15" fill="rgb(225,182,9)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="383.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="357" width="0.0259%" height="15" fill="rgb(243,178,37)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="367.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="341" width="0.0259%" height="15" fill="rgb(232,139,19)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="351.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (3 samples, 0.03%)</title><rect x="99.8184%" y="325" width="0.0259%" height="15" fill="rgb(225,201,24)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="335.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="309" width="0.0259%" height="15" fill="rgb(221,47,46)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="319.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="293" width="0.0259%" height="15" fill="rgb(249,23,13)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="303.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="277" width="0.0259%" height="15" fill="rgb(219,9,5)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="287.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8184%" y="261" width="0.0259%" height="15" fill="rgb(254,171,16)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="271.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.03%)</title><rect x="99.8184%" y="245" width="0.0259%" height="15" fill="rgb(230,171,20)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="255.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.03%)</title><rect x="99.8184%" y="229" width="0.0259%" height="15" fill="rgb(210,71,41)" fg:x="11546" fg:w="3"/><text x="100.0684%" y="239.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="213" width="0.0173%" height="15" fill="rgb(206,173,20)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="223.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="197" width="0.0173%" height="15" fill="rgb(233,88,34)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="207.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="181" width="0.0173%" height="15" fill="rgb(223,209,46)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="191.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="99.8271%" y="165" width="0.0173%" height="15" fill="rgb(250,43,18)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="175.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="149" width="0.0173%" height="15" fill="rgb(208,13,10)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="159.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="133" width="0.0173%" height="15" fill="rgb(212,200,36)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="143.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="117" width="0.0173%" height="15" fill="rgb(225,90,30)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="127.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8271%" y="101" width="0.0173%" height="15" fill="rgb(236,182,39)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="111.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8271%" y="85" width="0.0173%" height="15" fill="rgb(212,144,35)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="95.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8271%" y="69" width="0.0173%" height="15" fill="rgb(228,63,44)" fg:x="11547" fg:w="2"/><text x="100.0771%" y="79.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8790%" y="405" width="0.0173%" height="15" fill="rgb(228,109,6)" fg:x="11553" fg:w="2"/><text x="100.1290%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8790%" y="389" width="0.0173%" height="15" fill="rgb(238,117,24)" fg:x="11553" fg:w="2"/><text x="100.1290%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8790%" y="373" width="0.0173%" height="15" fill="rgb(242,26,26)" fg:x="11553" fg:w="2"/><text x="100.1290%" y="383.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8790%" y="357" width="0.0173%" height="15" fill="rgb(221,92,48)" fg:x="11553" fg:w="2"/><text x="100.1290%" y="367.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8790%" y="341" width="0.0173%" height="15" fill="rgb(209,209,32)" fg:x="11553" fg:w="2"/><text x="100.1290%" y="351.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8790%" y="325" width="0.0173%" height="15" fill="rgb(221,70,22)" fg:x="11553" fg:w="2"/><text x="100.1290%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (3 samples, 0.03%)</title><rect x="99.8790%" y="501" width="0.0259%" height="15" fill="rgb(248,145,5)" fg:x="11553" fg:w="3"/><text x="100.1290%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (3 samples, 0.03%)</title><rect x="99.8790%" y="485" width="0.0259%" height="15" fill="rgb(226,116,26)" fg:x="11553" fg:w="3"/><text x="100.1290%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (3 samples, 0.03%)</title><rect x="99.8790%" y="469" width="0.0259%" height="15" fill="rgb(244,5,17)" fg:x="11553" fg:w="3"/><text x="100.1290%" y="479.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.8790%" y="453" width="0.0259%" height="15" fill="rgb(252,159,33)" fg:x="11553" fg:w="3"/><text x="100.1290%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.03%)</title><rect x="99.8790%" y="437" width="0.0259%" height="15" fill="rgb(206,71,0)" fg:x="11553" fg:w="3"/><text x="100.1290%" y="447.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.03%)</title><rect x="99.8790%" y="421" width="0.0259%" height="15" fill="rgb(233,118,54)" fg:x="11553" fg:w="3"/><text x="100.1290%" y="431.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="373" width="0.0173%" height="15" fill="rgb(234,83,48)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="383.50"></text></g><g><title>ant_colony.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9049%" y="357" width="0.0173%" height="15" fill="rgb(228,3,54)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="367.50"></text></g><g><title>ant_colony.exe`rayon::iter::for_each::impl$1::consume_iter(rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="341" width="0.0173%" height="15" fill="rgb(226,155,13)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="351.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="325" width="0.0173%" height="15" fill="rgb(241,28,37)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="335.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::impl$2::fold&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="309" width="0.0173%" height="15" fill="rgb(233,93,10)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="319.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="293" width="0.0173%" height="15" fill="rgb(225,113,19)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="303.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9049%" y="277" width="0.0173%" height="15" fill="rgb(241,2,18)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="287.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="261" width="0.0173%" height="15" fill="rgb(228,207,21)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="271.50"></text></g><g><title>ant_colony.exe`core::ops::function::impls::impl$1::call_mut(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;**, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="245" width="0.0173%" height="15" fill="rgb(213,211,35)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="255.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality::closure$1(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;*, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9049%" y="229" width="0.0173%" height="15" fill="rgb(209,83,10)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="239.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::shortest_path_for_edge_centrality&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;**, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9049%" y="213" width="0.0173%" height="15" fill="rgb(209,164,1)" fg:x="11556" fg:w="2"/><text x="100.1549%" y="223.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::Producer::fold_with(rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="181" width="0.0173%" height="15" fill="rgb(213,184,43)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="191.50"></text></g><g><title>ant_colony.exe`rayon::iter::map::impl$8::consume_iter(rayon::iter::map::MapFolder&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9222%" y="165" width="0.0173%" height="15" fill="rgb(231,61,34)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="175.50"></text></g><g><title>ant_colony.exe`rayon::iter::for_each::impl$1::consume_iter(rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="149" width="0.0173%" height="15" fill="rgb(235,75,3)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="159.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="133" width="0.0173%" height="15" fill="rgb(220,106,47)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="143.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::impl$2::fold&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="117" width="0.0173%" height="15" fill="rgb(210,196,33)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="127.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::fold(rayon::vec::SliceDrain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="101" width="0.0173%" height="15" fill="rgb(229,154,42)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="111.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="99.9222%" y="85" width="0.0173%" height="15" fill="rgb(228,114,26)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="95.50"></text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,ref$&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="69" width="0.0173%" height="15" fill="rgb(208,144,1)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="79.50"></text></g><g><title>ant_colony.exe`core::ops::function::impls::impl$1::call_mut(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;**, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="53" width="0.0173%" height="15" fill="rgb(239,112,37)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="63.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality::closure$1(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;*, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9222%" y="37" width="0.0173%" height="15" fill="rgb(210,96,50)" fg:x="11558" fg:w="2"/><text x="100.1722%" y="47.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (3 samples, 0.03%)</title><rect x="99.9222%" y="245" width="0.0259%" height="15" fill="rgb(222,178,2)" fg:x="11558" fg:w="3"/><text x="100.1722%" y="255.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (3 samples, 0.03%)</title><rect x="99.9222%" y="229" width="0.0259%" height="15" fill="rgb(226,74,18)" fg:x="11558" fg:w="3"/><text x="100.1722%" y="239.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (3 samples, 0.03%)</title><rect x="99.9222%" y="213" width="0.0259%" height="15" fill="rgb(225,67,54)" fg:x="11558" fg:w="3"/><text x="100.1722%" y="223.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.03%)</title><rect x="99.9222%" y="197" width="0.0259%" height="15" fill="rgb(251,92,32)" fg:x="11558" fg:w="3"/><text x="100.1722%" y="207.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.9222%" y="341" width="0.0346%" height="15" fill="rgb(228,149,22)" fg:x="11558" fg:w="4"/><text x="100.1722%" y="351.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (4 samples, 0.03%)</title><rect x="99.9222%" y="325" width="0.0346%" height="15" fill="rgb(243,54,13)" fg:x="11558" fg:w="4"/><text x="100.1722%" y="335.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (4 samples, 0.03%)</title><rect x="99.9222%" y="309" width="0.0346%" height="15" fill="rgb(243,180,28)" fg:x="11558" fg:w="4"/><text x="100.1722%" y="319.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9222%" y="293" width="0.0346%" height="15" fill="rgb(208,167,24)" fg:x="11558" fg:w="4"/><text x="100.1722%" y="303.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.9222%" y="277" width="0.0346%" height="15" fill="rgb(245,73,45)" fg:x="11558" fg:w="4"/><text x="100.1722%" y="287.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.9222%" y="261" width="0.0346%" height="15" fill="rgb(237,203,48)" fg:x="11558" fg:w="4"/><text x="100.1722%" y="271.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::execute (19 samples, 0.16%)</title><rect x="99.8098%" y="773" width="0.1643%" height="15" fill="rgb(211,197,16)" fg:x="11545" fg:w="19"/><text x="100.0598%" y="783.50"></text></g><g><title>ant_colony.exe`rayon_core::job::JobRef::execute (19 samples, 0.16%)</title><rect x="99.8098%" y="757" width="0.1643%" height="15" fill="rgb(243,99,51)" fg:x="11545" fg:w="19"/><text x="100.0598%" y="767.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (15 samples, 0.13%)</title><rect x="99.8444%" y="741" width="0.1297%" height="15" fill="rgb(215,123,29)" fg:x="11549" fg:w="15"/><text x="100.0944%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (15 samples, 0.13%)</title><rect x="99.8444%" y="725" width="0.1297%" height="15" fill="rgb(239,186,37)" fg:x="11549" fg:w="15"/><text x="100.0944%" y="735.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (15 samples, 0.13%)</title><rect x="99.8444%" y="709" width="0.1297%" height="15" fill="rgb(252,136,39)" fg:x="11549" fg:w="15"/><text x="100.0944%" y="719.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (14 samples, 0.12%)</title><rect x="99.8530%" y="693" width="0.1210%" height="15" fill="rgb(223,213,32)" fg:x="11550" fg:w="14"/><text x="100.1030%" y="703.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (14 samples, 0.12%)</title><rect x="99.8530%" y="677" width="0.1210%" height="15" fill="rgb(233,115,5)" fg:x="11550" fg:w="14"/><text x="100.1030%" y="687.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="661" width="0.1037%" height="15" fill="rgb(207,226,44)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="671.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="645" width="0.1037%" height="15" fill="rgb(208,126,0)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="655.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="629" width="0.1037%" height="15" fill="rgb(244,66,21)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="639.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (12 samples, 0.10%)</title><rect x="99.8703%" y="613" width="0.1037%" height="15" fill="rgb(222,97,12)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="623.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="597" width="0.1037%" height="15" fill="rgb(219,213,19)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="607.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="581" width="0.1037%" height="15" fill="rgb(252,169,30)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="591.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="565" width="0.1037%" height="15" fill="rgb(206,32,51)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="575.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (12 samples, 0.10%)</title><rect x="99.8703%" y="549" width="0.1037%" height="15" fill="rgb(250,172,42)" fg:x="11552" fg:w="12"/><text x="100.1203%" y="559.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (11 samples, 0.10%)</title><rect x="99.8790%" y="533" width="0.0951%" height="15" fill="rgb(209,34,43)" fg:x="11553" fg:w="11"/><text x="100.1290%" y="543.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (11 samples, 0.10%)</title><rect x="99.8790%" y="517" width="0.0951%" height="15" fill="rgb(223,11,35)" fg:x="11553" fg:w="11"/><text x="100.1290%" y="527.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="501" width="0.0692%" height="15" fill="rgb(251,219,26)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="511.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="485" width="0.0692%" height="15" fill="rgb(231,119,3)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="495.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="469" width="0.0692%" height="15" fill="rgb(216,97,11)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="479.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (8 samples, 0.07%)</title><rect x="99.9049%" y="453" width="0.0692%" height="15" fill="rgb(223,59,9)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="463.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="437" width="0.0692%" height="15" fill="rgb(233,93,31)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="447.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="421" width="0.0692%" height="15" fill="rgb(239,81,33)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="431.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="405" width="0.0692%" height="15" fill="rgb(213,120,34)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="415.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.07%)</title><rect x="99.9049%" y="389" width="0.0692%" height="15" fill="rgb(243,49,53)" fg:x="11556" fg:w="8"/><text x="100.1549%" y="399.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (6 samples, 0.05%)</title><rect x="99.9222%" y="373" width="0.0519%" height="15" fill="rgb(247,216,33)" fg:x="11558" fg:w="6"/><text x="100.1722%" y="383.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (6 samples, 0.05%)</title><rect x="99.9222%" y="357" width="0.0519%" height="15" fill="rgb(226,26,14)" fg:x="11558" fg:w="6"/><text x="100.1722%" y="367.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="341" width="0.0173%" height="15" fill="rgb(215,49,53)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="351.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="325" width="0.0173%" height="15" fill="rgb(245,162,40)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="335.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="309" width="0.0173%" height="15" fill="rgb(229,68,17)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="319.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="99.9568%" y="293" width="0.0173%" height="15" fill="rgb(213,182,10)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="303.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="277" width="0.0173%" height="15" fill="rgb(245,125,30)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="287.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="261" width="0.0173%" height="15" fill="rgb(232,202,2)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="271.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="245" width="0.0173%" height="15" fill="rgb(237,140,51)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="255.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9568%" y="229" width="0.0173%" height="15" fill="rgb(236,157,25)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="239.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9568%" y="213" width="0.0173%" height="15" fill="rgb(219,209,0)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="223.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9568%" y="197" width="0.0173%" height="15" fill="rgb(240,116,54)" fg:x="11562" fg:w="2"/><text x="100.2068%" y="207.50"></text></g><g><title>all (11,567 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(216,10,36)" fg:x="0" fg:w="11567"/><text x="0.2500%" y="1135.50"></text></g><g><title>`0x7FFAE371C34C (11,547 samples, 99.83%)</title><rect x="0.1729%" y="1109" width="99.8271%" height="15" fill="rgb(222,72,44)" fg:x="20" fg:w="11547"/><text x="0.4229%" y="1119.50">`0x7FFAE371C34C</text></g><g><title>`0x7FFAE2FAE8D7 (11,547 samples, 99.83%)</title><rect x="0.1729%" y="1093" width="99.8271%" height="15" fill="rgb(232,159,9)" fg:x="20" fg:w="11547"/><text x="0.4229%" y="1103.50">`0x7FFAE2FAE8D7</text></g><g><title>ant_colony.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (24 samples, 0.21%)</title><rect x="99.7925%" y="1077" width="0.2075%" height="15" fill="rgb(210,39,32)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="1087.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$28::call_once (24 samples, 0.21%)</title><rect x="99.7925%" y="1061" width="0.2075%" height="15" fill="rgb(216,194,45)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="1071.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$28::call_once (24 samples, 0.21%)</title><rect x="99.7925%" y="1045" width="0.2075%" height="15" fill="rgb(218,18,35)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="1055.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$8::drop (24 samples, 0.21%)</title><rect x="99.7925%" y="1029" width="0.2075%" height="15" fill="rgb(207,83,51)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="1039.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::for_value_raw (24 samples, 0.21%)</title><rect x="99.7925%" y="1013" width="0.2075%" height="15" fill="rgb(225,63,43)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="1023.50"></text></g><g><title>ant_colony.exe`core::mem::size_of_val_raw (24 samples, 0.21%)</title><rect x="99.7925%" y="997" width="0.2075%" height="15" fill="rgb(207,57,36)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="1007.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (24 samples, 0.21%)</title><rect x="99.7925%" y="981" width="0.2075%" height="15" fill="rgb(216,99,33)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="991.50"></text></g><g><title>ant_colony.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (24 samples, 0.21%)</title><rect x="99.7925%" y="965" width="0.2075%" height="15" fill="rgb(225,42,16)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="975.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (24 samples, 0.21%)</title><rect x="99.7925%" y="949" width="0.2075%" height="15" fill="rgb(220,201,45)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="959.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (24 samples, 0.21%)</title><rect x="99.7925%" y="933" width="0.2075%" height="15" fill="rgb(225,33,4)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="943.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (24 samples, 0.21%)</title><rect x="99.7925%" y="917" width="0.2075%" height="15" fill="rgb(224,33,50)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="927.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (24 samples, 0.21%)</title><rect x="99.7925%" y="901" width="0.2075%" height="15" fill="rgb(246,198,51)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="911.50"></text></g><g><title>ant_colony.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (24 samples, 0.21%)</title><rect x="99.7925%" y="885" width="0.2075%" height="15" fill="rgb(205,22,4)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="895.50"></text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (24 samples, 0.21%)</title><rect x="99.7925%" y="869" width="0.2075%" height="15" fill="rgb(206,3,8)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="879.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::ThreadBuilder::run (24 samples, 0.21%)</title><rect x="99.7925%" y="853" width="0.2075%" height="15" fill="rgb(251,23,15)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="863.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::main_loop (24 samples, 0.21%)</title><rect x="99.7925%" y="837" width="0.2075%" height="15" fill="rgb(252,88,28)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="847.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (24 samples, 0.21%)</title><rect x="99.7925%" y="821" width="0.2075%" height="15" fill="rgb(212,127,14)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="831.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until (24 samples, 0.21%)</title><rect x="99.7925%" y="805" width="0.2075%" height="15" fill="rgb(247,145,37)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="815.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 0.21%)</title><rect x="99.7925%" y="789" width="0.2075%" height="15" fill="rgb(209,117,53)" fg:x="11543" fg:w="24"/><text x="100.0425%" y="799.50"></text></g><g><title>ant_colony.exe`rayon_core::sleep::Sleep::no_work_found (2 samples, 0.02%)</title><rect x="99.9827%" y="773" width="0.0173%" height="15" fill="rgb(212,90,42)" fg:x="11565" fg:w="2"/><text x="100.2327%" y="783.50"></text></g><g><title>`0x7FFAE0A19AFB (2 samples, 0.02%)</title><rect x="99.9827%" y="757" width="0.0173%" height="15" fill="rgb(218,164,37)" fg:x="11565" fg:w="2"/><text x="100.2327%" y="767.50"></text></g><g><title>`0x7FFAE37BDB84 (2 samples, 0.02%)</title><rect x="99.9827%" y="741" width="0.0173%" height="15" fill="rgb(246,65,34)" fg:x="11565" fg:w="2"/><text x="100.2327%" y="751.50"></text></g><g><title>`0x7FFAE3842184 (2 samples, 0.02%)</title><rect x="99.9827%" y="725" width="0.0173%" height="15" fill="rgb(231,100,33)" fg:x="11565" fg:w="2"/><text x="100.2327%" y="735.50"></text></g></svg></svg>