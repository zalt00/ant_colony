<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="1101687"><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (1,511 samples, 0.14%)</title><rect x="0.0176%" y="405" width="0.1372%" height="15" fill="rgb(227,0,7)" fg:x="194" fg:w="1511"/><text x="0.2676%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1,511 samples, 0.14%)</title><rect x="0.0176%" y="389" width="0.1372%" height="15" fill="rgb(217,0,24)" fg:x="194" fg:w="1511"/><text x="0.2676%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (1,507 samples, 0.14%)</title><rect x="0.0180%" y="373" width="0.1368%" height="15" fill="rgb(221,193,54)" fg:x="198" fg:w="1507"/><text x="0.2680%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::_smallest_above_from (1,958 samples, 0.18%)</title><rect x="0.1643%" y="373" width="0.1777%" height="15" fill="rgb(248,212,6)" fg:x="1810" fg:w="1958"/><text x="0.4143%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::children_count (878 samples, 0.08%)</title><rect x="0.2623%" y="357" width="0.0797%" height="15" fill="rgb(208,68,35)" fg:x="2890" fg:w="878"/><text x="0.5123%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::smallest_above (2,043 samples, 0.19%)</title><rect x="0.1599%" y="389" width="0.1854%" height="15" fill="rgb(232,128,0)" fg:x="1762" fg:w="2043"/><text x="0.4099%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::get_edge (2,164 samples, 0.20%)</title><rect x="0.1591%" y="405" width="0.1964%" height="15" fill="rgb(207,160,47)" fg:x="1753" fg:w="2164"/><text x="0.4091%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::my_rand::my_rand (112 samples, 0.01%)</title><rect x="0.3454%" y="389" width="0.0102%" height="15" fill="rgb(228,23,34)" fg:x="3805" fg:w="112"/><text x="0.5954%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (31,418 samples, 2.85%)</title><rect x="0.4164%" y="389" width="2.8518%" height="15" fill="rgb(218,30,26)" fg:x="4587" fg:w="31418"/><text x="0.6664%" y="399.50">an..</text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (31,418 samples, 2.85%)</title><rect x="0.4164%" y="373" width="2.8518%" height="15" fill="rgb(220,122,19)" fg:x="4587" fg:w="31418"/><text x="0.6664%" y="383.50">an..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (31,261 samples, 2.84%)</title><rect x="0.4306%" y="357" width="2.8376%" height="15" fill="rgb(250,228,42)" fg:x="4744" fg:w="31261"/><text x="0.6806%" y="367.50">an..</text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::update (5,167 samples, 0.47%)</title><rect x="3.2729%" y="389" width="0.4690%" height="15" fill="rgb(240,193,28)" fg:x="36057" fg:w="5167"/><text x="3.5229%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::parent (464 samples, 0.04%)</title><rect x="3.6998%" y="373" width="0.0421%" height="15" fill="rgb(216,20,37)" fg:x="40760" fg:w="464"/><text x="3.9498%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::reset_state (37,534 samples, 3.41%)</title><rect x="0.3555%" y="405" width="3.4070%" height="15" fill="rgb(206,188,39)" fg:x="3917" fg:w="37534"/><text x="0.6055%" y="415.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (189 samples, 0.02%)</title><rect x="4.0086%" y="357" width="0.0172%" height="15" fill="rgb(217,207,13)" fg:x="44162" fg:w="189"/><text x="4.2586%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (167 samples, 0.02%)</title><rect x="4.0257%" y="357" width="0.0152%" height="15" fill="rgb(231,73,38)" fg:x="44351" fg:w="167"/><text x="4.2757%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (16,847 samples, 1.53%)</title><rect x="3.9993%" y="389" width="1.5292%" height="15" fill="rgb(225,20,46)" fg:x="44060" fg:w="16847"/><text x="4.2493%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (16,847 samples, 1.53%)</title><rect x="3.9993%" y="373" width="1.5292%" height="15" fill="rgb(210,31,41)" fg:x="44060" fg:w="16847"/><text x="4.2493%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (16,389 samples, 1.49%)</title><rect x="4.0409%" y="357" width="1.4876%" height="15" fill="rgb(221,200,47)" fg:x="44518" fg:w="16389"/><text x="4.2909%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_mut_slice (204 samples, 0.02%)</title><rect x="5.5285%" y="357" width="0.0185%" height="15" fill="rgb(226,26,5)" fg:x="60907" fg:w="204"/><text x="5.7785%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_mut_ptr (114 samples, 0.01%)</title><rect x="5.5367%" y="341" width="0.0103%" height="15" fill="rgb(249,33,26)" fg:x="60997" fg:w="114"/><text x="5.7867%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (114 samples, 0.01%)</title><rect x="5.5367%" y="325" width="0.0103%" height="15" fill="rgb(235,183,28)" fg:x="60997" fg:w="114"/><text x="5.7867%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (114 samples, 0.01%)</title><rect x="5.5367%" y="309" width="0.0103%" height="15" fill="rgb(221,5,38)" fg:x="60997" fg:w="114"/><text x="5.7867%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (114 samples, 0.01%)</title><rect x="5.5367%" y="293" width="0.0103%" height="15" fill="rgb(247,18,42)" fg:x="60997" fg:w="114"/><text x="5.7867%" y="303.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (312 samples, 0.03%)</title><rect x="5.5285%" y="389" width="0.0283%" height="15" fill="rgb(241,131,45)" fg:x="60907" fg:w="312"/><text x="5.7785%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (312 samples, 0.03%)</title><rect x="5.5285%" y="373" width="0.0283%" height="15" fill="rgb(249,31,29)" fg:x="60907" fg:w="312"/><text x="5.7785%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (450 samples, 0.04%)</title><rect x="8.7387%" y="373" width="0.0408%" height="15" fill="rgb(225,111,53)" fg:x="96273" fg:w="450"/><text x="8.9887%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (450 samples, 0.04%)</title><rect x="8.7387%" y="357" width="0.0408%" height="15" fill="rgb(238,160,17)" fg:x="96273" fg:w="450"/><text x="8.9887%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (450 samples, 0.04%)</title><rect x="8.7387%" y="341" width="0.0408%" height="15" fill="rgb(214,148,48)" fg:x="96273" fg:w="450"/><text x="8.9887%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::intern_node_count (495 samples, 0.04%)</title><rect x="8.7795%" y="373" width="0.0449%" height="15" fill="rgb(232,36,49)" fg:x="96723" fg:w="495"/><text x="9.0295%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::update (37,282 samples, 3.38%)</title><rect x="5.5568%" y="389" width="3.3841%" height="15" fill="rgb(209,103,24)" fg:x="61219" fg:w="37282"/><text x="5.8068%" y="399.50">ant..</text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::parent (1,283 samples, 0.12%)</title><rect x="8.8245%" y="373" width="0.1165%" height="15" fill="rgb(229,88,8)" fg:x="97218" fg:w="1283"/><text x="9.0745%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (5,405 samples, 0.49%)</title><rect x="8.9409%" y="389" width="0.4906%" height="15" fill="rgb(213,181,19)" fg:x="98501" fg:w="5405"/><text x="9.1909%" y="399.50"></text></g><g><title>ant_colony.exe`core::cmp::Ord::min (189 samples, 0.02%)</title><rect x="9.4391%" y="389" width="0.0172%" height="15" fill="rgb(254,191,54)" fg:x="103989" fg:w="189"/><text x="9.6891%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::update_adjset (62,818 samples, 5.70%)</title><rect x="3.7625%" y="405" width="5.7020%" height="15" fill="rgb(241,83,37)" fg:x="41451" fg:w="62818"/><text x="4.0125%" y="415.50">ant_col..</text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::update_tau (944 samples, 0.09%)</title><rect x="9.4645%" y="405" width="0.0857%" height="15" fill="rgb(233,36,39)" fg:x="104269" fg:w="944"/><text x="9.7145%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::push (111 samples, 0.01%)</title><rect x="9.5520%" y="389" width="0.0101%" height="15" fill="rgb(226,3,54)" fg:x="105233" fg:w="111"/><text x="9.8020%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::add_child (147 samples, 0.01%)</title><rect x="9.5502%" y="405" width="0.0133%" height="15" fill="rgb(245,192,40)" fg:x="105213" fg:w="147"/><text x="9.8002%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (401 samples, 0.04%)</title><rect x="10.2384%" y="389" width="0.0364%" height="15" fill="rgb(238,167,29)" fg:x="112795" fg:w="401"/><text x="10.4884%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (401 samples, 0.04%)</title><rect x="10.2384%" y="373" width="0.0364%" height="15" fill="rgb(232,182,51)" fg:x="112795" fg:w="401"/><text x="10.4884%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (401 samples, 0.04%)</title><rect x="10.2384%" y="357" width="0.0364%" height="15" fill="rgb(231,60,39)" fg:x="112795" fg:w="401"/><text x="10.4884%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (212 samples, 0.02%)</title><rect x="10.8547%" y="85" width="0.0192%" height="15" fill="rgb(208,69,12)" fg:x="119585" fg:w="212"/><text x="11.1047%" y="95.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (385 samples, 0.03%)</title><rect x="10.8477%" y="101" width="0.0349%" height="15" fill="rgb(235,93,37)" fg:x="119508" fg:w="385"/><text x="11.0977%" y="111.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (685 samples, 0.06%)</title><rect x="10.8340%" y="117" width="0.0622%" height="15" fill="rgb(213,116,39)" fg:x="119357" fg:w="685"/><text x="11.0840%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (129 samples, 0.01%)</title><rect x="10.9068%" y="101" width="0.0117%" height="15" fill="rgb(222,207,29)" fg:x="120159" fg:w="129"/><text x="11.1568%" y="111.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,152 samples, 0.10%)</title><rect x="10.8141%" y="133" width="0.1046%" height="15" fill="rgb(206,96,30)" fg:x="119137" fg:w="1152"/><text x="11.0641%" y="143.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (130 samples, 0.01%)</title><rect x="10.9068%" y="117" width="0.0118%" height="15" fill="rgb(218,138,4)" fg:x="120159" fg:w="130"/><text x="11.1568%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (121 samples, 0.01%)</title><rect x="10.9207%" y="133" width="0.0110%" height="15" fill="rgb(250,191,14)" fg:x="120312" fg:w="121"/><text x="11.1707%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,969 samples, 0.18%)</title><rect x="10.7832%" y="149" width="0.1787%" height="15" fill="rgb(239,60,40)" fg:x="118797" fg:w="1969"/><text x="11.0332%" y="159.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (252 samples, 0.02%)</title><rect x="10.9390%" y="133" width="0.0229%" height="15" fill="rgb(206,27,48)" fg:x="120514" fg:w="252"/><text x="11.1890%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (251 samples, 0.02%)</title><rect x="10.9391%" y="117" width="0.0228%" height="15" fill="rgb(225,35,8)" fg:x="120515" fg:w="251"/><text x="11.1891%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (187 samples, 0.02%)</title><rect x="10.9655%" y="149" width="0.0170%" height="15" fill="rgb(250,213,24)" fg:x="120806" fg:w="187"/><text x="11.2155%" y="159.50"></text></g><g><title>ant_colony.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (130 samples, 0.01%)</title><rect x="11.0213%" y="117" width="0.0118%" height="15" fill="rgb(247,123,22)" fg:x="121420" fg:w="130"/><text x="11.2713%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (123 samples, 0.01%)</title><rect x="11.0219%" y="101" width="0.0112%" height="15" fill="rgb(231,138,38)" fg:x="121427" fg:w="123"/><text x="11.2719%" y="111.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (427 samples, 0.04%)</title><rect x="10.9946%" y="133" width="0.0388%" height="15" fill="rgb(231,145,46)" fg:x="121126" fg:w="427"/><text x="11.2446%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (3,304 samples, 0.30%)</title><rect x="10.7336%" y="165" width="0.2999%" height="15" fill="rgb(251,118,11)" fg:x="118251" fg:w="3304"/><text x="10.9836%" y="175.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (429 samples, 0.04%)</title><rect x="10.9946%" y="149" width="0.0389%" height="15" fill="rgb(217,147,25)" fg:x="121126" fg:w="429"/><text x="11.2446%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (297 samples, 0.03%)</title><rect x="11.0375%" y="165" width="0.0270%" height="15" fill="rgb(247,81,37)" fg:x="121599" fg:w="297"/><text x="11.2875%" y="175.50"></text></g><g><title>ant_colony.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (186 samples, 0.02%)</title><rect x="11.1169%" y="133" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="122473" fg:w="186"/><text x="11.3669%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (176 samples, 0.02%)</title><rect x="11.1178%" y="117" width="0.0160%" height="15" fill="rgb(227,1,9)" fg:x="122483" fg:w="176"/><text x="11.3678%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (592 samples, 0.05%)</title><rect x="11.0811%" y="149" width="0.0537%" height="15" fill="rgb(248,47,43)" fg:x="122079" fg:w="592"/><text x="11.3311%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (5,214 samples, 0.47%)</title><rect x="10.6616%" y="181" width="0.4733%" height="15" fill="rgb(221,10,30)" fg:x="117458" fg:w="5214"/><text x="10.9116%" y="191.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (596 samples, 0.05%)</title><rect x="11.0808%" y="165" width="0.0541%" height="15" fill="rgb(210,229,1)" fg:x="122076" fg:w="596"/><text x="11.3308%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (331 samples, 0.03%)</title><rect x="11.1407%" y="181" width="0.0300%" height="15" fill="rgb(222,148,37)" fg:x="122736" fg:w="331"/><text x="11.3907%" y="191.50"></text></g><g><title>ant_colony.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (204 samples, 0.02%)</title><rect x="11.2287%" y="149" width="0.0185%" height="15" fill="rgb(234,67,33)" fg:x="123705" fg:w="204"/><text x="11.4787%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (195 samples, 0.02%)</title><rect x="11.2295%" y="133" width="0.0177%" height="15" fill="rgb(247,98,35)" fg:x="123714" fg:w="195"/><text x="11.4795%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (653 samples, 0.06%)</title><rect x="11.1890%" y="165" width="0.0593%" height="15" fill="rgb(247,138,52)" fg:x="123268" fg:w="653"/><text x="11.4390%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (7,336 samples, 0.67%)</title><rect x="10.5828%" y="197" width="0.6659%" height="15" fill="rgb(213,79,30)" fg:x="116589" fg:w="7336"/><text x="10.8328%" y="207.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (657 samples, 0.06%)</title><rect x="11.1890%" y="181" width="0.0596%" height="15" fill="rgb(246,177,23)" fg:x="123268" fg:w="657"/><text x="11.4390%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (360 samples, 0.03%)</title><rect x="11.2566%" y="197" width="0.0327%" height="15" fill="rgb(230,62,27)" fg:x="124012" fg:w="360"/><text x="11.5066%" y="207.50"></text></g><g><title>ant_colony.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (266 samples, 0.02%)</title><rect x="11.3499%" y="165" width="0.0241%" height="15" fill="rgb(216,154,8)" fg:x="125040" fg:w="266"/><text x="11.5999%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (253 samples, 0.02%)</title><rect x="11.3510%" y="149" width="0.0230%" height="15" fill="rgb(244,35,45)" fg:x="125053" fg:w="253"/><text x="11.6010%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (752 samples, 0.07%)</title><rect x="11.3068%" y="181" width="0.0683%" height="15" fill="rgb(251,115,12)" fg:x="124565" fg:w="752"/><text x="11.5568%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (9,677 samples, 0.88%)</title><rect x="10.4968%" y="213" width="0.8784%" height="15" fill="rgb(240,54,50)" fg:x="115642" fg:w="9677"/><text x="10.7468%" y="223.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (759 samples, 0.07%)</title><rect x="11.3063%" y="197" width="0.0689%" height="15" fill="rgb(233,84,52)" fg:x="124560" fg:w="759"/><text x="11.5563%" y="207.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (312 samples, 0.03%)</title><rect x="11.3840%" y="213" width="0.0283%" height="15" fill="rgb(207,117,47)" fg:x="125416" fg:w="312"/><text x="11.6340%" y="223.50"></text></g><g><title>ant_colony.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (211 samples, 0.02%)</title><rect x="11.4658%" y="181" width="0.0192%" height="15" fill="rgb(249,43,39)" fg:x="126317" fg:w="211"/><text x="11.7158%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (203 samples, 0.02%)</title><rect x="11.4665%" y="165" width="0.0184%" height="15" fill="rgb(209,38,44)" fg:x="126325" fg:w="203"/><text x="11.7165%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (11,799 samples, 1.07%)</title><rect x="10.4148%" y="229" width="1.0710%" height="15" fill="rgb(236,212,23)" fg:x="114738" fg:w="11799"/><text x="10.6648%" y="239.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (656 samples, 0.06%)</title><rect x="11.4262%" y="213" width="0.0595%" height="15" fill="rgb(242,79,21)" fg:x="125881" fg:w="656"/><text x="11.6762%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (650 samples, 0.06%)</title><rect x="11.4267%" y="197" width="0.0590%" height="15" fill="rgb(211,96,35)" fg:x="125887" fg:w="650"/><text x="11.6767%" y="207.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (205 samples, 0.02%)</title><rect x="11.4935%" y="229" width="0.0186%" height="15" fill="rgb(253,215,40)" fg:x="126622" fg:w="205"/><text x="11.7435%" y="239.50"></text></g><g><title>ant_colony.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (174 samples, 0.02%)</title><rect x="11.5546%" y="197" width="0.0158%" height="15" fill="rgb(211,81,21)" fg:x="127295" fg:w="174"/><text x="11.8046%" y="207.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (165 samples, 0.01%)</title><rect x="11.5554%" y="181" width="0.0150%" height="15" fill="rgb(208,190,38)" fg:x="127304" fg:w="165"/><text x="11.8054%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (526 samples, 0.05%)</title><rect x="11.5232%" y="213" width="0.0477%" height="15" fill="rgb(235,213,38)" fg:x="126950" fg:w="526"/><text x="11.7732%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (13,403 samples, 1.22%)</title><rect x="10.3547%" y="245" width="1.2166%" height="15" fill="rgb(237,122,38)" fg:x="114076" fg:w="13403"/><text x="10.6047%" y="255.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (534 samples, 0.05%)</title><rect x="11.5228%" y="229" width="0.0485%" height="15" fill="rgb(244,218,35)" fg:x="126945" fg:w="534"/><text x="11.7728%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (154 samples, 0.01%)</title><rect x="11.5776%" y="245" width="0.0140%" height="15" fill="rgb(240,68,47)" fg:x="127549" fg:w="154"/><text x="11.8276%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (14,436 samples, 1.31%)</title><rect x="10.3166%" y="261" width="1.3104%" height="15" fill="rgb(210,16,53)" fg:x="113657" fg:w="14436"/><text x="10.5666%" y="271.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (318 samples, 0.03%)</title><rect x="11.5981%" y="245" width="0.0289%" height="15" fill="rgb(235,124,12)" fg:x="127775" fg:w="318"/><text x="11.8481%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (314 samples, 0.03%)</title><rect x="11.5985%" y="229" width="0.0285%" height="15" fill="rgb(224,169,11)" fg:x="127779" fg:w="314"/><text x="11.8485%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (187 samples, 0.02%)</title><rect x="11.6404%" y="245" width="0.0170%" height="15" fill="rgb(250,166,2)" fg:x="128241" fg:w="187"/><text x="11.8904%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (14,995 samples, 1.36%)</title><rect x="10.2965%" y="277" width="1.3611%" height="15" fill="rgb(242,216,29)" fg:x="113435" fg:w="14995"/><text x="10.5465%" y="287.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (190 samples, 0.02%)</title><rect x="11.6403%" y="261" width="0.0172%" height="15" fill="rgb(230,116,27)" fg:x="128240" fg:w="190"/><text x="11.8903%" y="271.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (15,286 samples, 1.39%)</title><rect x="10.2844%" y="293" width="1.3875%" height="15" fill="rgb(228,99,48)" fg:x="113302" fg:w="15286"/><text x="10.5344%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (15,438 samples, 1.40%)</title><rect x="10.2789%" y="309" width="1.4013%" height="15" fill="rgb(253,11,6)" fg:x="113241" fg:w="15438"/><text x="10.5289%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (15,490 samples, 1.41%)</title><rect x="10.2770%" y="325" width="1.4060%" height="15" fill="rgb(247,143,39)" fg:x="113220" fg:w="15490"/><text x="10.5270%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;array$ (15,531 samples, 1.41%)</title><rect x="10.2748%" y="389" width="1.4097%" height="15" fill="rgb(236,97,10)" fg:x="113196" fg:w="15531"/><text x="10.5248%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;array$ (15,531 samples, 1.41%)</title><rect x="10.2748%" y="373" width="1.4097%" height="15" fill="rgb(233,208,19)" fg:x="113196" fg:w="15531"/><text x="10.5248%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_slice (15,531 samples, 1.41%)</title><rect x="10.2748%" y="357" width="1.4097%" height="15" fill="rgb(216,164,2)" fg:x="113196" fg:w="15531"/><text x="10.5248%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (15,528 samples, 1.41%)</title><rect x="10.2751%" y="341" width="1.4095%" height="15" fill="rgb(220,129,5)" fg:x="113199" fg:w="15528"/><text x="10.5251%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::disto_approx(ant_colony::graph::Graph*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, ant_colony::aco2::TarjanSolver*, alloc::vec::Vec (23,538 samples, 2.14%)</title><rect x="9.5635%" y="405" width="2.1365%" height="15" fill="rgb(242,17,10)" fg:x="105360" fg:w="23538"/><text x="9.8135%" y="415.50">a..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (142 samples, 0.01%)</title><rect x="11.6872%" y="389" width="0.0129%" height="15" fill="rgb(242,107,0)" fg:x="128756" fg:w="142"/><text x="11.9372%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (139 samples, 0.01%)</title><rect x="11.6874%" y="373" width="0.0126%" height="15" fill="rgb(251,28,31)" fg:x="128759" fg:w="139"/><text x="11.9374%" y="383.50"></text></g><g><title>`0x7FF90A6E802F (8,020 samples, 0.73%)</title><rect x="16.9640%" y="341" width="0.7280%" height="15" fill="rgb(233,223,10)" fg:x="186890" fg:w="8020"/><text x="17.2140%" y="351.50"></text></g><g><title>`0x7FF90A7C1EC4 (8,018 samples, 0.73%)</title><rect x="16.9642%" y="325" width="0.7278%" height="15" fill="rgb(215,21,27)" fg:x="186892" fg:w="8018"/><text x="17.2142%" y="335.50"></text></g><g><title>`0x7FF90A675578 (8,021 samples, 0.73%)</title><rect x="16.9640%" y="357" width="0.7281%" height="15" fill="rgb(232,23,21)" fg:x="186890" fg:w="8021"/><text x="17.2140%" y="367.50"></text></g><g><title>`0x7FF90A6F59E0 (8,047 samples, 0.73%)</title><rect x="16.9622%" y="373" width="0.7304%" height="15" fill="rgb(244,5,23)" fg:x="186870" fg:w="8047"/><text x="17.2122%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (5,501 samples, 0.50%)</title><rect x="17.6929%" y="373" width="0.4993%" height="15" fill="rgb(226,81,46)" fg:x="194920" fg:w="5501"/><text x="17.9429%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (5,501 samples, 0.50%)</title><rect x="17.6929%" y="357" width="0.4993%" height="15" fill="rgb(247,70,30)" fg:x="194920" fg:w="5501"/><text x="17.9429%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (5,501 samples, 0.50%)</title><rect x="17.6929%" y="341" width="0.4993%" height="15" fill="rgb(212,68,19)" fg:x="194920" fg:w="5501"/><text x="17.9429%" y="351.50"></text></g><g><title>`0x7FF90A6F53C0 (131 samples, 0.01%)</title><rect x="18.1945%" y="293" width="0.0119%" height="15" fill="rgb(240,187,13)" fg:x="200446" fg:w="131"/><text x="18.4445%" y="303.50"></text></g><g><title>`0x7FF90A6F53FD (699 samples, 0.06%)</title><rect x="18.2096%" y="293" width="0.0634%" height="15" fill="rgb(223,113,26)" fg:x="200613" fg:w="699"/><text x="18.4596%" y="303.50"></text></g><g><title>`0x7FF90A6F549D (363 samples, 0.03%)</title><rect x="18.2859%" y="293" width="0.0329%" height="15" fill="rgb(206,192,2)" fg:x="201453" fg:w="363"/><text x="18.5359%" y="303.50"></text></g><g><title>`0x7FF90A6F54B4 (531 samples, 0.05%)</title><rect x="18.3283%" y="293" width="0.0482%" height="15" fill="rgb(241,108,4)" fg:x="201920" fg:w="531"/><text x="18.5783%" y="303.50"></text></g><g><title>`0x7FF90A6F54B8 (476 samples, 0.04%)</title><rect x="18.3765%" y="293" width="0.0432%" height="15" fill="rgb(247,173,49)" fg:x="202451" fg:w="476"/><text x="18.6265%" y="303.50"></text></g><g><title>`0x7FF90A6F5543 (245 samples, 0.02%)</title><rect x="18.4336%" y="293" width="0.0222%" height="15" fill="rgb(224,114,35)" fg:x="203081" fg:w="245"/><text x="18.6836%" y="303.50"></text></g><g><title>`0x7FF90A6F5659 (181 samples, 0.02%)</title><rect x="18.4611%" y="293" width="0.0164%" height="15" fill="rgb(245,159,27)" fg:x="203383" fg:w="181"/><text x="18.7111%" y="303.50"></text></g><g><title>`0x7FF90A66FBC0 (111 samples, 0.01%)</title><rect x="36.8104%" y="165" width="0.0101%" height="15" fill="rgb(245,172,44)" fg:x="405535" fg:w="111"/><text x="37.0604%" y="175.50"></text></g><g><title>`0x7FF90A66FFFF (424 samples, 0.04%)</title><rect x="36.8224%" y="165" width="0.0385%" height="15" fill="rgb(236,23,11)" fg:x="405668" fg:w="424"/><text x="37.0724%" y="175.50"></text></g><g><title>`0x7FF90A67002D (365 samples, 0.03%)</title><rect x="36.8624%" y="165" width="0.0331%" height="15" fill="rgb(205,117,38)" fg:x="406108" fg:w="365"/><text x="37.1124%" y="175.50"></text></g><g><title>`0x7FF90A66F2A4 (1,525 samples, 0.14%)</title><rect x="36.7626%" y="181" width="0.1384%" height="15" fill="rgb(237,72,25)" fg:x="405009" fg:w="1525"/><text x="37.0126%" y="191.50"></text></g><g><title>`0x7FF90A66F164 (1,805 samples, 0.16%)</title><rect x="36.7476%" y="197" width="0.1638%" height="15" fill="rgb(244,70,9)" fg:x="404844" fg:w="1805"/><text x="36.9976%" y="207.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (2,051 samples, 0.19%)</title><rect x="36.7416%" y="277" width="0.1862%" height="15" fill="rgb(217,125,39)" fg:x="404777" fg:w="2051"/><text x="36.9916%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (2,051 samples, 0.19%)</title><rect x="36.7416%" y="261" width="0.1862%" height="15" fill="rgb(235,36,10)" fg:x="404777" fg:w="2051"/><text x="36.9916%" y="271.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (2,051 samples, 0.19%)</title><rect x="36.7416%" y="245" width="0.1862%" height="15" fill="rgb(251,123,47)" fg:x="404777" fg:w="2051"/><text x="36.9916%" y="255.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (2,051 samples, 0.19%)</title><rect x="36.7416%" y="229" width="0.1862%" height="15" fill="rgb(221,13,13)" fg:x="404777" fg:w="2051"/><text x="36.9916%" y="239.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2,051 samples, 0.19%)</title><rect x="36.7416%" y="213" width="0.1862%" height="15" fill="rgb(238,131,9)" fg:x="404777" fg:w="2051"/><text x="36.9916%" y="223.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (20,785 samples, 1.89%)</title><rect x="36.9277%" y="277" width="1.8867%" height="15" fill="rgb(211,50,8)" fg:x="406828" fg:w="20785"/><text x="37.1777%" y="287.50">a..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (20,785 samples, 1.89%)</title><rect x="36.9277%" y="261" width="1.8867%" height="15" fill="rgb(245,182,24)" fg:x="406828" fg:w="20785"/><text x="37.1777%" y="271.50">a..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (20,785 samples, 1.89%)</title><rect x="36.9277%" y="245" width="1.8867%" height="15" fill="rgb(242,14,37)" fg:x="406828" fg:w="20785"/><text x="37.1777%" y="255.50">a..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (6,035 samples, 0.55%)</title><rect x="38.8144%" y="277" width="0.5478%" height="15" fill="rgb(246,228,12)" fg:x="427613" fg:w="6035"/><text x="39.0644%" y="287.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (6,035 samples, 0.55%)</title><rect x="38.8144%" y="261" width="0.5478%" height="15" fill="rgb(213,55,15)" fg:x="427613" fg:w="6035"/><text x="39.0644%" y="271.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (6,035 samples, 0.55%)</title><rect x="38.8144%" y="245" width="0.5478%" height="15" fill="rgb(209,9,3)" fg:x="427613" fg:w="6035"/><text x="39.0644%" y="255.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (6,168 samples, 0.56%)</title><rect x="47.2956%" y="261" width="0.5599%" height="15" fill="rgb(230,59,30)" fg:x="521049" fg:w="6168"/><text x="47.5456%" y="271.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (6,168 samples, 0.56%)</title><rect x="47.2956%" y="245" width="0.5599%" height="15" fill="rgb(209,121,21)" fg:x="521049" fg:w="6168"/><text x="47.5456%" y="255.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (6,168 samples, 0.56%)</title><rect x="47.2956%" y="229" width="0.5599%" height="15" fill="rgb(220,109,13)" fg:x="521049" fg:w="6168"/><text x="47.5456%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (99,689 samples, 9.05%)</title><rect x="39.3622%" y="277" width="9.0488%" height="15" fill="rgb(232,18,1)" fg:x="433648" fg:w="99689"/><text x="39.6122%" y="287.50">ant_colony.ex..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (6,120 samples, 0.56%)</title><rect x="47.8554%" y="261" width="0.5555%" height="15" fill="rgb(215,41,42)" fg:x="527217" fg:w="6120"/><text x="48.1054%" y="271.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3,150 samples, 0.29%)</title><rect x="48.1250%" y="245" width="0.2859%" height="15" fill="rgb(224,123,36)" fg:x="530187" fg:w="3150"/><text x="48.3750%" y="255.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (3,150 samples, 0.29%)</title><rect x="48.1250%" y="229" width="0.2859%" height="15" fill="rgb(240,125,3)" fg:x="530187" fg:w="3150"/><text x="48.3750%" y="239.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (3,150 samples, 0.29%)</title><rect x="48.1250%" y="213" width="0.2859%" height="15" fill="rgb(205,98,50)" fg:x="530187" fg:w="3150"/><text x="48.3750%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (349,485 samples, 31.72%)</title><rect x="18.4845%" y="293" width="31.7227%" height="15" fill="rgb(205,185,37)" fg:x="203641" fg:w="349485"/><text x="18.7345%" y="303.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsign..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (19,756 samples, 1.79%)</title><rect x="48.4139%" y="277" width="1.7932%" height="15" fill="rgb(238,207,15)" fg:x="533370" fg:w="19756"/><text x="48.6639%" y="287.50">a..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (19,756 samples, 1.79%)</title><rect x="48.4139%" y="261" width="1.7932%" height="15" fill="rgb(213,199,42)" fg:x="533370" fg:w="19756"/><text x="48.6639%" y="271.50">a..</text></g><g><title>`0x7FF909E53F99 (269 samples, 0.02%)</title><rect x="50.2221%" y="261" width="0.0244%" height="15" fill="rgb(235,201,11)" fg:x="553290" fg:w="269"/><text x="50.4721%" y="271.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (353,684 samples, 32.10%)</title><rect x="18.1922%" y="373" width="32.1039%" height="15" fill="rgb(207,46,11)" fg:x="200421" fg:w="353684"/><text x="18.4422%" y="383.50">ant_colony.exe`ant_colony::graph::Graph::update_dist..</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (353,668 samples, 32.10%)</title><rect x="18.1936%" y="357" width="32.1024%" height="15" fill="rgb(241,35,35)" fg:x="200437" fg:w="353668"/><text x="18.4436%" y="367.50">ant_colony.exe`core::iter::range::impl$6::next(core:..</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (353,668 samples, 32.10%)</title><rect x="18.1936%" y="341" width="32.1024%" height="15" fill="rgb(243,32,47)" fg:x="200437" fg:w="353668"/><text x="18.4436%" y="351.50">ant_colony.exe`core::iter::range::impl$5::spec_next(..</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (353,668 samples, 32.10%)</title><rect x="18.1936%" y="325" width="32.1024%" height="15" fill="rgb(247,202,23)" fg:x="200437" fg:w="353668"/><text x="18.4436%" y="335.50">ant_colony.exe`core::iter::range::impl$43::forward_u..</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (353,668 samples, 32.10%)</title><rect x="18.1936%" y="309" width="32.1024%" height="15" fill="rgb(219,102,11)" fg:x="200437" fg:w="353668"/><text x="18.4436%" y="319.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (979 samples, 0.09%)</title><rect x="50.2072%" y="293" width="0.0889%" height="15" fill="rgb(243,110,44)" fg:x="553126" fg:w="979"/><text x="50.4572%" y="303.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (917 samples, 0.08%)</title><rect x="50.2128%" y="277" width="0.0832%" height="15" fill="rgb(222,74,54)" fg:x="553188" fg:w="917"/><text x="50.4628%" y="287.50"></text></g><g><title>`0x7FF909E53F9D (546 samples, 0.05%)</title><rect x="50.2465%" y="261" width="0.0496%" height="15" fill="rgb(216,99,12)" fg:x="553559" fg:w="546"/><text x="50.4965%" y="271.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (1,741 samples, 0.16%)</title><rect x="50.2960%" y="373" width="0.1580%" height="15" fill="rgb(226,22,26)" fg:x="554105" fg:w="1741"/><text x="50.5460%" y="383.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1,741 samples, 0.16%)</title><rect x="50.2960%" y="357" width="0.1580%" height="15" fill="rgb(217,163,10)" fg:x="554105" fg:w="1741"/><text x="50.5460%" y="367.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (1,735 samples, 0.16%)</title><rect x="50.2966%" y="341" width="0.1575%" height="15" fill="rgb(213,25,53)" fg:x="554111" fg:w="1735"/><text x="50.5466%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (426,953 samples, 38.75%)</title><rect x="11.7004%" y="389" width="38.7545%" height="15" fill="rgb(252,105,26)" fg:x="128902" fg:w="426953"/><text x="11.9504%" y="399.50">ant_colony.exe`ant_colony::graph::Graph::distorsion(alloc::vec:..</text></g><g><title>`0x7FF8F1E82769 (77,102 samples, 7.00%)</title><rect x="50.4571%" y="293" width="6.9985%" height="15" fill="rgb(220,39,43)" fg:x="555879" fg:w="77102"/><text x="50.7071%" y="303.50">`0x7FF8F1..</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (77,131 samples, 7.00%)</title><rect x="50.4560%" y="325" width="7.0012%" height="15" fill="rgb(229,68,48)" fg:x="555867" fg:w="77131"/><text x="50.7060%" y="335.50">ant_colon..</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (77,131 samples, 7.00%)</title><rect x="50.4560%" y="309" width="7.0012%" height="15" fill="rgb(252,8,32)" fg:x="555867" fg:w="77131"/><text x="50.7060%" y="319.50">ant_colon..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (77,133 samples, 7.00%)</title><rect x="50.4560%" y="341" width="7.0014%" height="15" fill="rgb(223,20,43)" fg:x="555867" fg:w="77133"/><text x="50.7060%" y="351.50">ant_colon..</text></g><g><title>`0x7FF90A6A536A (145 samples, 0.01%)</title><rect x="57.4582%" y="181" width="0.0132%" height="15" fill="rgb(229,81,49)" fg:x="633010" fg:w="145"/><text x="57.7082%" y="191.50"></text></g><g><title>`0x7FF90A7C1E04 (144 samples, 0.01%)</title><rect x="57.4583%" y="165" width="0.0131%" height="15" fill="rgb(236,28,36)" fg:x="633011" fg:w="144"/><text x="57.7083%" y="175.50"></text></g><g><title>`0x7FF90A6A53B7 (129 samples, 0.01%)</title><rect x="57.4773%" y="181" width="0.0117%" height="15" fill="rgb(249,185,26)" fg:x="633220" fg:w="129"/><text x="57.7273%" y="191.50"></text></g><g><title>`0x7FF90A6E802F (129 samples, 0.01%)</title><rect x="57.4773%" y="165" width="0.0117%" height="15" fill="rgb(249,174,33)" fg:x="633220" fg:w="129"/><text x="57.7273%" y="175.50"></text></g><g><title>`0x7FF90A7C1EC4 (129 samples, 0.01%)</title><rect x="57.4773%" y="149" width="0.0117%" height="15" fill="rgb(233,201,37)" fg:x="633220" fg:w="129"/><text x="57.7273%" y="159.50"></text></g><g><title>`0x7FF90A6A6C4E (341 samples, 0.03%)</title><rect x="57.4582%" y="197" width="0.0310%" height="15" fill="rgb(221,78,26)" fg:x="633009" fg:w="341"/><text x="57.7082%" y="207.50"></text></g><g><title>`0x7FF90A66F164 (412 samples, 0.04%)</title><rect x="57.4575%" y="229" width="0.0374%" height="15" fill="rgb(250,127,30)" fg:x="633002" fg:w="412"/><text x="57.7075%" y="239.50"></text></g><g><title>`0x7FF90A66F591 (408 samples, 0.04%)</title><rect x="57.4579%" y="213" width="0.0370%" height="15" fill="rgb(230,49,44)" fg:x="633006" fg:w="408"/><text x="57.7079%" y="223.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (77,548 samples, 7.04%)</title><rect x="50.4560%" y="373" width="7.0390%" height="15" fill="rgb(229,67,23)" fg:x="555867" fg:w="77548"/><text x="50.7060%" y="383.50">ant_colon..</text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (77,548 samples, 7.04%)</title><rect x="50.4560%" y="357" width="7.0390%" height="15" fill="rgb(249,83,47)" fg:x="555867" fg:w="77548"/><text x="50.7060%" y="367.50">ant_colon..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (415 samples, 0.04%)</title><rect x="57.4573%" y="341" width="0.0377%" height="15" fill="rgb(215,43,3)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (415 samples, 0.04%)</title><rect x="57.4573%" y="325" width="0.0377%" height="15" fill="rgb(238,154,13)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (415 samples, 0.04%)</title><rect x="57.4573%" y="309" width="0.0377%" height="15" fill="rgb(219,56,2)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (415 samples, 0.04%)</title><rect x="57.4573%" y="293" width="0.0377%" height="15" fill="rgb(233,0,4)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="303.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate (415 samples, 0.04%)</title><rect x="57.4573%" y="277" width="0.0377%" height="15" fill="rgb(235,30,7)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (415 samples, 0.04%)</title><rect x="57.4573%" y="261" width="0.0377%" height="15" fill="rgb(250,79,13)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="271.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc (415 samples, 0.04%)</title><rect x="57.4573%" y="245" width="0.0377%" height="15" fill="rgb(211,146,34)" fg:x="633000" fg:w="415"/><text x="57.7073%" y="255.50"></text></g><g><title>`0x7FF8F1E82769 (5,489 samples, 0.50%)</title><rect x="57.4952%" y="325" width="0.4982%" height="15" fill="rgb(228,22,38)" fg:x="633417" fg:w="5489"/><text x="57.7452%" y="335.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (5,508 samples, 0.50%)</title><rect x="57.4950%" y="341" width="0.5000%" height="15" fill="rgb(235,168,5)" fg:x="633415" fg:w="5508"/><text x="57.7450%" y="351.50"></text></g><g><title>`0x7FF90A6F53C0 (118 samples, 0.01%)</title><rect x="57.9966%" y="309" width="0.0107%" height="15" fill="rgb(221,155,16)" fg:x="638941" fg:w="118"/><text x="58.2466%" y="319.50"></text></g><g><title>`0x7FF90A6F53FD (693 samples, 0.06%)</title><rect x="58.0097%" y="309" width="0.0629%" height="15" fill="rgb(215,215,53)" fg:x="639085" fg:w="693"/><text x="58.2597%" y="319.50"></text></g><g><title>`0x7FF90A6F549D (335 samples, 0.03%)</title><rect x="58.0863%" y="309" width="0.0304%" height="15" fill="rgb(223,4,10)" fg:x="639929" fg:w="335"/><text x="58.3363%" y="319.50"></text></g><g><title>`0x7FF90A6F54B4 (567 samples, 0.05%)</title><rect x="58.1254%" y="309" width="0.0515%" height="15" fill="rgb(234,103,6)" fg:x="640360" fg:w="567"/><text x="58.3754%" y="319.50"></text></g><g><title>`0x7FF90A6F54B8 (438 samples, 0.04%)</title><rect x="58.1769%" y="309" width="0.0398%" height="15" fill="rgb(227,97,0)" fg:x="640927" fg:w="438"/><text x="58.4269%" y="319.50"></text></g><g><title>`0x7FF90A6F5543 (221 samples, 0.02%)</title><rect x="58.2343%" y="309" width="0.0201%" height="15" fill="rgb(234,150,53)" fg:x="641560" fg:w="221"/><text x="58.4843%" y="319.50"></text></g><g><title>`0x7FF90A6F5659 (181 samples, 0.02%)</title><rect x="58.2585%" y="309" width="0.0164%" height="15" fill="rgb(228,201,54)" fg:x="641826" fg:w="181"/><text x="58.5085%" y="319.50"></text></g><g><title>`0x7FF90A66FFFF (423 samples, 0.04%)</title><rect x="77.3100%" y="181" width="0.0384%" height="15" fill="rgb(222,22,37)" fg:x="851714" fg:w="423"/><text x="77.5600%" y="191.50"></text></g><g><title>`0x7FF90A67002D (394 samples, 0.04%)</title><rect x="77.3508%" y="181" width="0.0358%" height="15" fill="rgb(237,53,32)" fg:x="852164" fg:w="394"/><text x="77.6008%" y="191.50"></text></g><g><title>`0x7FF90A66F2A4 (1,568 samples, 0.14%)</title><rect x="77.2514%" y="197" width="0.1423%" height="15" fill="rgb(233,25,53)" fg:x="851069" fg:w="1568"/><text x="77.5014%" y="207.50"></text></g><g><title>`0x7FF90A66F164 (1,804 samples, 0.16%)</title><rect x="77.2386%" y="213" width="0.1637%" height="15" fill="rgb(210,40,34)" fg:x="850928" fg:w="1804"/><text x="77.4886%" y="223.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (1,999 samples, 0.18%)</title><rect x="77.2342%" y="293" width="0.1814%" height="15" fill="rgb(241,220,44)" fg:x="850879" fg:w="1999"/><text x="77.4842%" y="303.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (1,999 samples, 0.18%)</title><rect x="77.2342%" y="277" width="0.1814%" height="15" fill="rgb(235,28,35)" fg:x="850879" fg:w="1999"/><text x="77.4842%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (1,999 samples, 0.18%)</title><rect x="77.2342%" y="261" width="0.1814%" height="15" fill="rgb(210,56,17)" fg:x="850879" fg:w="1999"/><text x="77.4842%" y="271.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (1,999 samples, 0.18%)</title><rect x="77.2342%" y="245" width="0.1814%" height="15" fill="rgb(224,130,29)" fg:x="850879" fg:w="1999"/><text x="77.4842%" y="255.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1,999 samples, 0.18%)</title><rect x="77.2342%" y="229" width="0.1814%" height="15" fill="rgb(235,212,8)" fg:x="850879" fg:w="1999"/><text x="77.4842%" y="239.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (22,005 samples, 2.00%)</title><rect x="77.4156%" y="293" width="1.9974%" height="15" fill="rgb(223,33,50)" fg:x="852878" fg:w="22005"/><text x="77.6656%" y="303.50">a..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (22,005 samples, 2.00%)</title><rect x="77.4156%" y="277" width="1.9974%" height="15" fill="rgb(219,149,13)" fg:x="852878" fg:w="22005"/><text x="77.6656%" y="287.50">a..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (22,005 samples, 2.00%)</title><rect x="77.4156%" y="261" width="1.9974%" height="15" fill="rgb(250,156,29)" fg:x="852878" fg:w="22005"/><text x="77.6656%" y="271.50">a..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (6,198 samples, 0.56%)</title><rect x="79.4130%" y="293" width="0.5626%" height="15" fill="rgb(216,193,19)" fg:x="874883" fg:w="6198"/><text x="79.6630%" y="303.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (6,198 samples, 0.56%)</title><rect x="79.4130%" y="277" width="0.5626%" height="15" fill="rgb(216,135,14)" fg:x="874883" fg:w="6198"/><text x="79.6630%" y="287.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (6,198 samples, 0.56%)</title><rect x="79.4130%" y="261" width="0.5626%" height="15" fill="rgb(241,47,5)" fg:x="874883" fg:w="6198"/><text x="79.6630%" y="271.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (6,151 samples, 0.56%)</title><rect x="88.1092%" y="277" width="0.5583%" height="15" fill="rgb(233,42,35)" fg:x="970688" fg:w="6151"/><text x="88.3592%" y="287.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (6,151 samples, 0.56%)</title><rect x="88.1092%" y="261" width="0.5583%" height="15" fill="rgb(231,13,6)" fg:x="970688" fg:w="6151"/><text x="88.3592%" y="271.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (6,151 samples, 0.56%)</title><rect x="88.1092%" y="245" width="0.5583%" height="15" fill="rgb(207,181,40)" fg:x="970688" fg:w="6151"/><text x="88.3592%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (101,867 samples, 9.25%)</title><rect x="79.9756%" y="293" width="9.2465%" height="15" fill="rgb(254,173,49)" fg:x="881081" fg:w="101867"/><text x="80.2256%" y="303.50">ant_colony.ex..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (6,109 samples, 0.55%)</title><rect x="88.6676%" y="277" width="0.5545%" height="15" fill="rgb(221,1,38)" fg:x="976839" fg:w="6109"/><text x="88.9176%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3,195 samples, 0.29%)</title><rect x="88.9321%" y="261" width="0.2900%" height="15" fill="rgb(206,124,46)" fg:x="979753" fg:w="3195"/><text x="89.1821%" y="271.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (3,195 samples, 0.29%)</title><rect x="88.9321%" y="245" width="0.2900%" height="15" fill="rgb(249,21,11)" fg:x="979753" fg:w="3195"/><text x="89.1821%" y="255.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (3,195 samples, 0.29%)</title><rect x="88.9321%" y="229" width="0.2900%" height="15" fill="rgb(222,201,40)" fg:x="979753" fg:w="3195"/><text x="89.1821%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (361,693 samples, 32.83%)</title><rect x="58.2807%" y="309" width="32.8308%" height="15" fill="rgb(235,61,29)" fg:x="642071" fg:w="361693"/><text x="58.5307%" y="319.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (20,778 samples, 1.89%)</title><rect x="89.2255%" y="293" width="1.8860%" height="15" fill="rgb(219,207,3)" fg:x="982986" fg:w="20778"/><text x="89.4755%" y="303.50">a..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (20,778 samples, 1.89%)</title><rect x="89.2255%" y="277" width="1.8860%" height="15" fill="rgb(222,56,46)" fg:x="982986" fg:w="20778"/><text x="89.4755%" y="287.50">a..</text></g><g><title>`0x7FF909E53F99 (302 samples, 0.03%)</title><rect x="91.1232%" y="277" width="0.0274%" height="15" fill="rgb(239,76,54)" fg:x="1003892" fg:w="302"/><text x="91.3732%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (448,905 samples, 40.75%)</title><rect x="50.4549%" y="389" width="40.7471%" height="15" fill="rgb(231,124,27)" fg:x="555855" fg:w="448905"/><text x="50.7049%" y="399.50">ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (371,345 samples, 33.71%)</title><rect x="57.4950%" y="373" width="33.7069%" height="15" fill="rgb(249,195,6)" fg:x="633415" fg:w="371345"/><text x="57.7450%" y="383.50">ant_colony.exe`core::iter::range::impl$6::next(core::op..</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (371,345 samples, 33.71%)</title><rect x="57.4950%" y="357" width="33.7069%" height="15" fill="rgb(237,174,47)" fg:x="633415" fg:w="371345"/><text x="57.7450%" y="367.50">ant_colony.exe`core::iter::range::impl$5::spec_next(cor..</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (365,837 samples, 33.21%)</title><rect x="57.9950%" y="341" width="33.2070%" height="15" fill="rgb(206,201,31)" fg:x="638923" fg:w="365837"/><text x="58.2450%" y="351.50">ant_colony.exe`core::iter::range::impl$43::forward_unc..</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (365,837 samples, 33.21%)</title><rect x="57.9950%" y="325" width="33.2070%" height="15" fill="rgb(231,57,52)" fg:x="638923" fg:w="365837"/><text x="58.2450%" y="335.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (996 samples, 0.09%)</title><rect x="91.1115%" y="309" width="0.0904%" height="15" fill="rgb(248,177,22)" fg:x="1003764" fg:w="996"/><text x="91.3615%" y="319.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (948 samples, 0.09%)</title><rect x="91.1159%" y="293" width="0.0860%" height="15" fill="rgb(215,211,37)" fg:x="1003812" fg:w="948"/><text x="91.3659%" y="303.50"></text></g><g><title>`0x7FF909E53F9D (566 samples, 0.05%)</title><rect x="91.1506%" y="277" width="0.0514%" height="15" fill="rgb(241,128,51)" fg:x="1004194" fg:w="566"/><text x="91.4006%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (42,917 samples, 3.90%)</title><rect x="93.6909%" y="357" width="3.8956%" height="15" fill="rgb(227,165,31)" fg:x="1032180" fg:w="42917"/><text x="93.9409%" y="367.50">ant_..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (70,427 samples, 6.39%)</title><rect x="91.2039%" y="373" width="6.3927%" height="15" fill="rgb(228,167,24)" fg:x="1004782" fg:w="70427"/><text x="91.4539%" y="383.50">ant_colo..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::incr_neighboor_count_unchecked (112 samples, 0.01%)</title><rect x="97.5864%" y="357" width="0.0102%" height="15" fill="rgb(228,143,12)" fg:x="1075097" fg:w="112"/><text x="97.8364%" y="367.50"></text></g><g><title>`0x7FF90A6A536A (431 samples, 0.04%)</title><rect x="97.6021%" y="229" width="0.0391%" height="15" fill="rgb(249,149,8)" fg:x="1075270" fg:w="431"/><text x="97.8521%" y="239.50"></text></g><g><title>`0x7FF90A7C1E04 (426 samples, 0.04%)</title><rect x="97.6026%" y="213" width="0.0387%" height="15" fill="rgb(243,35,44)" fg:x="1075275" fg:w="426"/><text x="97.8526%" y="223.50"></text></g><g><title>`0x7FF90A6A5387 (151 samples, 0.01%)</title><rect x="97.6413%" y="229" width="0.0137%" height="15" fill="rgb(246,89,9)" fg:x="1075701" fg:w="151"/><text x="97.8913%" y="239.50"></text></g><g><title>`0x7FF90A6E802F (150 samples, 0.01%)</title><rect x="97.6413%" y="213" width="0.0136%" height="15" fill="rgb(233,213,13)" fg:x="1075702" fg:w="150"/><text x="97.8913%" y="223.50"></text></g><g><title>`0x7FF90A7C1EC4 (149 samples, 0.01%)</title><rect x="97.6414%" y="197" width="0.0135%" height="15" fill="rgb(233,141,41)" fg:x="1075703" fg:w="149"/><text x="97.8914%" y="207.50"></text></g><g><title>`0x7FF90A6A6C4E (1,065 samples, 0.10%)</title><rect x="97.6020%" y="245" width="0.0967%" height="15" fill="rgb(239,167,4)" fg:x="1075268" fg:w="1065"/><text x="97.8520%" y="255.50"></text></g><g><title>`0x7FF90A6A53B7 (481 samples, 0.04%)</title><rect x="97.6550%" y="229" width="0.0437%" height="15" fill="rgb(209,217,16)" fg:x="1075852" fg:w="481"/><text x="97.9050%" y="239.50"></text></g><g><title>`0x7FF90A6E802F (479 samples, 0.04%)</title><rect x="97.6551%" y="213" width="0.0435%" height="15" fill="rgb(219,88,35)" fg:x="1075854" fg:w="479"/><text x="97.9051%" y="223.50"></text></g><g><title>`0x7FF90A7C1EC4 (479 samples, 0.04%)</title><rect x="97.6551%" y="197" width="0.0435%" height="15" fill="rgb(220,193,23)" fg:x="1075854" fg:w="479"/><text x="97.9051%" y="207.50"></text></g><g><title>`0x7FF90A6A6C74 (150 samples, 0.01%)</title><rect x="97.6986%" y="245" width="0.0136%" height="15" fill="rgb(230,90,52)" fg:x="1076333" fg:w="150"/><text x="97.9486%" y="255.50"></text></g><g><title>`0x7FF90A66F591 (1,263 samples, 0.11%)</title><rect x="97.5992%" y="261" width="0.1146%" height="15" fill="rgb(252,106,19)" fg:x="1075238" fg:w="1263"/><text x="97.8492%" y="271.50"></text></g><g><title>`0x7FF90A66F164 (1,278 samples, 0.12%)</title><rect x="97.5980%" y="277" width="0.1160%" height="15" fill="rgb(206,74,20)" fg:x="1075224" fg:w="1278"/><text x="97.8480%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::new_empty (1,308 samples, 0.12%)</title><rect x="97.5966%" y="373" width="0.1187%" height="15" fill="rgb(230,138,44)" fg:x="1075209" fg:w="1308"/><text x="97.8466%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (1,308 samples, 0.12%)</title><rect x="97.5966%" y="357" width="0.1187%" height="15" fill="rgb(235,182,43)" fg:x="1075209" fg:w="1308"/><text x="97.8466%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (1,308 samples, 0.12%)</title><rect x="97.5966%" y="341" width="0.1187%" height="15" fill="rgb(242,16,51)" fg:x="1075209" fg:w="1308"/><text x="97.8466%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::with_capacity_zeroed_in (1,308 samples, 0.12%)</title><rect x="97.5966%" y="325" width="0.1187%" height="15" fill="rgb(248,9,4)" fg:x="1075209" fg:w="1308"/><text x="97.8466%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (1,308 samples, 0.12%)</title><rect x="97.5966%" y="309" width="0.1187%" height="15" fill="rgb(210,31,22)" fg:x="1075209" fg:w="1308"/><text x="97.8466%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1,308 samples, 0.12%)</title><rect x="97.5966%" y="293" width="0.1187%" height="15" fill="rgb(239,54,39)" fg:x="1075209" fg:w="1308"/><text x="97.8466%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::to_graph (71,806 samples, 6.52%)</title><rect x="91.2019%" y="389" width="6.5178%" height="15" fill="rgb(230,99,41)" fg:x="1004760" fg:w="71806"/><text x="91.4519%" y="399.50">ant_colon..</text></g><g><title>`0x7FF90A6E802F (8,078 samples, 0.73%)</title><rect x="97.7270%" y="261" width="0.7332%" height="15" fill="rgb(253,106,12)" fg:x="1076646" fg:w="8078"/><text x="97.9770%" y="271.50"></text></g><g><title>`0x7FF90A7C1EC4 (8,069 samples, 0.73%)</title><rect x="97.7278%" y="245" width="0.7324%" height="15" fill="rgb(213,46,41)" fg:x="1076655" fg:w="8069"/><text x="97.9778%" y="255.50"></text></g><g><title>`0x7FF90A675578 (8,082 samples, 0.73%)</title><rect x="97.7269%" y="277" width="0.7336%" height="15" fill="rgb(215,133,35)" fg:x="1076645" fg:w="8082"/><text x="97.9769%" y="287.50"></text></g><g><title>`0x7FF90A6F59E0 (8,151 samples, 0.74%)</title><rect x="97.7215%" y="293" width="0.7399%" height="15" fill="rgb(213,28,5)" fg:x="1076585" fg:w="8151"/><text x="97.9715%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::distorsion(alloc::vec::Vec (955,856 samples, 86.76%)</title><rect x="11.7001%" y="405" width="86.7629%" height="15" fill="rgb(215,77,49)" fg:x="128898" fg:w="955856"/><text x="11.9501%" y="415.50">ant_colony.exe`ant_colony::graph::RootedTree::distorsion(alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (8,188 samples, 0.74%)</title><rect x="97.7198%" y="389" width="0.7432%" height="15" fill="rgb(248,100,22)" fg:x="1076566" fg:w="8188"/><text x="97.9698%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (8,188 samples, 0.74%)</title><rect x="97.7198%" y="373" width="0.7432%" height="15" fill="rgb(208,67,9)" fg:x="1076566" fg:w="8188"/><text x="97.9698%" y="383.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (8,188 samples, 0.74%)</title><rect x="97.7198%" y="357" width="0.7432%" height="15" fill="rgb(219,133,21)" fg:x="1076566" fg:w="8188"/><text x="97.9698%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (8,188 samples, 0.74%)</title><rect x="97.7198%" y="341" width="0.7432%" height="15" fill="rgb(246,46,29)" fg:x="1076566" fg:w="8188"/><text x="97.9698%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (8,188 samples, 0.74%)</title><rect x="97.7198%" y="325" width="0.7432%" height="15" fill="rgb(246,185,52)" fg:x="1076566" fg:w="8188"/><text x="97.9698%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (8,188 samples, 0.74%)</title><rect x="97.7198%" y="309" width="0.7432%" height="15" fill="rgb(252,136,11)" fg:x="1076566" fg:w="8188"/><text x="97.9698%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::distorsion(alloc::vec::Vec (230 samples, 0.02%)</title><rect x="98.4679%" y="357" width="0.0209%" height="15" fill="rgb(219,138,53)" fg:x="1084808" fg:w="230"/><text x="98.7179%" y="367.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (237 samples, 0.02%)</title><rect x="98.4678%" y="405" width="0.0215%" height="15" fill="rgb(211,51,23)" fg:x="1084807" fg:w="237"/><text x="98.7178%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec (236 samples, 0.02%)</title><rect x="98.4679%" y="389" width="0.0214%" height="15" fill="rgb(247,221,28)" fg:x="1084808" fg:w="236"/><text x="98.7179%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::vec::Vec (236 samples, 0.02%)</title><rect x="98.4679%" y="373" width="0.0214%" height="15" fill="rgb(251,222,45)" fg:x="1084808" fg:w="236"/><text x="98.7179%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::launch (1,084,980 samples, 98.48%)</title><rect x="0.0069%" y="421" width="98.4835%" height="15" fill="rgb(217,162,53)" fg:x="76" fg:w="1084980"/><text x="0.2569%" y="431.50">ant_colony.exe`ant_colony::aco2::ACO2::launch</text></g><g><title>ant_colony.exe`ant_colony::test_on_graph (1,085,187 samples, 98.50%)</title><rect x="0.0025%" y="437" width="98.5023%" height="15" fill="rgb(229,93,14)" fg:x="28" fg:w="1085187"/><text x="0.2525%" y="447.50">ant_colony.exe`ant_colony::test_on_graph</text></g><g><title>`0x7FF90A7C1BC4 (7,720 samples, 0.70%)</title><rect x="98.5186%" y="165" width="0.7007%" height="15" fill="rgb(209,67,49)" fg:x="1085367" fg:w="7720"/><text x="98.7686%" y="175.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,enum2$ (7,883 samples, 0.72%)</title><rect x="98.5049%" y="293" width="0.7155%" height="15" fill="rgb(213,87,29)" fg:x="1085216" fg:w="7883"/><text x="98.7549%" y="303.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_alloc::impl$14::decode&lt;tuple$&lt;&gt;,f64,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt;(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (7,883 samples, 0.72%)</title><rect x="98.5049%" y="277" width="0.7155%" height="15" fill="rgb(205,151,52)" fg:x="1085216" fg:w="7883"/><text x="98.7549%" y="287.50"></text></g><g><title>ant_colony.exe`bincode::de::impls::impl$26::decode(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (7,845 samples, 0.71%)</title><rect x="98.5084%" y="261" width="0.7121%" height="15" fill="rgb(253,215,39)" fg:x="1085254" fg:w="7845"/><text x="98.7584%" y="271.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_std::impl$1::read(bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;*, ref_mut$&lt;slice2$ (7,845 samples, 0.71%)</title><rect x="98.5084%" y="245" width="0.7121%" height="15" fill="rgb(221,220,41)" fg:x="1085254" fg:w="7845"/><text x="98.7584%" y="255.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, bincode::features::impl_std::impl$1::read::closure_env$0&lt;ref_mut$ (7,845 samples, 0.71%)</title><rect x="98.5084%" y="229" width="0.7121%" height="15" fill="rgb(218,133,21)" fg:x="1085254" fg:w="7845"/><text x="98.7584%" y="239.50"></text></g><g><title>ant_colony.exe`std::io::default_read_exact&lt;std::fs::File&gt;(std::fs::File*, ref_mut$&lt;slice2$ (7,844 samples, 0.71%)</title><rect x="98.5085%" y="213" width="0.7120%" height="15" fill="rgb(221,193,43)" fg:x="1085255" fg:w="7844"/><text x="98.7585%" y="223.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read (7,815 samples, 0.71%)</title><rect x="98.5111%" y="197" width="0.7094%" height="15" fill="rgb(240,128,52)" fg:x="1085284" fg:w="7815"/><text x="98.7611%" y="207.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (7,799 samples, 0.71%)</title><rect x="98.5126%" y="181" width="0.7079%" height="15" fill="rgb(253,114,12)" fg:x="1085300" fg:w="7799"/><text x="98.7626%" y="191.50"></text></g><g><title>`0x7FF90A7C1BC4 (7,829 samples, 0.71%)</title><rect x="99.2334%" y="149" width="0.7106%" height="15" fill="rgb(215,223,47)" fg:x="1093242" fg:w="7829"/><text x="99.4834%" y="159.50"></text></g><g><title>ant_colony.exe`bincode::de::impls::impl$38::decode(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (15,867 samples, 1.44%)</title><rect x="98.5049%" y="309" width="1.4402%" height="15" fill="rgb(248,225,23)" fg:x="1085216" fg:w="15867"/><text x="98.7549%" y="319.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,enum2$ (7,984 samples, 0.72%)</title><rect x="99.2205%" y="293" width="0.7247%" height="15" fill="rgb(250,108,0)" fg:x="1093099" fg:w="7984"/><text x="99.4705%" y="303.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_alloc::impl$14::decode&lt;tuple$&lt;&gt;,u32,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt;(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (7,984 samples, 0.72%)</title><rect x="99.2205%" y="277" width="0.7247%" height="15" fill="rgb(228,208,7)" fg:x="1093099" fg:w="7984"/><text x="99.4705%" y="287.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;u32,enum2$ (7,969 samples, 0.72%)</title><rect x="99.2218%" y="261" width="0.7233%" height="15" fill="rgb(244,45,10)" fg:x="1093114" fg:w="7969"/><text x="99.4718%" y="271.50"></text></g><g><title>ant_colony.exe`bincode::varint::decode_unsigned::deserialize_varint_cold_u32&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt; &gt;(bincode::features::impl_std::IoReader&lt;ref_mut$ (7,967 samples, 0.72%)</title><rect x="99.2220%" y="245" width="0.7232%" height="15" fill="rgb(207,125,25)" fg:x="1093116" fg:w="7967"/><text x="99.4720%" y="255.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_std::impl$1::read(bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;*, ref_mut$&lt;slice2$ (7,958 samples, 0.72%)</title><rect x="99.2228%" y="229" width="0.7223%" height="15" fill="rgb(210,195,18)" fg:x="1093125" fg:w="7958"/><text x="99.4728%" y="239.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, bincode::features::impl_std::impl$1::read::closure_env$0&lt;ref_mut$ (7,958 samples, 0.72%)</title><rect x="99.2228%" y="213" width="0.7223%" height="15" fill="rgb(249,80,12)" fg:x="1093125" fg:w="7958"/><text x="99.4728%" y="223.50"></text></g><g><title>ant_colony.exe`std::io::default_read_exact&lt;std::fs::File&gt;(std::fs::File*, ref_mut$&lt;slice2$ (7,956 samples, 0.72%)</title><rect x="99.2230%" y="197" width="0.7222%" height="15" fill="rgb(221,65,9)" fg:x="1093127" fg:w="7956"/><text x="99.4730%" y="207.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read (7,917 samples, 0.72%)</title><rect x="99.2265%" y="181" width="0.7186%" height="15" fill="rgb(235,49,36)" fg:x="1093166" fg:w="7917"/><text x="99.4765%" y="191.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (7,901 samples, 0.72%)</title><rect x="99.2280%" y="165" width="0.7172%" height="15" fill="rgb(225,32,20)" fg:x="1093182" fg:w="7901"/><text x="99.4780%" y="175.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;, bincode::features::impl_std::impl$1::read::closure_env$0&lt;ref_mut$ (592 samples, 0.05%)</title><rect x="99.9455%" y="101" width="0.0537%" height="15" fill="rgb(215,141,46)" fg:x="1101087" fg:w="592"/><text x="100.1955%" y="111.50"></text></g><g><title>ant_colony.exe`std::io::default_read_exact&lt;std::fs::File&gt;(std::fs::File*, ref_mut$&lt;slice2$ (592 samples, 0.05%)</title><rect x="99.9455%" y="85" width="0.0537%" height="15" fill="rgb(250,160,47)" fg:x="1101087" fg:w="592"/><text x="100.1955%" y="95.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read (587 samples, 0.05%)</title><rect x="99.9460%" y="69" width="0.0533%" height="15" fill="rgb(216,222,40)" fg:x="1101092" fg:w="587"/><text x="100.1960%" y="79.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (585 samples, 0.05%)</title><rect x="99.9462%" y="53" width="0.0531%" height="15" fill="rgb(234,217,39)" fg:x="1101094" fg:w="585"/><text x="100.1962%" y="63.50"></text></g><g><title>`0x7FF90A7C1BC4 (579 samples, 0.05%)</title><rect x="99.9467%" y="37" width="0.0526%" height="15" fill="rgb(207,178,40)" fg:x="1101100" fg:w="579"/><text x="100.1967%" y="47.50"></text></g><g><title>ant_colony.exe`bincode::de::impls::impl$34::decode(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (596 samples, 0.05%)</title><rect x="99.9453%" y="277" width="0.0541%" height="15" fill="rgb(221,136,13)" fg:x="1101084" fg:w="596"/><text x="100.1953%" y="287.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;array$&lt;usize,2&gt;,enum2$&lt;bincode::error::DecodeError&gt; &gt; &gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;array$&lt;usize,2&gt;,enum2$ (596 samples, 0.05%)</title><rect x="99.9453%" y="261" width="0.0541%" height="15" fill="rgb(249,199,10)" fg:x="1101084" fg:w="596"/><text x="100.1953%" y="271.50"></text></g><g><title>ant_colony.exe`bincode::de::impl_core::collect_into_array&lt;enum2$&lt;bincode::error::DecodeError&gt;,core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,bincode::de::impls::impl$34::decode::closure_env$0&lt;tuple$&lt;&gt;,usize,2,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt; &gt;,usize,2&gt;(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,bincode::de::impls::impl$34::decode::closure_env$0&lt;tuple$&lt;&gt;,usize,2,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (595 samples, 0.05%)</title><rect x="99.9454%" y="245" width="0.0540%" height="15" fill="rgb(249,222,13)" fg:x="1101085" fg:w="595"/><text x="100.1954%" y="255.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,bincode::de::impls::impl$34::decode::closure_env$0&lt;tuple$&lt;&gt;,usize,2,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (594 samples, 0.05%)</title><rect x="99.9454%" y="229" width="0.0539%" height="15" fill="rgb(244,185,38)" fg:x="1101086" fg:w="594"/><text x="100.1954%" y="239.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::map(enum2$&lt;core::option::Option&lt;usize&gt; &gt;, bincode::de::impls::impl$34::decode::closure_env$0&lt;tuple$&lt;&gt;,usize,2,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (594 samples, 0.05%)</title><rect x="99.9454%" y="213" width="0.0539%" height="15" fill="rgb(236,202,9)" fg:x="1101086" fg:w="594"/><text x="100.1954%" y="223.50"></text></g><g><title>ant_colony.exe`core::ops::function::impls::impl$4::call_once(bincode::de::impls::impl$34::decode::closure_env$0&lt;tuple$&lt;&gt;,usize,2,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (594 samples, 0.05%)</title><rect x="99.9454%" y="197" width="0.0539%" height="15" fill="rgb(250,229,37)" fg:x="1101086" fg:w="594"/><text x="100.1954%" y="207.50"></text></g><g><title>ant_colony.exe`bincode::de::impls::impl$34::decode::closure$0(bincode::de::impls::impl$34::decode::closure_env$0&lt;tuple$&lt;&gt;,usize,2,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (594 samples, 0.05%)</title><rect x="99.9454%" y="181" width="0.0539%" height="15" fill="rgb(206,174,23)" fg:x="1101086" fg:w="594"/><text x="100.1954%" y="191.50"></text></g><g><title>ant_colony.exe`bincode::de::impls::impl$11::decode(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (594 samples, 0.05%)</title><rect x="99.9454%" y="165" width="0.0539%" height="15" fill="rgb(211,33,43)" fg:x="1101086" fg:w="594"/><text x="100.1954%" y="175.50"></text></g><g><title>ant_colony.exe`bincode::varint::decode_unsigned::varint_decode_usize(bincode::features::impl_std::IoReader&lt;ref_mut$ (594 samples, 0.05%)</title><rect x="99.9454%" y="149" width="0.0539%" height="15" fill="rgb(245,58,50)" fg:x="1101086" fg:w="594"/><text x="100.1954%" y="159.50"></text></g><g><title>ant_colony.exe`bincode::varint::decode_unsigned::deserialize_varint_cold_usize&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt; &gt;(bincode::features::impl_std::IoReader&lt;ref_mut$ (593 samples, 0.05%)</title><rect x="99.9455%" y="133" width="0.0538%" height="15" fill="rgb(244,68,36)" fg:x="1101087" fg:w="593"/><text x="100.1955%" y="143.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_std::impl$1::read(bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;*, ref_mut$&lt;slice2$ (593 samples, 0.05%)</title><rect x="99.9455%" y="117" width="0.0538%" height="15" fill="rgb(232,229,15)" fg:x="1101087" fg:w="593"/><text x="100.1955%" y="127.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ant_colony::random_graph_generator::GraphData,alloc::alloc::Global&gt;,enum2$ (16,466 samples, 1.49%)</title><rect x="98.5049%" y="373" width="1.4946%" height="15" fill="rgb(254,30,23)" fg:x="1085216" fg:w="16466"/><text x="98.7549%" y="383.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_alloc::impl$14::decode&lt;tuple$&lt;&gt;,ant_colony::random_graph_generator::GraphData,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt;(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (16,466 samples, 1.49%)</title><rect x="98.5049%" y="357" width="1.4946%" height="15" fill="rgb(235,160,14)" fg:x="1085216" fg:w="16466"/><text x="98.7549%" y="367.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;ant_colony::random_graph_generator::GraphData,enum2$ (16,466 samples, 1.49%)</title><rect x="98.5049%" y="341" width="1.4946%" height="15" fill="rgb(212,155,44)" fg:x="1085216" fg:w="16466"/><text x="98.7549%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::random_graph_generator::impl$7::decode&lt;tuple$&lt;&gt;,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt;(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (16,466 samples, 1.49%)</title><rect x="98.5049%" y="325" width="1.4946%" height="15" fill="rgb(226,2,50)" fg:x="1085216" fg:w="16466"/><text x="98.7549%" y="335.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;,enum2$ (599 samples, 0.05%)</title><rect x="99.9452%" y="309" width="0.0544%" height="15" fill="rgb(234,177,6)" fg:x="1101083" fg:w="599"/><text x="100.1952%" y="319.50"></text></g><g><title>ant_colony.exe`bincode::features::impl_alloc::impl$14::decode&lt;tuple$&lt;&gt;,array$&lt;usize,2&gt;,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt;(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (599 samples, 0.05%)</title><rect x="99.9452%" y="293" width="0.0544%" height="15" fill="rgb(217,24,9)" fg:x="1101083" fg:w="599"/><text x="100.1952%" y="303.50"></text></g><g><title>ant_colony.exe`core::fmt::Arguments::new_const(ref$ (16,468 samples, 1.49%)</title><rect x="98.5048%" y="437" width="1.4948%" height="15" fill="rgb(220,13,46)" fg:x="1085215" fg:w="16468"/><text x="98.7548%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::random_graph_generator::Data::load(ref$ (16,468 samples, 1.49%)</title><rect x="98.5048%" y="421" width="1.4948%" height="15" fill="rgb(239,221,27)" fg:x="1085215" fg:w="16468"/><text x="98.7548%" y="431.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;ant_colony::random_graph_generator::Data,enum2$&lt;bincode::error::DecodeError&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;ant_colony::random_graph_generator::Data,enum2$&lt;bincode::error::DecodeError&gt; &gt; &gt;, ref$ (16,467 samples, 1.49%)</title><rect x="98.5049%" y="405" width="1.4947%" height="15" fill="rgb(222,198,25)" fg:x="1085216" fg:w="16467"/><text x="98.7549%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::random_graph_generator::impl$4::decode&lt;tuple$&lt;&gt;,bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$&lt;&gt; &gt; &gt;(bincode::de::decoder::DecoderImpl&lt;bincode::features::impl_std::IoReader&lt;ref_mut$&lt;std::fs::File&gt; &gt;,bincode::config::Configuration&lt;bincode::config::LittleEndian,bincode::config::Varint,bincode::config::NoLimit&gt;,tuple$ (16,467 samples, 1.49%)</title><rect x="98.5049%" y="389" width="1.4947%" height="15" fill="rgb(211,99,13)" fg:x="1085216" fg:w="16467"/><text x="98.7549%" y="399.50"></text></g><g><title>all (1,101,687 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(232,111,31)" fg:x="0" fg:w="1101687"/><text x="0.2500%" y="671.50"></text></g><g><title>`0x7FF90A69C34C (1,101,669 samples, 100.00%)</title><rect x="0.0016%" y="645" width="99.9984%" height="15" fill="rgb(245,82,37)" fg:x="18" fg:w="1101669"/><text x="0.2516%" y="655.50">`0x7FF90A69C34C</text></g><g><title>`0x7FF909E5E8D7 (1,101,669 samples, 100.00%)</title><rect x="0.0016%" y="629" width="99.9984%" height="15" fill="rgb(227,149,46)" fg:x="18" fg:w="1101669"/><text x="0.2516%" y="639.50">`0x7FF909E5E8D7</text></g><g><title>ant_colony.exe`__scrt_common_main_seh() (1,101,668 samples, 100.00%)</title><rect x="0.0017%" y="613" width="99.9983%" height="15" fill="rgb(218,36,50)" fg:x="19" fg:w="1101668"/><text x="0.2517%" y="623.50">ant_colony.exe`__scrt_common_main_seh()</text></g><g><title>ant_colony.exe`invoke_main() (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="597" width="99.9976%" height="15" fill="rgb(226,80,48)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="607.50">ant_colony.exe`invoke_main()</text></g><g><title>ant_colony.exe`main (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="581" width="99.9976%" height="15" fill="rgb(238,224,15)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="591.50">ant_colony.exe`main</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="565" width="99.9976%" height="15" fill="rgb(241,136,10)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="575.50">ant_colony.exe`std::rt::lang_start_internal</text></g><g><title>ant_colony.exe`std::panic::catch_unwind (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="549" width="99.9976%" height="15" fill="rgb(208,32,45)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="559.50">ant_colony.exe`std::panic::catch_unwind</text></g><g><title>ant_colony.exe`std::panicking::try (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="533" width="99.9976%" height="15" fill="rgb(207,135,9)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="543.50">ant_colony.exe`std::panicking::try</text></g><g><title>ant_colony.exe`std::panicking::try::do_call (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="517" width="99.9976%" height="15" fill="rgb(206,86,44)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="527.50">ant_colony.exe`std::panicking::try::do_call</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal::closure$0 (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="501" width="99.9976%" height="15" fill="rgb(245,177,15)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="511.50">ant_colony.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="485" width="99.9976%" height="15" fill="rgb(206,64,50)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="495.50">ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="469" width="99.9976%" height="15" fill="rgb(234,36,40)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="479.50">ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>ant_colony.exe`ant_colony::main (1,101,661 samples, 100.00%)</title><rect x="0.0024%" y="453" width="99.9976%" height="15" fill="rgb(213,64,8)" fg:x="26" fg:w="1101661"/><text x="0.2524%" y="463.50">ant_colony.exe`ant_colony::main</text></g></svg></svg>