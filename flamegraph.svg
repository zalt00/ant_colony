<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="265631"><g><title>`0x7FF8903E1446 (195 samples, 0.07%)</title><rect x="0.0215%" y="469" width="0.0734%" height="15" fill="rgb(227,0,7)" fg:x="57" fg:w="195"/><text x="0.2715%" y="479.50"></text></g><g><title>`0x7FF8903E145E (180 samples, 0.07%)</title><rect x="0.1009%" y="469" width="0.0678%" height="15" fill="rgb(217,0,24)" fg:x="268" fg:w="180"/><text x="0.3509%" y="479.50"></text></g><g><title>`0x7FF8903E1466 (268 samples, 0.10%)</title><rect x="0.1687%" y="469" width="0.1009%" height="15" fill="rgb(221,193,54)" fg:x="448" fg:w="268"/><text x="0.4187%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (687 samples, 0.26%)</title><rect x="0.0124%" y="517" width="0.2586%" height="15" fill="rgb(248,212,6)" fg:x="33" fg:w="687"/><text x="0.2624%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (687 samples, 0.26%)</title><rect x="0.0124%" y="501" width="0.2586%" height="15" fill="rgb(208,68,35)" fg:x="33" fg:w="687"/><text x="0.2624%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$ (687 samples, 0.26%)</title><rect x="0.0124%" y="485" width="0.2586%" height="15" fill="rgb(232,128,0)" fg:x="33" fg:w="687"/><text x="0.2624%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (244 samples, 0.09%)</title><rect x="0.2775%" y="501" width="0.0919%" height="15" fill="rgb(207,160,47)" fg:x="737" fg:w="244"/><text x="0.5275%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (244 samples, 0.09%)</title><rect x="0.2775%" y="485" width="0.0919%" height="15" fill="rgb(228,23,34)" fg:x="737" fg:w="244"/><text x="0.5275%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (244 samples, 0.09%)</title><rect x="0.2775%" y="469" width="0.0919%" height="15" fill="rgb(218,30,26)" fg:x="737" fg:w="244"/><text x="0.5275%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::_smallest_above_from (250 samples, 0.09%)</title><rect x="0.3731%" y="469" width="0.0941%" height="15" fill="rgb(220,122,19)" fg:x="991" fg:w="250"/><text x="0.6231%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::children_count (107 samples, 0.04%)</title><rect x="0.4269%" y="453" width="0.0403%" height="15" fill="rgb(250,228,42)" fg:x="1134" fg:w="107"/><text x="0.6769%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::smallest_above (255 samples, 0.10%)</title><rect x="0.3716%" y="485" width="0.0960%" height="15" fill="rgb(240,193,28)" fg:x="987" fg:w="255"/><text x="0.6216%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::get_edge (268 samples, 0.10%)</title><rect x="0.3716%" y="501" width="0.1009%" height="15" fill="rgb(216,20,37)" fg:x="987" fg:w="268"/><text x="0.6216%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (2,214 samples, 0.83%)</title><rect x="0.4928%" y="485" width="0.8335%" height="15" fill="rgb(206,188,39)" fg:x="1309" fg:w="2214"/><text x="0.7428%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2,214 samples, 0.83%)</title><rect x="0.4928%" y="469" width="0.8335%" height="15" fill="rgb(217,207,13)" fg:x="1309" fg:w="2214"/><text x="0.7428%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (2,202 samples, 0.83%)</title><rect x="0.4973%" y="453" width="0.8290%" height="15" fill="rgb(231,73,38)" fg:x="1321" fg:w="2202"/><text x="0.7473%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::update (649 samples, 0.24%)</title><rect x="1.3278%" y="485" width="0.2443%" height="15" fill="rgb(225,20,46)" fg:x="3527" fg:w="649"/><text x="1.5778%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::parent (82 samples, 0.03%)</title><rect x="1.5412%" y="469" width="0.0309%" height="15" fill="rgb(210,31,41)" fg:x="4094" fg:w="82"/><text x="1.7912%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::reset_state (2,940 samples, 1.11%)</title><rect x="0.4725%" y="501" width="1.1068%" height="15" fill="rgb(221,200,47)" fg:x="1255" fg:w="2940"/><text x="0.7225%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_slice (27 samples, 0.01%)</title><rect x="1.7009%" y="453" width="0.0102%" height="15" fill="rgb(226,26,5)" fg:x="4518" fg:w="27"/><text x="1.9509%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3,612 samples, 1.36%)</title><rect x="1.6914%" y="485" width="1.3598%" height="15" fill="rgb(249,33,26)" fg:x="4493" fg:w="3612"/><text x="1.9414%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3,612 samples, 1.36%)</title><rect x="1.6914%" y="469" width="1.3598%" height="15" fill="rgb(235,183,28)" fg:x="4493" fg:w="3612"/><text x="1.9414%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (3,552 samples, 1.34%)</title><rect x="1.7140%" y="453" width="1.3372%" height="15" fill="rgb(221,5,38)" fg:x="4553" fg:w="3552"/><text x="1.9640%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_mut_slice (27 samples, 0.01%)</title><rect x="3.0512%" y="453" width="0.0102%" height="15" fill="rgb(247,18,42)" fg:x="8105" fg:w="27"/><text x="3.3012%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (33 samples, 0.01%)</title><rect x="3.0512%" y="485" width="0.0124%" height="15" fill="rgb(241,131,45)" fg:x="8105" fg:w="33"/><text x="3.3012%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec (33 samples, 0.01%)</title><rect x="3.0512%" y="469" width="0.0124%" height="15" fill="rgb(249,31,29)" fg:x="8105" fg:w="33"/><text x="3.3012%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (54 samples, 0.02%)</title><rect x="4.3297%" y="469" width="0.0203%" height="15" fill="rgb(225,111,53)" fg:x="11501" fg:w="54"/><text x="4.5797%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (54 samples, 0.02%)</title><rect x="4.3297%" y="453" width="0.0203%" height="15" fill="rgb(238,160,17)" fg:x="11501" fg:w="54"/><text x="4.5797%" y="463.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (54 samples, 0.02%)</title><rect x="4.3297%" y="437" width="0.0203%" height="15" fill="rgb(214,148,48)" fg:x="11501" fg:w="54"/><text x="4.5797%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::intern_node_count (56 samples, 0.02%)</title><rect x="4.3500%" y="469" width="0.0211%" height="15" fill="rgb(232,36,49)" fg:x="11555" fg:w="56"/><text x="4.6000%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::update (3,623 samples, 1.36%)</title><rect x="3.0636%" y="485" width="1.3639%" height="15" fill="rgb(209,103,24)" fg:x="8138" fg:w="3623"/><text x="3.3136%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::SegmentTree::parent (150 samples, 0.06%)</title><rect x="4.3711%" y="469" width="0.0565%" height="15" fill="rgb(229,88,8)" fg:x="11611" fg:w="150"/><text x="4.6211%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (770 samples, 0.29%)</title><rect x="4.4276%" y="485" width="0.2899%" height="15" fill="rgb(213,181,19)" fg:x="11761" fg:w="770"/><text x="4.6776%" y="495.50"></text></g><g><title>ant_colony.exe`core::cmp::Ord::min (31 samples, 0.01%)</title><rect x="4.7193%" y="485" width="0.0117%" height="15" fill="rgb(254,191,54)" fg:x="12536" fg:w="31"/><text x="4.9693%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::update_adjset (8,380 samples, 3.15%)</title><rect x="1.5793%" y="501" width="3.1548%" height="15" fill="rgb(241,83,37)" fg:x="4195" fg:w="8380"/><text x="1.8293%" y="511.50">ant..</text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::update_tau (75 samples, 0.03%)</title><rect x="4.7340%" y="501" width="0.0282%" height="15" fill="rgb(233,36,39)" fg:x="12575" fg:w="75"/><text x="4.9840%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::push (36 samples, 0.01%)</title><rect x="4.7626%" y="485" width="0.0136%" height="15" fill="rgb(226,3,54)" fg:x="12651" fg:w="36"/><text x="5.0126%" y="495.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::add_child (40 samples, 0.02%)</title><rect x="4.7622%" y="501" width="0.0151%" height="15" fill="rgb(245,192,40)" fg:x="12650" fg:w="40"/><text x="5.0122%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (145 samples, 0.05%)</title><rect x="5.0164%" y="485" width="0.0546%" height="15" fill="rgb(238,167,29)" fg:x="13325" fg:w="145"/><text x="5.2664%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (145 samples, 0.05%)</title><rect x="5.0164%" y="469" width="0.0546%" height="15" fill="rgb(232,182,51)" fg:x="13325" fg:w="145"/><text x="5.2664%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (145 samples, 0.05%)</title><rect x="5.0164%" y="453" width="0.0546%" height="15" fill="rgb(231,60,39)" fg:x="13325" fg:w="145"/><text x="5.2664%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (34 samples, 0.01%)</title><rect x="5.3232%" y="37" width="0.0128%" height="15" fill="rgb(208,69,12)" fg:x="14140" fg:w="34"/><text x="5.5732%" y="47.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (50 samples, 0.02%)</title><rect x="5.3205%" y="53" width="0.0188%" height="15" fill="rgb(235,93,37)" fg:x="14133" fg:w="50"/><text x="5.5705%" y="63.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (69 samples, 0.03%)</title><rect x="5.3179%" y="69" width="0.0260%" height="15" fill="rgb(213,116,39)" fg:x="14126" fg:w="69"/><text x="5.5679%" y="79.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (86 samples, 0.03%)</title><rect x="5.3141%" y="85" width="0.0324%" height="15" fill="rgb(222,207,29)" fg:x="14116" fg:w="86"/><text x="5.5641%" y="95.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (126 samples, 0.05%)</title><rect x="5.3096%" y="101" width="0.0474%" height="15" fill="rgb(206,96,30)" fg:x="14104" fg:w="126"/><text x="5.5596%" y="111.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (166 samples, 0.06%)</title><rect x="5.3040%" y="117" width="0.0625%" height="15" fill="rgb(218,138,4)" fg:x="14089" fg:w="166"/><text x="5.5540%" y="127.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (224 samples, 0.08%)</title><rect x="5.2980%" y="133" width="0.0843%" height="15" fill="rgb(250,191,14)" fg:x="14073" fg:w="224"/><text x="5.5480%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (28 samples, 0.01%)</title><rect x="5.3827%" y="133" width="0.0105%" height="15" fill="rgb(239,60,40)" fg:x="14298" fg:w="28"/><text x="5.6327%" y="143.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (298 samples, 0.11%)</title><rect x="5.2863%" y="149" width="0.1122%" height="15" fill="rgb(206,27,48)" fg:x="14042" fg:w="298"/><text x="5.5363%" y="159.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (371 samples, 0.14%)</title><rect x="5.2757%" y="165" width="0.1397%" height="15" fill="rgb(225,35,8)" fg:x="14014" fg:w="371"/><text x="5.5257%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (27 samples, 0.01%)</title><rect x="5.4158%" y="165" width="0.0102%" height="15" fill="rgb(250,213,24)" fg:x="14386" fg:w="27"/><text x="5.6658%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (456 samples, 0.17%)</title><rect x="5.2663%" y="181" width="0.1717%" height="15" fill="rgb(247,123,22)" fg:x="13989" fg:w="456"/><text x="5.5163%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (34 samples, 0.01%)</title><rect x="5.4387%" y="181" width="0.0128%" height="15" fill="rgb(231,138,38)" fg:x="14447" fg:w="34"/><text x="5.6887%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (578 samples, 0.22%)</title><rect x="5.2471%" y="197" width="0.2176%" height="15" fill="rgb(231,145,46)" fg:x="13938" fg:w="578"/><text x="5.4971%" y="207.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (27 samples, 0.01%)</title><rect x="5.4546%" y="181" width="0.0102%" height="15" fill="rgb(251,118,11)" fg:x="14489" fg:w="27"/><text x="5.7046%" y="191.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (27 samples, 0.01%)</title><rect x="5.4546%" y="165" width="0.0102%" height="15" fill="rgb(217,147,25)" fg:x="14489" fg:w="27"/><text x="5.7046%" y="175.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (38 samples, 0.01%)</title><rect x="5.4655%" y="197" width="0.0143%" height="15" fill="rgb(247,81,37)" fg:x="14518" fg:w="38"/><text x="5.7155%" y="207.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (677 samples, 0.25%)</title><rect x="5.2373%" y="213" width="0.2549%" height="15" fill="rgb(209,12,38)" fg:x="13912" fg:w="677"/><text x="5.4873%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (44 samples, 0.02%)</title><rect x="5.4930%" y="213" width="0.0166%" height="15" fill="rgb(227,1,9)" fg:x="14591" fg:w="44"/><text x="5.7430%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (798 samples, 0.30%)</title><rect x="5.2208%" y="229" width="0.3004%" height="15" fill="rgb(248,47,43)" fg:x="13868" fg:w="798"/><text x="5.4708%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (32 samples, 0.01%)</title><rect x="5.5223%" y="229" width="0.0120%" height="15" fill="rgb(221,10,30)" fg:x="14669" fg:w="32"/><text x="5.7723%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (923 samples, 0.35%)</title><rect x="5.2031%" y="245" width="0.3475%" height="15" fill="rgb(210,229,1)" fg:x="13821" fg:w="923"/><text x="5.4531%" y="255.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (32 samples, 0.01%)</title><rect x="5.5385%" y="229" width="0.0120%" height="15" fill="rgb(222,148,37)" fg:x="14712" fg:w="32"/><text x="5.7885%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (32 samples, 0.01%)</title><rect x="5.5385%" y="213" width="0.0120%" height="15" fill="rgb(234,67,33)" fg:x="14712" fg:w="32"/><text x="5.7885%" y="223.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (38 samples, 0.01%)</title><rect x="5.5513%" y="245" width="0.0143%" height="15" fill="rgb(247,98,35)" fg:x="14746" fg:w="38"/><text x="5.8013%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,060 samples, 0.40%)</title><rect x="5.1831%" y="261" width="0.3990%" height="15" fill="rgb(247,138,52)" fg:x="13768" fg:w="1060"/><text x="5.4331%" y="271.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;isize&gt; &gt;::unwrap(enum2$&lt;core::option::Option (33 samples, 0.01%)</title><rect x="5.5698%" y="245" width="0.0124%" height="15" fill="rgb(213,79,30)" fg:x="14795" fg:w="33"/><text x="5.8198%" y="255.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::Uf::find (32 samples, 0.01%)</title><rect x="5.5701%" y="229" width="0.0120%" height="15" fill="rgb(246,177,23)" fg:x="14796" fg:w="32"/><text x="5.8201%" y="239.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (30 samples, 0.01%)</title><rect x="5.5837%" y="261" width="0.0113%" height="15" fill="rgb(230,62,27)" fg:x="14832" fg:w="30"/><text x="5.8337%" y="271.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,157 samples, 0.44%)</title><rect x="5.1684%" y="277" width="0.4356%" height="15" fill="rgb(216,154,8)" fg:x="13729" fg:w="1157"/><text x="5.4184%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (27 samples, 0.01%)</title><rect x="5.6051%" y="277" width="0.0102%" height="15" fill="rgb(244,35,45)" fg:x="14889" fg:w="27"/><text x="5.8551%" y="287.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,274 samples, 0.48%)</title><rect x="5.1462%" y="293" width="0.4796%" height="15" fill="rgb(251,115,12)" fg:x="13670" fg:w="1274"/><text x="5.3962%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (29 samples, 0.01%)</title><rect x="5.6262%" y="293" width="0.0109%" height="15" fill="rgb(240,54,50)" fg:x="14945" fg:w="29"/><text x="5.8762%" y="303.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,372 samples, 0.52%)</title><rect x="5.1308%" y="309" width="0.5165%" height="15" fill="rgb(233,84,52)" fg:x="13629" fg:w="1372"/><text x="5.3808%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (33 samples, 0.01%)</title><rect x="5.6477%" y="309" width="0.0124%" height="15" fill="rgb(207,117,47)" fg:x="15002" fg:w="33"/><text x="5.8977%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,485 samples, 0.56%)</title><rect x="5.1112%" y="325" width="0.5590%" height="15" fill="rgb(249,43,39)" fg:x="13577" fg:w="1485"/><text x="5.3612%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (28 samples, 0.01%)</title><rect x="5.6706%" y="325" width="0.0105%" height="15" fill="rgb(209,38,44)" fg:x="15063" fg:w="28"/><text x="5.9206%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,575 samples, 0.59%)</title><rect x="5.0992%" y="341" width="0.5929%" height="15" fill="rgb(236,212,23)" fg:x="13545" fg:w="1575"/><text x="5.3492%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,653 samples, 0.62%)</title><rect x="5.0868%" y="357" width="0.6223%" height="15" fill="rgb(242,79,21)" fg:x="13512" fg:w="1653"/><text x="5.3368%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,696 samples, 0.64%)</title><rect x="5.0804%" y="373" width="0.6385%" height="15" fill="rgb(211,96,35)" fg:x="13495" fg:w="1696"/><text x="5.3304%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,735 samples, 0.65%)</title><rect x="5.0732%" y="389" width="0.6532%" height="15" fill="rgb(253,215,40)" fg:x="13476" fg:w="1735"/><text x="5.3232%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,744 samples, 0.66%)</title><rect x="5.0721%" y="405" width="0.6565%" height="15" fill="rgb(211,81,21)" fg:x="13473" fg:w="1744"/><text x="5.3221%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,748 samples, 0.66%)</title><rect x="5.0717%" y="421" width="0.6581%" height="15" fill="rgb(208,190,38)" fg:x="13472" fg:w="1748"/><text x="5.3217%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;array$ (1,752 samples, 0.66%)</title><rect x="5.0709%" y="485" width="0.6596%" height="15" fill="rgb(235,213,38)" fg:x="13470" fg:w="1752"/><text x="5.3209%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;array$ (1,752 samples, 0.66%)</title><rect x="5.0709%" y="469" width="0.6596%" height="15" fill="rgb(237,122,38)" fg:x="13470" fg:w="1752"/><text x="5.3209%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_slice (1,752 samples, 0.66%)</title><rect x="5.0709%" y="453" width="0.6596%" height="15" fill="rgb(244,218,35)" fg:x="13470" fg:w="1752"/><text x="5.3209%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::TarjanSolver::_launch_from (1,752 samples, 0.66%)</title><rect x="5.0709%" y="437" width="0.6596%" height="15" fill="rgb(240,68,47)" fg:x="13470" fg:w="1752"/><text x="5.3209%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::disto_approx(ant_colony::graph::Graph*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, ant_colony::aco2::TarjanSolver*, alloc::vec::Vec (2,540 samples, 0.96%)</title><rect x="4.7773%" y="501" width="0.9562%" height="15" fill="rgb(210,16,53)" fg:x="12690" fg:w="2540"/><text x="5.0273%" y="511.50"></text></g><g><title>`0x7FF8903E2769 (42 samples, 0.02%)</title><rect x="5.7516%" y="405" width="0.0158%" height="15" fill="rgb(235,124,12)" fg:x="15278" fg:w="42"/><text x="6.0016%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (72 samples, 0.03%)</title><rect x="6.0373%" y="389" width="0.0271%" height="15" fill="rgb(224,169,11)" fg:x="16037" fg:w="72"/><text x="6.2873%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (72 samples, 0.03%)</title><rect x="6.0373%" y="373" width="0.0271%" height="15" fill="rgb(250,166,2)" fg:x="16037" fg:w="72"/><text x="6.2873%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (72 samples, 0.03%)</title><rect x="6.0373%" y="357" width="0.0271%" height="15" fill="rgb(242,216,29)" fg:x="16037" fg:w="72"/><text x="6.2873%" y="367.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (488 samples, 0.18%)</title><rect x="6.0671%" y="389" width="0.1837%" height="15" fill="rgb(230,116,27)" fg:x="16116" fg:w="488"/><text x="6.3171%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,319 samples, 0.50%)</title><rect x="5.7700%" y="405" width="0.4966%" height="15" fill="rgb(228,99,48)" fg:x="15327" fg:w="1319"/><text x="6.0200%" y="415.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (42 samples, 0.02%)</title><rect x="6.2508%" y="389" width="0.0158%" height="15" fill="rgb(253,11,6)" fg:x="16604" fg:w="42"/><text x="6.5008%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (42 samples, 0.02%)</title><rect x="6.2508%" y="373" width="0.0158%" height="15" fill="rgb(247,143,39)" fg:x="16604" fg:w="42"/><text x="6.5008%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (1,369 samples, 0.52%)</title><rect x="5.7516%" y="421" width="0.5154%" height="15" fill="rgb(236,97,10)" fg:x="15278" fg:w="1369"/><text x="6.0016%" y="431.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (1,496 samples, 0.56%)</title><rect x="5.7358%" y="437" width="0.5632%" height="15" fill="rgb(233,208,19)" fg:x="15236" fg:w="1496"/><text x="5.9858%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (85 samples, 0.03%)</title><rect x="6.2670%" y="421" width="0.0320%" height="15" fill="rgb(216,164,2)" fg:x="16647" fg:w="85"/><text x="6.5170%" y="431.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (85 samples, 0.03%)</title><rect x="6.2670%" y="405" width="0.0320%" height="15" fill="rgb(220,129,5)" fg:x="16647" fg:w="85"/><text x="6.5170%" y="415.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (85 samples, 0.03%)</title><rect x="6.2670%" y="389" width="0.0320%" height="15" fill="rgb(242,17,10)" fg:x="16647" fg:w="85"/><text x="6.5170%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (117 samples, 0.04%)</title><rect x="6.2990%" y="421" width="0.0440%" height="15" fill="rgb(242,107,0)" fg:x="16732" fg:w="117"/><text x="6.5490%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (117 samples, 0.04%)</title><rect x="6.2990%" y="405" width="0.0440%" height="15" fill="rgb(251,28,31)" fg:x="16732" fg:w="117"/><text x="6.5490%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (117 samples, 0.04%)</title><rect x="6.2990%" y="389" width="0.0440%" height="15" fill="rgb(233,223,10)" fg:x="16732" fg:w="117"/><text x="6.5490%" y="399.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (117 samples, 0.04%)</title><rect x="6.2990%" y="373" width="0.0440%" height="15" fill="rgb(215,21,27)" fg:x="16732" fg:w="117"/><text x="6.5490%" y="383.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (117 samples, 0.04%)</title><rect x="6.2990%" y="357" width="0.0440%" height="15" fill="rgb(232,23,21)" fg:x="16732" fg:w="117"/><text x="6.5490%" y="367.50"></text></g><g><title>`0x7FF8903E2769 (117 samples, 0.04%)</title><rect x="6.2990%" y="341" width="0.0440%" height="15" fill="rgb(244,5,23)" fg:x="16732" fg:w="117"/><text x="6.5490%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (80 samples, 0.03%)</title><rect x="6.5892%" y="341" width="0.0301%" height="15" fill="rgb(226,81,46)" fg:x="17503" fg:w="80"/><text x="6.8392%" y="351.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (80 samples, 0.03%)</title><rect x="6.5892%" y="325" width="0.0301%" height="15" fill="rgb(247,70,30)" fg:x="17503" fg:w="80"/><text x="6.8392%" y="335.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (80 samples, 0.03%)</title><rect x="6.5892%" y="309" width="0.0301%" height="15" fill="rgb(212,68,19)" fg:x="17503" fg:w="80"/><text x="6.8392%" y="319.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (558 samples, 0.21%)</title><rect x="6.6231%" y="341" width="0.2101%" height="15" fill="rgb(240,187,13)" fg:x="17593" fg:w="558"/><text x="6.8731%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,341 samples, 0.50%)</title><rect x="6.3449%" y="357" width="0.5048%" height="15" fill="rgb(223,113,26)" fg:x="16854" fg:w="1341"/><text x="6.5949%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (44 samples, 0.02%)</title><rect x="6.8332%" y="341" width="0.0166%" height="15" fill="rgb(206,192,2)" fg:x="18151" fg:w="44"/><text x="7.0832%" y="351.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (44 samples, 0.02%)</title><rect x="6.8332%" y="325" width="0.0166%" height="15" fill="rgb(241,108,4)" fg:x="18151" fg:w="44"/><text x="7.0832%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (1,465 samples, 0.55%)</title><rect x="6.2990%" y="437" width="0.5515%" height="15" fill="rgb(247,173,49)" fg:x="16732" fg:w="1465"/><text x="6.5490%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (1,348 samples, 0.51%)</title><rect x="6.3430%" y="421" width="0.5075%" height="15" fill="rgb(224,114,35)" fg:x="16849" fg:w="1348"/><text x="6.5930%" y="431.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1,348 samples, 0.51%)</title><rect x="6.3430%" y="405" width="0.5075%" height="15" fill="rgb(245,159,27)" fg:x="16849" fg:w="1348"/><text x="6.5930%" y="415.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (1,348 samples, 0.51%)</title><rect x="6.3430%" y="389" width="0.5075%" height="15" fill="rgb(245,172,44)" fg:x="16849" fg:w="1348"/><text x="6.5930%" y="399.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (1,348 samples, 0.51%)</title><rect x="6.3430%" y="373" width="0.5075%" height="15" fill="rgb(236,23,11)" fg:x="16849" fg:w="1348"/><text x="6.5930%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (30 samples, 0.01%)</title><rect x="6.8505%" y="421" width="0.0113%" height="15" fill="rgb(205,117,38)" fg:x="18197" fg:w="30"/><text x="7.1005%" y="431.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::to_graph (31 samples, 0.01%)</title><rect x="6.8505%" y="437" width="0.0117%" height="15" fill="rgb(237,72,25)" fg:x="18197" fg:w="31"/><text x="7.1005%" y="447.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::RootedTree::distorsion(alloc::vec::Vec (2,994 samples, 1.13%)</title><rect x="5.7354%" y="453" width="1.1271%" height="15" fill="rgb(244,70,9)" fg:x="15235" fg:w="2994"/><text x="5.9854%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::launch (17,510 samples, 6.59%)</title><rect x="0.2711%" y="517" width="6.5919%" height="15" fill="rgb(217,125,39)" fg:x="720" fg:w="17510"/><text x="0.5211%" y="527.50">ant_colon..</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (2,996 samples, 1.13%)</title><rect x="5.7350%" y="501" width="1.1279%" height="15" fill="rgb(235,36,10)" fg:x="15234" fg:w="2996"/><text x="5.9850%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec (2,995 samples, 1.13%)</title><rect x="5.7354%" y="485" width="1.1275%" height="15" fill="rgb(251,123,47)" fg:x="15235" fg:w="2995"/><text x="5.9854%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::vec::Vec (2,995 samples, 1.13%)</title><rect x="5.7354%" y="469" width="1.1275%" height="15" fill="rgb(221,13,13)" fg:x="15235" fg:w="2995"/><text x="5.9854%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;usize,u32&gt;,alloc::alloc::Global&gt;::grow_one&lt;petgraph::graph_impl::Node&lt;usize,u32&gt;,alloc::alloc::Global&gt; (40 samples, 0.02%)</title><rect x="7.0218%" y="485" width="0.0151%" height="15" fill="rgb(238,131,9)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (40 samples, 0.02%)</title><rect x="7.0218%" y="469" width="0.0151%" height="15" fill="rgb(211,50,8)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (40 samples, 0.02%)</title><rect x="7.0218%" y="453" width="0.0151%" height="15" fill="rgb(245,182,24)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="463.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (40 samples, 0.02%)</title><rect x="7.0218%" y="437" width="0.0151%" height="15" fill="rgb(242,14,37)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (40 samples, 0.02%)</title><rect x="7.0218%" y="421" width="0.0151%" height="15" fill="rgb(246,228,12)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (40 samples, 0.02%)</title><rect x="7.0218%" y="405" width="0.0151%" height="15" fill="rgb(213,55,15)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (40 samples, 0.02%)</title><rect x="7.0218%" y="389" width="0.0151%" height="15" fill="rgb(209,9,3)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="399.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (40 samples, 0.02%)</title><rect x="7.0218%" y="373" width="0.0151%" height="15" fill="rgb(230,59,30)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="383.50"></text></g><g><title>`0x7FF90A6A8F8D (40 samples, 0.02%)</title><rect x="7.0218%" y="357" width="0.0151%" height="15" fill="rgb(209,121,21)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="367.50"></text></g><g><title>`0x7FF90A6A9235 (40 samples, 0.02%)</title><rect x="7.0218%" y="341" width="0.0151%" height="15" fill="rgb(220,109,13)" fg:x="18652" fg:w="40"/><text x="7.2718%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (58 samples, 0.02%)</title><rect x="7.0210%" y="501" width="0.0218%" height="15" fill="rgb(232,18,1)" fg:x="18650" fg:w="58"/><text x="7.2710%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::gain_of_edge (3,418 samples, 1.29%)</title><rect x="11.7403%" y="485" width="1.2867%" height="15" fill="rgb(215,41,42)" fg:x="31186" fg:w="3418"/><text x="11.9903%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (774 samples, 0.29%)</title><rect x="12.7357%" y="469" width="0.2914%" height="15" fill="rgb(224,123,36)" fg:x="33830" fg:w="774"/><text x="12.9857%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (774 samples, 0.29%)</title><rect x="12.7357%" y="453" width="0.2914%" height="15" fill="rgb(240,125,3)" fg:x="33830" fg:w="774"/><text x="12.9857%" y="463.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (774 samples, 0.29%)</title><rect x="12.7357%" y="437" width="0.2914%" height="15" fill="rgb(205,98,50)" fg:x="33830" fg:w="774"/><text x="12.9857%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (682 samples, 0.26%)</title><rect x="13.0271%" y="453" width="0.2567%" height="15" fill="rgb(205,185,37)" fg:x="34604" fg:w="682"/><text x="13.2771%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;array$ (1,591 samples, 0.60%)</title><rect x="13.0271%" y="485" width="0.5990%" height="15" fill="rgb(238,207,15)" fg:x="34604" fg:w="1591"/><text x="13.2771%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (1,591 samples, 0.60%)</title><rect x="13.0271%" y="469" width="0.5990%" height="15" fill="rgb(213,199,42)" fg:x="34604" fg:w="1591"/><text x="13.2771%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (909 samples, 0.34%)</title><rect x="13.2838%" y="453" width="0.3422%" height="15" fill="rgb(235,201,11)" fg:x="35286" fg:w="909"/><text x="13.5338%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (85 samples, 0.03%)</title><rect x="13.6260%" y="469" width="0.0320%" height="15" fill="rgb(207,46,11)" fg:x="36195" fg:w="85"/><text x="13.8760%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::get_chosen_edge (43,375 samples, 16.33%)</title><rect x="7.0455%" y="501" width="16.3290%" height="15" fill="rgb(241,35,35)" fg:x="18715" fg:w="43375"/><text x="7.2955%" y="511.50">ant_colony.exe`ant_colony..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (25,895 samples, 9.75%)</title><rect x="13.6260%" y="485" width="9.7485%" height="15" fill="rgb(243,32,47)" fg:x="36195" fg:w="25895"/><text x="13.8760%" y="495.50">ant_colony.exe..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (25,810 samples, 9.72%)</title><rect x="13.6580%" y="469" width="9.7165%" height="15" fill="rgb(247,202,23)" fg:x="36280" fg:w="25810"/><text x="13.9080%" y="479.50">ant_colony.exe..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (58 samples, 0.02%)</title><rect x="23.3877%" y="485" width="0.0218%" height="15" fill="rgb(219,102,11)" fg:x="62125" fg:w="58"/><text x="23.6377%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::read (37 samples, 0.01%)</title><rect x="23.3956%" y="469" width="0.0139%" height="15" fill="rgb(243,110,44)" fg:x="62146" fg:w="37"/><text x="23.6456%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::set_len (95 samples, 0.04%)</title><rect x="29.1826%" y="453" width="0.0358%" height="15" fill="rgb(222,74,54)" fg:x="77518" fg:w="95"/><text x="29.4326%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (480 samples, 0.18%)</title><rect x="29.1013%" y="469" width="0.1807%" height="15" fill="rgb(216,99,12)" fg:x="77302" fg:w="480"/><text x="29.3513%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (169 samples, 0.06%)</title><rect x="29.2184%" y="453" width="0.0636%" height="15" fill="rgb(226,22,26)" fg:x="77613" fg:w="169"/><text x="29.4684%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges1 (17,568 samples, 6.61%)</title><rect x="23.4178%" y="485" width="6.6137%" height="15" fill="rgb(217,163,10)" fg:x="62205" fg:w="17568"/><text x="23.6678%" y="495.50">ant_colon..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;array$ (1,991 samples, 0.75%)</title><rect x="29.2820%" y="469" width="0.7495%" height="15" fill="rgb(213,25,53)" fg:x="77782" fg:w="1991"/><text x="29.5320%" y="479.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;array$ (1,991 samples, 0.75%)</title><rect x="29.2820%" y="453" width="0.7495%" height="15" fill="rgb(252,105,26)" fg:x="77782" fg:w="1991"/><text x="29.5320%" y="463.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;array$ (1,991 samples, 0.75%)</title><rect x="29.2820%" y="437" width="0.7495%" height="15" fill="rgb(220,39,43)" fg:x="77782" fg:w="1991"/><text x="29.5320%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (140 samples, 0.05%)</title><rect x="30.0722%" y="469" width="0.0527%" height="15" fill="rgb(229,68,48)" fg:x="79881" fg:w="140"/><text x="30.3222%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (69 samples, 0.03%)</title><rect x="30.1249%" y="437" width="0.0260%" height="15" fill="rgb(252,8,32)" fg:x="80021" fg:w="69"/><text x="30.3749%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (72 samples, 0.03%)</title><rect x="30.1249%" y="469" width="0.0271%" height="15" fill="rgb(223,20,43)" fg:x="80021" fg:w="72"/><text x="30.3749%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (72 samples, 0.03%)</title><rect x="30.1249%" y="453" width="0.0271%" height="15" fill="rgb(229,81,49)" fg:x="80021" fg:w="72"/><text x="30.3749%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (949 samples, 0.36%)</title><rect x="30.1520%" y="469" width="0.3573%" height="15" fill="rgb(236,28,36)" fg:x="80093" fg:w="949"/><text x="30.4020%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges (19,083 samples, 7.18%)</title><rect x="23.3753%" y="501" width="7.1840%" height="15" fill="rgb(249,185,26)" fg:x="62092" fg:w="19083"/><text x="23.6253%" y="511.50">ant_colony..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges2 (1,402 samples, 0.53%)</title><rect x="30.0315%" y="485" width="0.5278%" height="15" fill="rgb(249,174,33)" fg:x="79773" fg:w="1402"/><text x="30.2815%" y="495.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (133 samples, 0.05%)</title><rect x="30.5092%" y="469" width="0.0501%" height="15" fill="rgb(233,201,37)" fg:x="81042" fg:w="133"/><text x="30.7592%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (130 samples, 0.05%)</title><rect x="30.5104%" y="453" width="0.0489%" height="15" fill="rgb(221,78,26)" fg:x="81045" fg:w="130"/><text x="30.7604%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (550 samples, 0.21%)</title><rect x="30.5593%" y="501" width="0.2071%" height="15" fill="rgb(250,127,30)" fg:x="81175" fg:w="550"/><text x="30.8093%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::clear (58 samples, 0.02%)</title><rect x="30.7664%" y="501" width="0.0218%" height="15" fill="rgb(230,49,44)" fg:x="81725" fg:w="58"/><text x="31.0164%" y="511.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (31 samples, 0.01%)</title><rect x="30.7765%" y="485" width="0.0117%" height="15" fill="rgb(229,67,23)" fg:x="81752" fg:w="31"/><text x="31.0265%" y="495.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (31 samples, 0.01%)</title><rect x="30.7765%" y="469" width="0.0117%" height="15" fill="rgb(249,83,47)" fg:x="81752" fg:w="31"/><text x="31.0265%" y="479.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (31 samples, 0.01%)</title><rect x="30.7765%" y="453" width="0.0117%" height="15" fill="rgb(215,43,3)" fg:x="81752" fg:w="31"/><text x="31.0265%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx2(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (760 samples, 0.29%)</title><rect x="30.7882%" y="485" width="0.2861%" height="15" fill="rgb(238,154,13)" fg:x="81783" fg:w="760"/><text x="31.0382%" y="495.50"></text></g><g><title>`0x7FF8903E2769 (4,335 samples, 1.63%)</title><rect x="31.0747%" y="469" width="1.6320%" height="15" fill="rgb(219,56,2)" fg:x="82544" fg:w="4335"/><text x="31.3247%" y="479.50"></text></g><g><title>`0x7FF90A6F53FD (149 samples, 0.06%)</title><rect x="32.7130%" y="405" width="0.0561%" height="15" fill="rgb(233,0,4)" fg:x="86896" fg:w="149"/><text x="32.9630%" y="415.50"></text></g><g><title>`0x7FF90A6F54B4 (75 samples, 0.03%)</title><rect x="32.7857%" y="405" width="0.0282%" height="15" fill="rgb(235,30,7)" fg:x="87089" fg:w="75"/><text x="33.0357%" y="415.50"></text></g><g><title>`0x7FF90A6F54B8 (34 samples, 0.01%)</title><rect x="32.8139%" y="405" width="0.0128%" height="15" fill="rgb(250,79,13)" fg:x="87164" fg:w="34"/><text x="33.0639%" y="415.50"></text></g><g><title>`0x7FF90A7C81EC (71 samples, 0.03%)</title><rect x="64.2941%" y="261" width="0.0267%" height="15" fill="rgb(211,146,34)" fg:x="170785" fg:w="71"/><text x="64.5441%" y="271.50"></text></g><g><title>`0x7FF90A67002D (82 samples, 0.03%)</title><rect x="64.2926%" y="277" width="0.0309%" height="15" fill="rgb(228,22,38)" fg:x="170781" fg:w="82"/><text x="64.5426%" y="287.50"></text></g><g><title>`0x7FF90A66F2A4 (193 samples, 0.07%)</title><rect x="64.2527%" y="293" width="0.0727%" height="15" fill="rgb(235,168,5)" fg:x="170675" fg:w="193"/><text x="64.5027%" y="303.50"></text></g><g><title>`0x7FF90A66F164 (210 samples, 0.08%)</title><rect x="64.2478%" y="309" width="0.0791%" height="15" fill="rgb(221,155,16)" fg:x="170662" fg:w="210"/><text x="64.4978%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (223 samples, 0.08%)</title><rect x="64.2451%" y="389" width="0.0840%" height="15" fill="rgb(215,215,53)" fg:x="170655" fg:w="223"/><text x="64.4951%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (223 samples, 0.08%)</title><rect x="64.2451%" y="373" width="0.0840%" height="15" fill="rgb(223,4,10)" fg:x="170655" fg:w="223"/><text x="64.4951%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (223 samples, 0.08%)</title><rect x="64.2451%" y="357" width="0.0840%" height="15" fill="rgb(234,103,6)" fg:x="170655" fg:w="223"/><text x="64.4951%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (223 samples, 0.08%)</title><rect x="64.2451%" y="341" width="0.0840%" height="15" fill="rgb(227,97,0)" fg:x="170655" fg:w="223"/><text x="64.4951%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (223 samples, 0.08%)</title><rect x="64.2451%" y="325" width="0.0840%" height="15" fill="rgb(234,150,53)" fg:x="170655" fg:w="223"/><text x="64.4951%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (13,842 samples, 5.21%)</title><rect x="64.3291%" y="389" width="5.2110%" height="15" fill="rgb(228,201,54)" fg:x="170878" fg:w="13842"/><text x="64.5791%" y="399.50">ant_co..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (13,842 samples, 5.21%)</title><rect x="64.3291%" y="373" width="5.2110%" height="15" fill="rgb(222,22,37)" fg:x="170878" fg:w="13842"/><text x="64.5791%" y="383.50">ant_co..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (13,842 samples, 5.21%)</title><rect x="64.3291%" y="357" width="5.2110%" height="15" fill="rgb(237,53,32)" fg:x="170878" fg:w="13842"/><text x="64.5791%" y="367.50">ant_co..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (1,519 samples, 0.57%)</title><rect x="69.5401%" y="389" width="0.5718%" height="15" fill="rgb(233,25,53)" fg:x="184720" fg:w="1519"/><text x="69.7901%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (1,519 samples, 0.57%)</title><rect x="69.5401%" y="373" width="0.5718%" height="15" fill="rgb(210,40,34)" fg:x="184720" fg:w="1519"/><text x="69.7901%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (1,519 samples, 0.57%)</title><rect x="69.5401%" y="357" width="0.5718%" height="15" fill="rgb(241,220,44)" fg:x="184720" fg:w="1519"/><text x="69.7901%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (1,305 samples, 0.49%)</title><rect x="93.2512%" y="373" width="0.4913%" height="15" fill="rgb(235,28,35)" fg:x="247704" fg:w="1305"/><text x="93.5012%" y="383.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (1,305 samples, 0.49%)</title><rect x="93.2512%" y="357" width="0.4913%" height="15" fill="rgb(210,56,17)" fg:x="247704" fg:w="1305"/><text x="93.5012%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (1,305 samples, 0.49%)</title><rect x="93.2512%" y="341" width="0.4913%" height="15" fill="rgb(224,130,29)" fg:x="247704" fg:w="1305"/><text x="93.5012%" y="351.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (63,689 samples, 23.98%)</title><rect x="70.1119%" y="389" width="23.9765%" height="15" fill="rgb(235,212,8)" fg:x="186239" fg:w="63689"/><text x="70.3619%" y="399.50">ant_colony.exe`ant_colony::graph::Grap..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (919 samples, 0.35%)</title><rect x="93.7424%" y="373" width="0.3460%" height="15" fill="rgb(223,33,50)" fg:x="249009" fg:w="919"/><text x="93.9924%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (589 samples, 0.22%)</title><rect x="93.8667%" y="357" width="0.2217%" height="15" fill="rgb(219,149,13)" fg:x="249339" fg:w="589"/><text x="94.1167%" y="367.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (589 samples, 0.22%)</title><rect x="93.8667%" y="341" width="0.2217%" height="15" fill="rgb(250,156,29)" fg:x="249339" fg:w="589"/><text x="94.1167%" y="351.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (589 samples, 0.22%)</title><rect x="93.8667%" y="325" width="0.2217%" height="15" fill="rgb(216,193,19)" fg:x="249339" fg:w="589"/><text x="94.1167%" y="335.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (167,942 samples, 63.22%)</title><rect x="32.8448%" y="405" width="63.2238%" height="15" fill="rgb(216,135,14)" fg:x="87246" fg:w="167942"/><text x="33.0948%" y="415.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (5,257 samples, 1.98%)</title><rect x="94.0895%" y="389" width="1.9791%" height="15" fill="rgb(241,47,5)" fg:x="249931" fg:w="5257"/><text x="94.3395%" y="399.50">a..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (5,257 samples, 1.98%)</title><rect x="94.0895%" y="373" width="1.9791%" height="15" fill="rgb(233,42,35)" fg:x="249931" fg:w="5257"/><text x="94.3395%" y="383.50">a..</text></g><g><title>`0x7FF909E53F99 (54 samples, 0.02%)</title><rect x="96.0829%" y="373" width="0.0203%" height="15" fill="rgb(231,13,6)" fg:x="255226" fg:w="54"/><text x="96.3329%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (173,604 samples, 65.36%)</title><rect x="30.7882%" y="501" width="65.3553%" height="15" fill="rgb(207,181,40)" fg:x="81783" fg:w="173604"/><text x="31.0382%" y="511.50">ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (172,844 samples, 65.07%)</title><rect x="31.0743%" y="485" width="65.0692%" height="15" fill="rgb(254,173,49)" fg:x="82543" fg:w="172844"/><text x="31.3243%" y="495.50">ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (168,504 samples, 63.44%)</title><rect x="32.7082%" y="469" width="63.4354%" height="15" fill="rgb(221,1,38)" fg:x="86883" fg:w="168504"/><text x="32.9582%" y="479.50">ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (168,504 samples, 63.44%)</title><rect x="32.7082%" y="453" width="63.4354%" height="15" fill="rgb(206,124,46)" fg:x="86883" fg:w="168504"/><text x="32.9582%" y="463.50">ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (168,502 samples, 63.43%)</title><rect x="32.7089%" y="437" width="63.4346%" height="15" fill="rgb(249,21,11)" fg:x="86885" fg:w="168502"/><text x="32.9589%" y="447.50">ant_colony.exe`core::iter::range::impl$43::forward_unchecked</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (168,502 samples, 63.43%)</title><rect x="32.7089%" y="421" width="63.4346%" height="15" fill="rgb(222,201,40)" fg:x="86885" fg:w="168502"/><text x="32.9589%" y="431.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (199 samples, 0.07%)</title><rect x="96.0686%" y="405" width="0.0749%" height="15" fill="rgb(235,61,29)" fg:x="255188" fg:w="199"/><text x="96.3186%" y="415.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (171 samples, 0.06%)</title><rect x="96.0791%" y="389" width="0.0644%" height="15" fill="rgb(219,207,3)" fg:x="255216" fg:w="171"/><text x="96.3291%" y="399.50"></text></g><g><title>`0x7FF909E53F9D (107 samples, 0.04%)</title><rect x="96.1032%" y="373" width="0.0403%" height="15" fill="rgb(222,56,46)" fg:x="255280" fg:w="107"/><text x="96.3532%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (116 samples, 0.04%)</title><rect x="96.1435%" y="453" width="0.0437%" height="15" fill="rgb(239,76,54)" fg:x="255387" fg:w="116"/><text x="96.3935%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (116 samples, 0.04%)</title><rect x="96.1435%" y="437" width="0.0437%" height="15" fill="rgb(231,124,27)" fg:x="255387" fg:w="116"/><text x="96.3935%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (116 samples, 0.04%)</title><rect x="96.1435%" y="421" width="0.0437%" height="15" fill="rgb(249,195,6)" fg:x="255387" fg:w="116"/><text x="96.3935%" y="431.50"></text></g><g><title>`0x7FF8903E2769 (116 samples, 0.04%)</title><rect x="96.1435%" y="405" width="0.0437%" height="15" fill="rgb(237,174,47)" fg:x="255387" fg:w="116"/><text x="96.3935%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (117 samples, 0.04%)</title><rect x="96.1435%" y="485" width="0.0440%" height="15" fill="rgb(206,201,31)" fg:x="255387" fg:w="117"/><text x="96.3935%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (117 samples, 0.04%)</title><rect x="96.1435%" y="469" width="0.0440%" height="15" fill="rgb(231,57,52)" fg:x="255387" fg:w="117"/><text x="96.3935%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (129 samples, 0.05%)</title><rect x="96.5049%" y="405" width="0.0486%" height="15" fill="rgb(248,177,22)" fg:x="256347" fg:w="129"/><text x="96.7549%" y="415.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (129 samples, 0.05%)</title><rect x="96.5049%" y="389" width="0.0486%" height="15" fill="rgb(215,211,37)" fg:x="256347" fg:w="129"/><text x="96.7549%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (129 samples, 0.05%)</title><rect x="96.5049%" y="373" width="0.0486%" height="15" fill="rgb(241,128,51)" fg:x="256347" fg:w="129"/><text x="96.7549%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (579 samples, 0.22%)</title><rect x="96.5591%" y="405" width="0.2180%" height="15" fill="rgb(227,165,31)" fg:x="256491" fg:w="579"/><text x="96.8091%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,617 samples, 0.61%)</title><rect x="96.1902%" y="421" width="0.6087%" height="15" fill="rgb(228,167,24)" fg:x="255511" fg:w="1617"/><text x="96.4402%" y="431.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (58 samples, 0.02%)</title><rect x="96.7771%" y="405" width="0.0218%" height="15" fill="rgb(228,143,12)" fg:x="257070" fg:w="58"/><text x="97.0271%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (58 samples, 0.02%)</title><rect x="96.7771%" y="389" width="0.0218%" height="15" fill="rgb(249,149,8)" fg:x="257070" fg:w="58"/><text x="97.0271%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_dist_matrix (1,744 samples, 0.66%)</title><rect x="96.1435%" y="501" width="0.6565%" height="15" fill="rgb(243,35,44)" fg:x="255387" fg:w="1744"/><text x="96.3935%" y="511.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (1,627 samples, 0.61%)</title><rect x="96.1876%" y="485" width="0.6125%" height="15" fill="rgb(246,89,9)" fg:x="255504" fg:w="1627"/><text x="96.4376%" y="495.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1,627 samples, 0.61%)</title><rect x="96.1876%" y="469" width="0.6125%" height="15" fill="rgb(233,213,13)" fg:x="255504" fg:w="1627"/><text x="96.4376%" y="479.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (1,627 samples, 0.61%)</title><rect x="96.1876%" y="453" width="0.6125%" height="15" fill="rgb(233,141,41)" fg:x="255504" fg:w="1627"/><text x="96.4376%" y="463.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (1,627 samples, 0.61%)</title><rect x="96.1876%" y="437" width="0.6125%" height="15" fill="rgb(239,167,4)" fg:x="255504" fg:w="1627"/><text x="96.4376%" y="447.50"></text></g><g><title>`0x7FF8903E143E (46 samples, 0.02%)</title><rect x="96.8076%" y="437" width="0.0173%" height="15" fill="rgb(209,217,16)" fg:x="257151" fg:w="46"/><text x="97.0576%" y="447.50"></text></g><g><title>`0x7FF8903E1446 (140 samples, 0.05%)</title><rect x="96.8249%" y="437" width="0.0527%" height="15" fill="rgb(219,88,35)" fg:x="257197" fg:w="140"/><text x="97.0749%" y="447.50"></text></g><g><title>`0x7FF8903E145E (51 samples, 0.02%)</title><rect x="96.8795%" y="437" width="0.0192%" height="15" fill="rgb(220,193,23)" fg:x="257342" fg:w="51"/><text x="97.1295%" y="447.50"></text></g><g><title>`0x7FF8903E1466 (76 samples, 0.03%)</title><rect x="96.8987%" y="437" width="0.0286%" height="15" fill="rgb(230,90,52)" fg:x="257393" fg:w="76"/><text x="97.1487%" y="447.50"></text></g><g><title>`0x7FF8903E143E (228 samples, 0.09%)</title><rect x="96.9499%" y="405" width="0.0858%" height="15" fill="rgb(252,106,19)" fg:x="257529" fg:w="228"/><text x="97.1999%" y="415.50"></text></g><g><title>`0x7FF8903E1446 (118 samples, 0.04%)</title><rect x="97.0357%" y="405" width="0.0444%" height="15" fill="rgb(206,74,20)" fg:x="257757" fg:w="118"/><text x="97.2857%" y="415.50"></text></g><g><title>`0x7FF8903E1456 (48 samples, 0.02%)</title><rect x="97.0813%" y="405" width="0.0181%" height="15" fill="rgb(230,138,44)" fg:x="257878" fg:w="48"/><text x="97.3313%" y="415.50"></text></g><g><title>`0x7FF8903E145E (527 samples, 0.20%)</title><rect x="97.0994%" y="405" width="0.1984%" height="15" fill="rgb(235,182,43)" fg:x="257926" fg:w="527"/><text x="97.3494%" y="415.50"></text></g><g><title>`0x7FF8903E1466 (1,011 samples, 0.38%)</title><rect x="97.2978%" y="405" width="0.3806%" height="15" fill="rgb(242,16,51)" fg:x="258453" fg:w="1011"/><text x="97.5478%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::impl$5::clone (2,344 samples, 0.88%)</title><rect x="96.8053%" y="501" width="0.8824%" height="15" fill="rgb(248,9,4)" fg:x="257145" fg:w="2344"/><text x="97.0553%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (2,344 samples, 0.88%)</title><rect x="96.8053%" y="485" width="0.8824%" height="15" fill="rgb(210,31,22)" fg:x="257145" fg:w="2344"/><text x="97.0553%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2,344 samples, 0.88%)</title><rect x="96.8053%" y="469" width="0.8824%" height="15" fill="rgb(239,54,39)" fg:x="257145" fg:w="2344"/><text x="97.0553%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$ (2,344 samples, 0.88%)</title><rect x="96.8053%" y="453" width="0.8824%" height="15" fill="rgb(230,99,41)" fg:x="257145" fg:w="2344"/><text x="97.0553%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (2,013 samples, 0.76%)</title><rect x="96.9300%" y="437" width="0.7578%" height="15" fill="rgb(253,106,12)" fg:x="257476" fg:w="2013"/><text x="97.1800%" y="447.50"></text></g><g><title>ant_colony.exe`core::intrinsics::copy_nonoverlapping (2,013 samples, 0.76%)</title><rect x="96.9300%" y="421" width="0.7578%" height="15" fill="rgb(213,46,41)" fg:x="257476" fg:w="2013"/><text x="97.1800%" y="431.50"></text></g><g><title>ant_colony.exe`core::f64::impl$0::clamp (69 samples, 0.03%)</title><rect x="97.6878%" y="501" width="0.0260%" height="15" fill="rgb(215,133,35)" fg:x="259489" fg:w="69"/><text x="97.9378%" y="511.50"></text></g><g><title>`0x7FF8903E2769 (42 samples, 0.02%)</title><rect x="97.7457%" y="421" width="0.0158%" height="15" fill="rgb(213,28,5)" fg:x="259643" fg:w="42"/><text x="97.9957%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (127 samples, 0.05%)</title><rect x="98.0571%" y="405" width="0.0478%" height="15" fill="rgb(215,77,49)" fg:x="260470" fg:w="127"/><text x="98.3071%" y="415.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (127 samples, 0.05%)</title><rect x="98.0571%" y="389" width="0.0478%" height="15" fill="rgb(248,100,22)" fg:x="260470" fg:w="127"/><text x="98.3071%" y="399.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (127 samples, 0.05%)</title><rect x="98.0571%" y="373" width="0.0478%" height="15" fill="rgb(208,67,9)" fg:x="260470" fg:w="127"/><text x="98.3071%" y="383.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (570 samples, 0.21%)</title><rect x="98.1120%" y="405" width="0.2146%" height="15" fill="rgb(219,133,21)" fg:x="260616" fg:w="570"/><text x="98.3620%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (1,553 samples, 0.58%)</title><rect x="97.7638%" y="421" width="0.5846%" height="15" fill="rgb(246,46,29)" fg:x="259691" fg:w="1553"/><text x="98.0138%" y="431.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (58 samples, 0.02%)</title><rect x="98.3266%" y="405" width="0.0218%" height="15" fill="rgb(246,185,52)" fg:x="261186" fg:w="58"/><text x="98.5766%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (58 samples, 0.02%)</title><rect x="98.3266%" y="389" width="0.0218%" height="15" fill="rgb(252,136,11)" fg:x="261186" fg:w="58"/><text x="98.5766%" y="399.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (1,602 samples, 0.60%)</title><rect x="97.7457%" y="437" width="0.6031%" height="15" fill="rgb(219,138,53)" fg:x="259643" fg:w="1602"/><text x="97.9957%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (1,770 samples, 0.67%)</title><rect x="97.7137%" y="501" width="0.6663%" height="15" fill="rgb(211,51,23)" fg:x="259558" fg:w="1770"/><text x="97.9637%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1,770 samples, 0.67%)</title><rect x="97.7137%" y="485" width="0.6663%" height="15" fill="rgb(247,221,28)" fg:x="259558" fg:w="1770"/><text x="97.9637%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1,770 samples, 0.67%)</title><rect x="97.7137%" y="469" width="0.6663%" height="15" fill="rgb(251,222,45)" fg:x="259558" fg:w="1770"/><text x="97.9637%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (1,770 samples, 0.67%)</title><rect x="97.7137%" y="453" width="0.6663%" height="15" fill="rgb(217,162,53)" fg:x="259558" fg:w="1770"/><text x="97.9637%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (83 samples, 0.03%)</title><rect x="98.3488%" y="437" width="0.0312%" height="15" fill="rgb(229,93,14)" fg:x="261245" fg:w="83"/><text x="98.5988%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (83 samples, 0.03%)</title><rect x="98.3488%" y="421" width="0.0312%" height="15" fill="rgb(209,67,49)" fg:x="261245" fg:w="83"/><text x="98.5988%" y="431.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (83 samples, 0.03%)</title><rect x="98.3488%" y="405" width="0.0312%" height="15" fill="rgb(213,87,29)" fg:x="261245" fg:w="83"/><text x="98.5988%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::launch (243,109 samples, 91.52%)</title><rect x="6.8629%" y="517" width="91.5213%" height="15" fill="rgb(205,151,52)" fg:x="18230" fg:w="243109"/><text x="7.1129%" y="527.50">ant_colony.exe`ant_colony::graph::ACO::launch</text></g><g><title>`0x7FF8903E143E (260 samples, 0.10%)</title><rect x="98.3887%" y="501" width="0.0979%" height="15" fill="rgb(253,215,39)" fg:x="261351" fg:w="260"/><text x="98.6387%" y="511.50"></text></g><g><title>`0x7FF8903E1446 (189 samples, 0.07%)</title><rect x="98.4866%" y="501" width="0.0712%" height="15" fill="rgb(221,220,41)" fg:x="261611" fg:w="189"/><text x="98.7366%" y="511.50"></text></g><g><title>`0x7FF8903E145E (106 samples, 0.04%)</title><rect x="98.5615%" y="501" width="0.0399%" height="15" fill="rgb(218,133,21)" fg:x="261810" fg:w="106"/><text x="98.8115%" y="511.50"></text></g><g><title>`0x7FF8903E1466 (159 samples, 0.06%)</title><rect x="98.6014%" y="501" width="0.0599%" height="15" fill="rgb(221,193,43)" fg:x="261916" fg:w="159"/><text x="98.8514%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::impl$5::clone (739 samples, 0.28%)</title><rect x="98.3842%" y="517" width="0.2782%" height="15" fill="rgb(240,128,52)" fg:x="261339" fg:w="739"/><text x="98.6342%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_with (198 samples, 0.07%)</title><rect x="98.6700%" y="453" width="0.0745%" height="15" fill="rgb(253,114,12)" fg:x="262098" fg:w="198"/><text x="98.9200%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::write (198 samples, 0.07%)</title><rect x="98.6700%" y="437" width="0.0745%" height="15" fill="rgb(215,223,47)" fg:x="262098" fg:w="198"/><text x="98.9200%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (465 samples, 0.18%)</title><rect x="98.6700%" y="485" width="0.1751%" height="15" fill="rgb(248,225,23)" fg:x="262098" fg:w="465"/><text x="98.9200%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (465 samples, 0.18%)</title><rect x="98.6700%" y="469" width="0.1751%" height="15" fill="rgb(250,108,0)" fg:x="262098" fg:w="465"/><text x="98.9200%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::extend_with (267 samples, 0.10%)</title><rect x="98.7445%" y="453" width="0.1005%" height="15" fill="rgb(228,208,7)" fg:x="262296" fg:w="267"/><text x="98.9945%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (267 samples, 0.10%)</title><rect x="98.7445%" y="437" width="0.1005%" height="15" fill="rgb(244,45,10)" fg:x="262296" fg:w="267"/><text x="98.9945%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (267 samples, 0.10%)</title><rect x="98.7445%" y="421" width="0.1005%" height="15" fill="rgb(207,125,25)" fg:x="262296" fg:w="267"/><text x="98.9945%" y="431.50"></text></g><g><title>`0x7FF8903E2769 (267 samples, 0.10%)</title><rect x="98.7445%" y="405" width="0.1005%" height="15" fill="rgb(210,195,18)" fg:x="262296" fg:w="267"/><text x="98.9945%" y="415.50"></text></g><g><title>ant_colony.exe`ant_colony::aco2::ACO2::new(ant_colony::graph::Graph, unsigned long long, double, double, double, double, double, unsigned long long, enum2$&lt;core::option::Option&lt;ant_colony::graph::RootedTree&gt; &gt;, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;, alloc::vec::Vec (489 samples, 0.18%)</title><rect x="98.6628%" y="501" width="0.1841%" height="15" fill="rgb(249,80,12)" fg:x="262079" fg:w="489"/><text x="98.9128%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_with (195 samples, 0.07%)</title><rect x="98.8510%" y="453" width="0.0734%" height="15" fill="rgb(221,65,9)" fg:x="262579" fg:w="195"/><text x="99.1010%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::write (195 samples, 0.07%)</title><rect x="98.8510%" y="437" width="0.0734%" height="15" fill="rgb(235,49,36)" fg:x="262579" fg:w="195"/><text x="99.1010%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::extend_with (115 samples, 0.04%)</title><rect x="98.9248%" y="453" width="0.0433%" height="15" fill="rgb(225,32,20)" fg:x="262775" fg:w="115"/><text x="99.1748%" y="463.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (115 samples, 0.04%)</title><rect x="98.9248%" y="437" width="0.0433%" height="15" fill="rgb(215,141,46)" fg:x="262775" fg:w="115"/><text x="99.1748%" y="447.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (115 samples, 0.04%)</title><rect x="98.9248%" y="421" width="0.0433%" height="15" fill="rgb(250,160,47)" fg:x="262775" fg:w="115"/><text x="99.1748%" y="431.50"></text></g><g><title>`0x7FF8903E2769 (115 samples, 0.04%)</title><rect x="98.9248%" y="405" width="0.0433%" height="15" fill="rgb(216,222,40)" fg:x="262775" fg:w="115"/><text x="99.1748%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (312 samples, 0.12%)</title><rect x="98.8510%" y="485" width="0.1175%" height="15" fill="rgb(234,217,39)" fg:x="262579" fg:w="312"/><text x="99.1010%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (312 samples, 0.12%)</title><rect x="98.8510%" y="469" width="0.1175%" height="15" fill="rgb(207,178,40)" fg:x="262579" fg:w="312"/><text x="99.1010%" y="479.50"></text></g><g><title>ant_colony.exe`core::fmt::Arguments::new_const(ref$ (820 samples, 0.31%)</title><rect x="98.6624%" y="517" width="0.3087%" height="15" fill="rgb(221,136,13)" fg:x="262078" fg:w="820"/><text x="98.9124%" y="527.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::new(ant_colony::graph::Graph, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;, alloc::vec::Vec (330 samples, 0.12%)</title><rect x="98.8469%" y="501" width="0.1242%" height="15" fill="rgb(249,199,10)" fg:x="262568" fg:w="330"/><text x="99.0969%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;ref$ (27 samples, 0.01%)</title><rect x="98.9787%" y="485" width="0.0102%" height="15" fill="rgb(249,222,13)" fg:x="262918" fg:w="27"/><text x="99.2287%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (41 samples, 0.02%)</title><rect x="98.9888%" y="485" width="0.0154%" height="15" fill="rgb(244,185,38)" fg:x="262945" fg:w="41"/><text x="99.2388%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (41 samples, 0.02%)</title><rect x="98.9888%" y="469" width="0.0154%" height="15" fill="rgb(236,202,9)" fg:x="262945" fg:w="41"/><text x="99.2388%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;ref$ (41 samples, 0.02%)</title><rect x="98.9888%" y="453" width="0.0154%" height="15" fill="rgb(250,229,37)" fg:x="262945" fg:w="41"/><text x="99.2388%" y="463.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (41 samples, 0.02%)</title><rect x="98.9888%" y="437" width="0.0154%" height="15" fill="rgb(206,174,23)" fg:x="262945" fg:w="41"/><text x="99.2388%" y="447.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;, ref$ (90 samples, 0.03%)</title><rect x="98.9787%" y="517" width="0.0339%" height="15" fill="rgb(211,33,43)" fg:x="262918" fg:w="90"/><text x="99.2287%" y="527.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::from_string (90 samples, 0.03%)</title><rect x="98.9787%" y="501" width="0.0339%" height="15" fill="rgb(245,58,50)" fg:x="262918" fg:w="90"/><text x="99.2287%" y="511.50"></text></g><g><title>`0x7FF90A7C7413 (88 samples, 0.03%)</title><rect x="99.0814%" y="261" width="0.0331%" height="15" fill="rgb(244,68,36)" fg:x="263191" fg:w="88"/><text x="99.3314%" y="271.50"></text></g><g><title>`0x7FF90A7C7417 (90 samples, 0.03%)</title><rect x="99.1146%" y="261" width="0.0339%" height="15" fill="rgb(232,229,15)" fg:x="263279" fg:w="90"/><text x="99.3646%" y="271.50"></text></g><g><title>`0x7FF90A6AA199 (192 samples, 0.07%)</title><rect x="99.0803%" y="277" width="0.0723%" height="15" fill="rgb(254,30,23)" fg:x="263188" fg:w="192"/><text x="99.3303%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::grow_one&lt;f64,alloc::alloc::Global&gt; (201 samples, 0.08%)</title><rect x="99.0796%" y="437" width="0.0757%" height="15" fill="rgb(235,160,14)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (201 samples, 0.08%)</title><rect x="99.0796%" y="421" width="0.0757%" height="15" fill="rgb(212,155,44)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (201 samples, 0.08%)</title><rect x="99.0796%" y="405" width="0.0757%" height="15" fill="rgb(226,2,50)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="415.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (201 samples, 0.08%)</title><rect x="99.0796%" y="389" width="0.0757%" height="15" fill="rgb(234,177,6)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (201 samples, 0.08%)</title><rect x="99.0796%" y="373" width="0.0757%" height="15" fill="rgb(217,24,9)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (201 samples, 0.08%)</title><rect x="99.0796%" y="357" width="0.0757%" height="15" fill="rgb(220,13,46)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (201 samples, 0.08%)</title><rect x="99.0796%" y="341" width="0.0757%" height="15" fill="rgb(239,221,27)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="351.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (201 samples, 0.08%)</title><rect x="99.0796%" y="325" width="0.0757%" height="15" fill="rgb(222,198,25)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="335.50"></text></g><g><title>`0x7FF90A6A8F8D (201 samples, 0.08%)</title><rect x="99.0796%" y="309" width="0.0757%" height="15" fill="rgb(211,99,13)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="319.50"></text></g><g><title>`0x7FF90A6A9235 (201 samples, 0.08%)</title><rect x="99.0796%" y="293" width="0.0757%" height="15" fill="rgb(232,111,31)" fg:x="263186" fg:w="201"/><text x="99.3296%" y="303.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::push (412 samples, 0.16%)</title><rect x="99.0171%" y="453" width="0.1551%" height="15" fill="rgb(245,82,37)" fg:x="263020" fg:w="412"/><text x="99.2671%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::write (45 samples, 0.02%)</title><rect x="99.1552%" y="437" width="0.0169%" height="15" fill="rgb(227,149,46)" fg:x="263387" fg:w="45"/><text x="99.4052%" y="447.50"></text></g><g><title>ant_colony.exe`enum2$&lt;serde_json::de::ParserNumber&gt;::visit(enum2$ (34 samples, 0.01%)</title><rect x="99.2237%" y="373" width="0.0128%" height="15" fill="rgb(218,36,50)" fg:x="263569" fg:w="34"/><text x="99.4737%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::next_char (29 samples, 0.01%)</title><rect x="99.2610%" y="357" width="0.0109%" height="15" fill="rgb(226,80,48)" fg:x="263668" fg:w="29"/><text x="99.5110%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::next (29 samples, 0.01%)</title><rect x="99.2610%" y="341" width="0.0109%" height="15" fill="rgb(238,224,15)" fg:x="263668" fg:w="29"/><text x="99.5110%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::next (29 samples, 0.01%)</title><rect x="99.2610%" y="325" width="0.0109%" height="15" fill="rgb(241,136,10)" fg:x="263668" fg:w="29"/><text x="99.5110%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_integer&lt;serde_json::read::StrRead&gt; (95 samples, 0.04%)</title><rect x="99.2365%" y="373" width="0.0358%" height="15" fill="rgb(208,32,45)" fg:x="263603" fg:w="95"/><text x="99.4865%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::eat_char (29 samples, 0.01%)</title><rect x="99.3690%" y="341" width="0.0109%" height="15" fill="rgb(207,135,9)" fg:x="263955" fg:w="29"/><text x="99.6190%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::discard (29 samples, 0.01%)</title><rect x="99.3690%" y="325" width="0.0109%" height="15" fill="rgb(206,86,44)" fg:x="263955" fg:w="29"/><text x="99.6190%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::discard (29 samples, 0.01%)</title><rect x="99.3690%" y="309" width="0.0109%" height="15" fill="rgb(245,177,15)" fg:x="263955" fg:w="29"/><text x="99.6190%" y="319.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::f64_from_parts (178 samples, 0.07%)</title><rect x="99.3800%" y="341" width="0.0670%" height="15" fill="rgb(206,64,50)" fg:x="263984" fg:w="178"/><text x="99.6300%" y="351.50"></text></g><g><title>ant_colony.exe`core::num::impl$2::wrapping_abs (68 samples, 0.03%)</title><rect x="99.4214%" y="325" width="0.0256%" height="15" fill="rgb(234,36,40)" fg:x="264094" fg:w="68"/><text x="99.6714%" y="335.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$ (66 samples, 0.02%)</title><rect x="99.4221%" y="309" width="0.0248%" height="15" fill="rgb(213,64,8)" fg:x="264096" fg:w="66"/><text x="99.6721%" y="319.50"></text></g><g><title>ant_colony.exe`core::slice::index::get_noubcheck(ptr_const$&lt;slice2$ (65 samples, 0.02%)</title><rect x="99.4225%" y="293" width="0.0245%" height="15" fill="rgb(210,75,36)" fg:x="264097" fg:w="65"/><text x="99.6725%" y="303.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_decimal (340 samples, 0.13%)</title><rect x="99.3498%" y="357" width="0.1280%" height="15" fill="rgb(229,88,21)" fg:x="263904" fg:w="340"/><text x="99.5998%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek_or_null (82 samples, 0.03%)</title><rect x="99.4470%" y="341" width="0.0309%" height="15" fill="rgb(252,204,47)" fg:x="264162" fg:w="82"/><text x="99.6970%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (82 samples, 0.03%)</title><rect x="99.4470%" y="325" width="0.0309%" height="15" fill="rgb(208,77,27)" fg:x="264162" fg:w="82"/><text x="99.6970%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (82 samples, 0.03%)</title><rect x="99.4470%" y="309" width="0.0309%" height="15" fill="rgb(221,76,26)" fg:x="264162" fg:w="82"/><text x="99.6970%" y="319.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (82 samples, 0.03%)</title><rect x="99.4470%" y="293" width="0.0309%" height="15" fill="rgb(225,139,18)" fg:x="264162" fg:w="82"/><text x="99.6970%" y="303.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_number&lt;serde_json::read::StrRead&gt; (573 samples, 0.22%)</title><rect x="99.2723%" y="373" width="0.2157%" height="15" fill="rgb(230,137,11)" fg:x="263698" fg:w="573"/><text x="99.5223%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek_or_null (27 samples, 0.01%)</title><rect x="99.4778%" y="357" width="0.0102%" height="15" fill="rgb(212,28,1)" fg:x="264244" fg:w="27"/><text x="99.7278%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (27 samples, 0.01%)</title><rect x="99.4778%" y="341" width="0.0102%" height="15" fill="rgb(248,164,17)" fg:x="264244" fg:w="27"/><text x="99.7278%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (27 samples, 0.01%)</title><rect x="99.4778%" y="325" width="0.0102%" height="15" fill="rgb(222,171,42)" fg:x="264244" fg:w="27"/><text x="99.7278%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (27 samples, 0.01%)</title><rect x="99.4778%" y="309" width="0.0102%" height="15" fill="rgb(243,84,45)" fg:x="264244" fg:w="27"/><text x="99.7278%" y="319.50"></text></g><g><title>ant_colony.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;f64&gt;, serde_json::de::Deserializer (732 samples, 0.28%)</title><rect x="99.2230%" y="437" width="0.2756%" height="15" fill="rgb(252,49,23)" fg:x="263567" fg:w="732"/><text x="99.4730%" y="447.50"></text></g><g><title>ant_colony.exe`serde::de::impls::impl$76::deserialize(serde_json::de::Deserializer (732 samples, 0.28%)</title><rect x="99.2230%" y="421" width="0.2756%" height="15" fill="rgb(215,19,7)" fg:x="263567" fg:w="732"/><text x="99.4730%" y="431.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$7::deserialize_f64(serde_json::de::Deserializer (732 samples, 0.28%)</title><rect x="99.2230%" y="405" width="0.2756%" height="15" fill="rgb(238,81,41)" fg:x="263567" fg:w="732"/><text x="99.4730%" y="415.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::deserialize_number (732 samples, 0.28%)</title><rect x="99.2230%" y="389" width="0.2756%" height="15" fill="rgb(210,199,37)" fg:x="263567" fg:w="732"/><text x="99.4730%" y="399.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (28 samples, 0.01%)</title><rect x="99.4880%" y="373" width="0.0105%" height="15" fill="rgb(244,192,49)" fg:x="264271" fg:w="28"/><text x="99.7380%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (28 samples, 0.01%)</title><rect x="99.4880%" y="357" width="0.0105%" height="15" fill="rgb(226,211,11)" fg:x="264271" fg:w="28"/><text x="99.7380%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (28 samples, 0.01%)</title><rect x="99.4880%" y="341" width="0.0105%" height="15" fill="rgb(236,162,54)" fg:x="264271" fg:w="28"/><text x="99.7380%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (28 samples, 0.01%)</title><rect x="99.4880%" y="325" width="0.0105%" height="15" fill="rgb(220,229,9)" fg:x="264271" fg:w="28"/><text x="99.7380%" y="335.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,serde_json::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;,serde_json::error::Error&gt; &gt;, ref$ (1,438 samples, 0.54%)</title><rect x="99.0125%" y="517" width="0.5414%" height="15" fill="rgb(250,87,22)" fg:x="263008" fg:w="1438"/><text x="99.2625%" y="527.50"></text></g><g><title>ant_colony.exe`serde_json::de::from_trait&lt;serde_json::read::StrRead,alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt; &gt; (1,438 samples, 0.54%)</title><rect x="99.0125%" y="501" width="0.5414%" height="15" fill="rgb(239,43,17)" fg:x="263008" fg:w="1438"/><text x="99.2625%" y="511.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$7::deserialize_seq&lt;serde_json::read::StrRead,serde::de::impls::impl$19::deserialize::VecVisitor&lt;f64&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$19::deserialize::VecVisitor (1,438 samples, 0.54%)</title><rect x="99.0125%" y="485" width="0.5414%" height="15" fill="rgb(231,177,25)" fg:x="263008" fg:w="1438"/><text x="99.2625%" y="495.50"></text></g><g><title>ant_colony.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;f64,serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt; &gt;(serde::de::impls::impl$19::deserialize::VecVisitor&lt;f64&gt;, serde_json::de::SeqAccess (1,438 samples, 0.54%)</title><rect x="99.0125%" y="469" width="0.5414%" height="15" fill="rgb(219,179,1)" fg:x="263008" fg:w="1438"/><text x="99.2625%" y="479.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$9::next_element_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;f64&gt; &gt;(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1,011 samples, 0.38%)</title><rect x="99.1733%" y="453" width="0.3806%" height="15" fill="rgb(238,219,53)" fg:x="263435" fg:w="1011"/><text x="99.4233%" y="463.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$9::next_element_seed::has_next_element&lt;serde_json::read::StrRead&gt;(serde_json::de::SeqAccess (147 samples, 0.06%)</title><rect x="99.4986%" y="437" width="0.0553%" height="15" fill="rgb(232,167,36)" fg:x="264299" fg:w="147"/><text x="99.7486%" y="447.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (61 samples, 0.02%)</title><rect x="99.5309%" y="421" width="0.0230%" height="15" fill="rgb(244,19,51)" fg:x="264385" fg:w="61"/><text x="99.7809%" y="431.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (60 samples, 0.02%)</title><rect x="99.5313%" y="405" width="0.0226%" height="15" fill="rgb(224,6,22)" fg:x="264386" fg:w="60"/><text x="99.7813%" y="415.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (60 samples, 0.02%)</title><rect x="99.5313%" y="389" width="0.0226%" height="15" fill="rgb(224,145,5)" fg:x="264386" fg:w="60"/><text x="99.7813%" y="399.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (60 samples, 0.02%)</title><rect x="99.5313%" y="373" width="0.0226%" height="15" fill="rgb(234,130,49)" fg:x="264386" fg:w="60"/><text x="99.7813%" y="383.50"></text></g><g><title>`0x7FF90A7C7413 (48 samples, 0.02%)</title><rect x="99.5930%" y="261" width="0.0181%" height="15" fill="rgb(254,6,2)" fg:x="264550" fg:w="48"/><text x="99.8430%" y="271.50"></text></g><g><title>`0x7FF90A7C7417 (42 samples, 0.02%)</title><rect x="99.6111%" y="261" width="0.0158%" height="15" fill="rgb(208,96,46)" fg:x="264598" fg:w="42"/><text x="99.8611%" y="271.50"></text></g><g><title>`0x7FF90A6AA199 (95 samples, 0.04%)</title><rect x="99.5927%" y="277" width="0.0358%" height="15" fill="rgb(239,3,39)" fg:x="264549" fg:w="95"/><text x="99.8427%" y="287.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::grow_one&lt;u32,alloc::alloc::Global&gt; (99 samples, 0.04%)</title><rect x="99.5927%" y="437" width="0.0373%" height="15" fill="rgb(233,210,1)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (99 samples, 0.04%)</title><rect x="99.5927%" y="421" width="0.0373%" height="15" fill="rgb(244,137,37)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (99 samples, 0.04%)</title><rect x="99.5927%" y="405" width="0.0373%" height="15" fill="rgb(240,136,2)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="415.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (99 samples, 0.04%)</title><rect x="99.5927%" y="389" width="0.0373%" height="15" fill="rgb(239,18,37)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (99 samples, 0.04%)</title><rect x="99.5927%" y="373" width="0.0373%" height="15" fill="rgb(218,185,22)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (99 samples, 0.04%)</title><rect x="99.5927%" y="357" width="0.0373%" height="15" fill="rgb(225,218,4)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (99 samples, 0.04%)</title><rect x="99.5927%" y="341" width="0.0373%" height="15" fill="rgb(230,182,32)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="351.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (99 samples, 0.04%)</title><rect x="99.5927%" y="325" width="0.0373%" height="15" fill="rgb(242,56,43)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="335.50"></text></g><g><title>`0x7FF90A6A8F8D (99 samples, 0.04%)</title><rect x="99.5927%" y="309" width="0.0373%" height="15" fill="rgb(233,99,24)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="319.50"></text></g><g><title>`0x7FF90A6A9235 (99 samples, 0.04%)</title><rect x="99.5927%" y="293" width="0.0373%" height="15" fill="rgb(234,209,42)" fg:x="264549" fg:w="99"/><text x="99.8427%" y="303.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (184 samples, 0.07%)</title><rect x="99.5701%" y="453" width="0.0693%" height="15" fill="rgb(227,7,12)" fg:x="264489" fg:w="184"/><text x="99.8201%" y="463.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::next_char (33 samples, 0.01%)</title><rect x="99.7286%" y="357" width="0.0124%" height="15" fill="rgb(245,203,43)" fg:x="264910" fg:w="33"/><text x="99.9786%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::next (33 samples, 0.01%)</title><rect x="99.7286%" y="341" width="0.0124%" height="15" fill="rgb(238,205,33)" fg:x="264910" fg:w="33"/><text x="99.9786%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::next (33 samples, 0.01%)</title><rect x="99.7286%" y="325" width="0.0124%" height="15" fill="rgb(231,56,7)" fg:x="264910" fg:w="33"/><text x="99.9786%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_integer&lt;serde_json::read::StrRead&gt; (150 samples, 0.06%)</title><rect x="99.6947%" y="373" width="0.0565%" height="15" fill="rgb(244,186,29)" fg:x="264820" fg:w="150"/><text x="99.9447%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek_or_null (27 samples, 0.01%)</title><rect x="99.7410%" y="357" width="0.0102%" height="15" fill="rgb(234,111,31)" fg:x="264943" fg:w="27"/><text x="99.9910%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (27 samples, 0.01%)</title><rect x="99.7410%" y="341" width="0.0102%" height="15" fill="rgb(241,149,10)" fg:x="264943" fg:w="27"/><text x="99.9910%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (27 samples, 0.01%)</title><rect x="99.7410%" y="325" width="0.0102%" height="15" fill="rgb(249,206,44)" fg:x="264943" fg:w="27"/><text x="99.9910%" y="335.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (27 samples, 0.01%)</title><rect x="99.7410%" y="309" width="0.0102%" height="15" fill="rgb(251,153,30)" fg:x="264943" fg:w="27"/><text x="99.9910%" y="319.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_number&lt;serde_json::read::StrRead&gt; (143 samples, 0.05%)</title><rect x="99.7512%" y="373" width="0.0538%" height="15" fill="rgb(239,152,38)" fg:x="264970" fg:w="143"/><text x="100.0012%" y="383.50"></text></g><g><title>ant_colony.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;u32&gt;, serde_json::de::Deserializer (397 samples, 0.15%)</title><rect x="99.6849%" y="437" width="0.1495%" height="15" fill="rgb(249,139,47)" fg:x="264794" fg:w="397"/><text x="99.9349%" y="447.50"></text></g><g><title>ant_colony.exe`serde::de::impls::impl$68::deserialize(serde_json::de::Deserializer (397 samples, 0.15%)</title><rect x="99.6849%" y="421" width="0.1495%" height="15" fill="rgb(244,64,35)" fg:x="264794" fg:w="397"/><text x="99.9349%" y="431.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$7::deserialize_u32(serde_json::de::Deserializer (397 samples, 0.15%)</title><rect x="99.6849%" y="405" width="0.1495%" height="15" fill="rgb(216,46,15)" fg:x="264794" fg:w="397"/><text x="99.9349%" y="415.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::deserialize_number (397 samples, 0.15%)</title><rect x="99.6849%" y="389" width="0.1495%" height="15" fill="rgb(250,74,19)" fg:x="264794" fg:w="397"/><text x="99.9349%" y="399.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (78 samples, 0.03%)</title><rect x="99.8050%" y="373" width="0.0294%" height="15" fill="rgb(249,42,33)" fg:x="265113" fg:w="78"/><text x="100.0550%" y="383.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (78 samples, 0.03%)</title><rect x="99.8050%" y="357" width="0.0294%" height="15" fill="rgb(242,149,17)" fg:x="265113" fg:w="78"/><text x="100.0550%" y="367.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (78 samples, 0.03%)</title><rect x="99.8050%" y="341" width="0.0294%" height="15" fill="rgb(244,29,21)" fg:x="265113" fg:w="78"/><text x="100.0550%" y="351.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (78 samples, 0.03%)</title><rect x="99.8050%" y="325" width="0.0294%" height="15" fill="rgb(220,130,37)" fg:x="265113" fg:w="78"/><text x="100.0550%" y="335.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,serde_json::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;,serde_json::error::Error&gt; &gt;, ref$ (1,037 samples, 0.39%)</title><rect x="99.5539%" y="517" width="0.3904%" height="15" fill="rgb(211,67,2)" fg:x="264446" fg:w="1037"/><text x="99.8039%" y="527.50"></text></g><g><title>ant_colony.exe`serde_json::de::from_trait&lt;serde_json::read::StrRead,alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt; &gt; (1,037 samples, 0.39%)</title><rect x="99.5539%" y="501" width="0.3904%" height="15" fill="rgb(235,68,52)" fg:x="264446" fg:w="1037"/><text x="99.8039%" y="511.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$7::deserialize_seq&lt;serde_json::read::StrRead,serde::de::impls::impl$19::deserialize::VecVisitor&lt;u32&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$19::deserialize::VecVisitor (1,037 samples, 0.39%)</title><rect x="99.5539%" y="485" width="0.3904%" height="15" fill="rgb(246,142,3)" fg:x="264446" fg:w="1037"/><text x="99.8039%" y="495.50"></text></g><g><title>ant_colony.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;u32,serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt; &gt;(serde::de::impls::impl$19::deserialize::VecVisitor&lt;u32&gt;, serde_json::de::SeqAccess (1,037 samples, 0.39%)</title><rect x="99.5539%" y="469" width="0.3904%" height="15" fill="rgb(241,25,7)" fg:x="264446" fg:w="1037"/><text x="99.8039%" y="479.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$9::next_element_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;u32&gt; &gt;(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (803 samples, 0.30%)</title><rect x="99.6420%" y="453" width="0.3023%" height="15" fill="rgb(242,119,39)" fg:x="264680" fg:w="803"/><text x="99.8920%" y="463.50"></text></g><g><title>ant_colony.exe`serde_json::de::impl$9::next_element_seed::has_next_element&lt;serde_json::read::StrRead&gt;(serde_json::de::SeqAccess (292 samples, 0.11%)</title><rect x="99.8344%" y="437" width="0.1099%" height="15" fill="rgb(241,98,45)" fg:x="265191" fg:w="292"/><text x="100.0844%" y="447.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (207 samples, 0.08%)</title><rect x="99.8664%" y="421" width="0.0779%" height="15" fill="rgb(254,28,30)" fg:x="265276" fg:w="207"/><text x="100.1164%" y="431.50"></text></g><g><title>ant_colony.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (157 samples, 0.06%)</title><rect x="99.8852%" y="405" width="0.0591%" height="15" fill="rgb(241,142,54)" fg:x="265326" fg:w="157"/><text x="100.1352%" y="415.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$10::peek (157 samples, 0.06%)</title><rect x="99.8852%" y="389" width="0.0591%" height="15" fill="rgb(222,85,15)" fg:x="265326" fg:w="157"/><text x="100.1352%" y="399.50"></text></g><g><title>ant_colony.exe`serde_json::read::impl$7::peek (157 samples, 0.06%)</title><rect x="99.8852%" y="373" width="0.0591%" height="15" fill="rgb(210,85,47)" fg:x="265326" fg:w="157"/><text x="100.1352%" y="383.50"></text></g><g><title>ant_colony.exe`core::result::Result::is_err (42 samples, 0.02%)</title><rect x="99.9450%" y="437" width="0.0158%" height="15" fill="rgb(224,206,25)" fg:x="265485" fg:w="42"/><text x="100.1950%" y="447.50"></text></g><g><title>ant_colony.exe`core::result::Result::is_ok (42 samples, 0.02%)</title><rect x="99.9450%" y="421" width="0.0158%" height="15" fill="rgb(243,201,19)" fg:x="265485" fg:w="42"/><text x="100.1950%" y="431.50"></text></g><g><title>ant_colony.exe`core::str::converts::from_utf8 (42 samples, 0.02%)</title><rect x="99.9450%" y="405" width="0.0158%" height="15" fill="rgb(236,59,4)" fg:x="265485" fg:w="42"/><text x="100.1950%" y="415.50"></text></g><g><title>ant_colony.exe`core::str::validations::run_utf8_validation (42 samples, 0.02%)</title><rect x="99.9450%" y="389" width="0.0158%" height="15" fill="rgb(254,179,45)" fg:x="265485" fg:w="42"/><text x="100.1950%" y="399.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt;, ref$ (146 samples, 0.05%)</title><rect x="99.9447%" y="517" width="0.0550%" height="15" fill="rgb(226,14,10)" fg:x="265484" fg:w="146"/><text x="100.1947%" y="527.50"></text></g><g><title>ant_colony.exe`std::fs::impl$8::read_to_string (146 samples, 0.05%)</title><rect x="99.9447%" y="501" width="0.0550%" height="15" fill="rgb(244,27,41)" fg:x="265484" fg:w="146"/><text x="100.1947%" y="511.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_to_string (146 samples, 0.05%)</title><rect x="99.9447%" y="485" width="0.0550%" height="15" fill="rgb(235,35,32)" fg:x="265484" fg:w="146"/><text x="100.1947%" y="495.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_string (145 samples, 0.05%)</title><rect x="99.9450%" y="469" width="0.0546%" height="15" fill="rgb(218,68,31)" fg:x="265485" fg:w="145"/><text x="100.1950%" y="479.50"></text></g><g><title>ant_colony.exe`std::io::append_to_string (145 samples, 0.05%)</title><rect x="99.9450%" y="453" width="0.0546%" height="15" fill="rgb(207,120,37)" fg:x="265485" fg:w="145"/><text x="100.1950%" y="463.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (103 samples, 0.04%)</title><rect x="99.9608%" y="437" width="0.0388%" height="15" fill="rgb(227,98,0)" fg:x="265527" fg:w="103"/><text x="100.2108%" y="447.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_buf (103 samples, 0.04%)</title><rect x="99.9608%" y="421" width="0.0388%" height="15" fill="rgb(207,7,3)" fg:x="265527" fg:w="103"/><text x="100.2108%" y="431.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::read_buf (103 samples, 0.04%)</title><rect x="99.9608%" y="405" width="0.0388%" height="15" fill="rgb(206,98,19)" fg:x="265527" fg:w="103"/><text x="100.2108%" y="415.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read_buf (103 samples, 0.04%)</title><rect x="99.9608%" y="389" width="0.0388%" height="15" fill="rgb(217,5,26)" fg:x="265527" fg:w="103"/><text x="100.2108%" y="399.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (103 samples, 0.04%)</title><rect x="99.9608%" y="373" width="0.0388%" height="15" fill="rgb(235,190,38)" fg:x="265527" fg:w="103"/><text x="100.2108%" y="383.50"></text></g><g><title>`0x7FF90A7C1BC4 (103 samples, 0.04%)</title><rect x="99.9608%" y="357" width="0.0388%" height="15" fill="rgb(247,86,24)" fg:x="265527" fg:w="103"/><text x="100.2108%" y="367.50"></text></g><g><title>all (265,631 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(205,101,16)" fg:x="0" fg:w="265631"/><text x="0.2500%" y="767.50"></text></g><g><title>`0x7FF90A69C34C (265,615 samples, 99.99%)</title><rect x="0.0060%" y="741" width="99.9940%" height="15" fill="rgb(246,168,33)" fg:x="16" fg:w="265615"/><text x="0.2560%" y="751.50">`0x7FF90A69C34C</text></g><g><title>`0x7FF909E5E8D7 (265,615 samples, 99.99%)</title><rect x="0.0060%" y="725" width="99.9940%" height="15" fill="rgb(231,114,1)" fg:x="16" fg:w="265615"/><text x="0.2560%" y="735.50">`0x7FF909E5E8D7</text></g><g><title>ant_colony.exe`__scrt_common_main_seh() (265,613 samples, 99.99%)</title><rect x="0.0068%" y="709" width="99.9932%" height="15" fill="rgb(207,184,53)" fg:x="18" fg:w="265613"/><text x="0.2568%" y="719.50">ant_colony.exe`__scrt_common_main_seh()</text></g><g><title>ant_colony.exe`invoke_main() (265,606 samples, 99.99%)</title><rect x="0.0094%" y="693" width="99.9906%" height="15" fill="rgb(224,95,51)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="703.50">ant_colony.exe`invoke_main()</text></g><g><title>ant_colony.exe`main (265,606 samples, 99.99%)</title><rect x="0.0094%" y="677" width="99.9906%" height="15" fill="rgb(212,188,45)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="687.50">ant_colony.exe`main</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal (265,606 samples, 99.99%)</title><rect x="0.0094%" y="661" width="99.9906%" height="15" fill="rgb(223,154,38)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="671.50">ant_colony.exe`std::rt::lang_start_internal</text></g><g><title>ant_colony.exe`std::panic::catch_unwind (265,606 samples, 99.99%)</title><rect x="0.0094%" y="645" width="99.9906%" height="15" fill="rgb(251,22,52)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="655.50">ant_colony.exe`std::panic::catch_unwind</text></g><g><title>ant_colony.exe`std::panicking::try (265,606 samples, 99.99%)</title><rect x="0.0094%" y="629" width="99.9906%" height="15" fill="rgb(229,209,22)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="639.50">ant_colony.exe`std::panicking::try</text></g><g><title>ant_colony.exe`std::panicking::try::do_call (265,606 samples, 99.99%)</title><rect x="0.0094%" y="613" width="99.9906%" height="15" fill="rgb(234,138,34)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="623.50">ant_colony.exe`std::panicking::try::do_call</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal::closure$0 (265,606 samples, 99.99%)</title><rect x="0.0094%" y="597" width="99.9906%" height="15" fill="rgb(212,95,11)" fg:x="25" fg:w="265606"/><text x="0.2594%" y="607.50">ant_colony.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (265,605 samples, 99.99%)</title><rect x="0.0098%" y="581" width="99.9902%" height="15" fill="rgb(240,179,47)" fg:x="26" fg:w="265605"/><text x="0.2598%" y="591.50">ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (265,605 samples, 99.99%)</title><rect x="0.0098%" y="565" width="99.9902%" height="15" fill="rgb(240,163,11)" fg:x="26" fg:w="265605"/><text x="0.2598%" y="575.50">ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>ant_colony.exe`ant_colony::main (265,605 samples, 99.99%)</title><rect x="0.0098%" y="549" width="99.9902%" height="15" fill="rgb(236,37,12)" fg:x="26" fg:w="265605"/><text x="0.2598%" y="559.50">ant_colony.exe`ant_colony::main</text></g><g><title>ant_colony.exe`ant_colony::test_on_facebook (265,604 samples, 99.99%)</title><rect x="0.0102%" y="533" width="99.9898%" height="15" fill="rgb(232,164,16)" fg:x="27" fg:w="265604"/><text x="0.2602%" y="543.50">ant_colony.exe`ant_colony::test_on_facebook</text></g></svg></svg>