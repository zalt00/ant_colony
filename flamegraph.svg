<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="12814"><g><title>`0x7FFAE374379F (4 samples, 0.03%)</title><rect x="0.0000%" y="981" width="0.0312%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="991.50"></text></g><g><title>`0x7FFAE37522D7 (3 samples, 0.02%)</title><rect x="0.0078%" y="965" width="0.0234%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="3"/><text x="0.2578%" y="975.50"></text></g><g><title>`0x7FFAE3752983 (3 samples, 0.02%)</title><rect x="0.0078%" y="949" width="0.0234%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="3"/><text x="0.2578%" y="959.50"></text></g><g><title>`0x7FFAE36E8842 (3 samples, 0.02%)</title><rect x="0.0702%" y="901" width="0.0234%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="3"/><text x="0.3202%" y="911.50"></text></g><g><title>`0x7FFAE36ED255 (3 samples, 0.02%)</title><rect x="0.0702%" y="885" width="0.0234%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="3"/><text x="0.3202%" y="895.50"></text></g><g><title>`0x7FFAE374B611 (3 samples, 0.02%)</title><rect x="0.0702%" y="869" width="0.0234%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="3"/><text x="0.3202%" y="879.50"></text></g><g><title>`0x7FFAE374BBB8 (2 samples, 0.02%)</title><rect x="0.0780%" y="853" width="0.0156%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="2"/><text x="0.3280%" y="863.50"></text></g><g><title>`0x7FFAE0A92E8D (2 samples, 0.02%)</title><rect x="0.1015%" y="805" width="0.0156%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="2"/><text x="0.3515%" y="815.50"></text></g><g><title>`0x7FFAE37BB734 (8 samples, 0.06%)</title><rect x="0.0702%" y="949" width="0.0624%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="8"/><text x="0.3202%" y="959.50"></text></g><g><title>`0x7FFAE3735D80 (8 samples, 0.06%)</title><rect x="0.0702%" y="933" width="0.0624%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="8"/><text x="0.3202%" y="943.50"></text></g><g><title>`0x7FFAE36E84E0 (8 samples, 0.06%)</title><rect x="0.0702%" y="917" width="0.0624%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="8"/><text x="0.3202%" y="927.50"></text></g><g><title>`0x7FFAE36E88D4 (5 samples, 0.04%)</title><rect x="0.0936%" y="901" width="0.0390%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="5"/><text x="0.3436%" y="911.50"></text></g><g><title>`0x7FFAE371AE03 (4 samples, 0.03%)</title><rect x="0.1015%" y="885" width="0.0312%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="4"/><text x="0.3515%" y="895.50"></text></g><g><title>`0x7FFAE371BCA6 (4 samples, 0.03%)</title><rect x="0.1015%" y="869" width="0.0312%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="4"/><text x="0.3515%" y="879.50"></text></g><g><title>`0x7FFAE371BC7A (4 samples, 0.03%)</title><rect x="0.1015%" y="853" width="0.0312%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="4"/><text x="0.3515%" y="863.50"></text></g><g><title>`0x7FFAE375193C (4 samples, 0.03%)</title><rect x="0.1015%" y="837" width="0.0312%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="4"/><text x="0.3515%" y="847.50"></text></g><g><title>`0x7FFAE3752983 (4 samples, 0.03%)</title><rect x="0.1015%" y="821" width="0.0312%" height="15" fill="rgb(225,20,46)" fg:x="13" fg:w="4"/><text x="0.3515%" y="831.50"></text></g><g><title>`0x7FFAE374548B (9 samples, 0.07%)</title><rect x="0.0702%" y="965" width="0.0702%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="9"/><text x="0.3202%" y="975.50"></text></g><g><title>`0x7FFAE374559D (2 samples, 0.02%)</title><rect x="0.1561%" y="965" width="0.0156%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="2"/><text x="0.4061%" y="975.50"></text></g><g><title>`0x7FFAE371CE47 (2 samples, 0.02%)</title><rect x="0.1561%" y="949" width="0.0156%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="2"/><text x="0.4061%" y="959.50"></text></g><g><title>`0x7FFAE375C32A (2 samples, 0.02%)</title><rect x="0.1561%" y="933" width="0.0156%" height="15" fill="rgb(249,33,26)" fg:x="20" fg:w="2"/><text x="0.4061%" y="943.50"></text></g><g><title>`0x7FFAE3715FCE (24 samples, 0.19%)</title><rect x="0.0000%" y="1013" width="0.1873%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="24"/><text x="0.2500%" y="1023.50"></text></g><g><title>`0x7FFAE374364E (24 samples, 0.19%)</title><rect x="0.0000%" y="997" width="0.1873%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="24"/><text x="0.2500%" y="1007.50"></text></g><g><title>`0x7FFAE3743864 (20 samples, 0.16%)</title><rect x="0.0312%" y="981" width="0.1561%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="20"/><text x="0.2812%" y="991.50"></text></g><g><title>`0x7FFAE37456AC (2 samples, 0.02%)</title><rect x="0.1717%" y="965" width="0.0156%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="2"/><text x="0.4217%" y="975.50"></text></g><g><title>`0x7FFAE371BCA6 (2 samples, 0.02%)</title><rect x="0.1717%" y="949" width="0.0156%" height="15" fill="rgb(249,31,29)" fg:x="22" fg:w="2"/><text x="0.4217%" y="959.50"></text></g><g><title>`0x7FFAE371BCA6 (2 samples, 0.02%)</title><rect x="0.1717%" y="933" width="0.0156%" height="15" fill="rgb(225,111,53)" fg:x="22" fg:w="2"/><text x="0.4217%" y="943.50"></text></g><g><title>`0x7FFAE371BC7A (2 samples, 0.02%)</title><rect x="0.1717%" y="917" width="0.0156%" height="15" fill="rgb(238,160,17)" fg:x="22" fg:w="2"/><text x="0.4217%" y="927.50"></text></g><g><title>`0x7FFAE375193C (2 samples, 0.02%)</title><rect x="0.1717%" y="901" width="0.0156%" height="15" fill="rgb(214,148,48)" fg:x="22" fg:w="2"/><text x="0.4217%" y="911.50"></text></g><g><title>`0x7FFAE3752983 (2 samples, 0.02%)</title><rect x="0.1717%" y="885" width="0.0156%" height="15" fill="rgb(232,36,49)" fg:x="22" fg:w="2"/><text x="0.4217%" y="895.50"></text></g><g><title>`0x7FFAE371C320 (2 samples, 0.02%)</title><rect x="0.1873%" y="1013" width="0.0156%" height="15" fill="rgb(209,103,24)" fg:x="24" fg:w="2"/><text x="0.4373%" y="1023.50"></text></g><g><title>`0x7FFAE36E8860 (3 samples, 0.02%)</title><rect x="0.2185%" y="853" width="0.0234%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="3"/><text x="0.4685%" y="863.50"></text></g><g><title>`0x7FFAE375C404 (3 samples, 0.02%)</title><rect x="0.2185%" y="837" width="0.0234%" height="15" fill="rgb(213,181,19)" fg:x="28" fg:w="3"/><text x="0.4685%" y="847.50"></text></g><g><title>`0x7FFAE374E52D (3 samples, 0.02%)</title><rect x="0.2185%" y="821" width="0.0234%" height="15" fill="rgb(254,191,54)" fg:x="28" fg:w="3"/><text x="0.4685%" y="831.50"></text></g><g><title>`0x7FFAE375065C (2 samples, 0.02%)</title><rect x="0.2263%" y="805" width="0.0156%" height="15" fill="rgb(241,83,37)" fg:x="29" fg:w="2"/><text x="0.4763%" y="815.50"></text></g><g><title>`0x7FFAE132553D (4 samples, 0.03%)</title><rect x="0.2185%" y="949" width="0.0312%" height="15" fill="rgb(233,36,39)" fg:x="28" fg:w="4"/><text x="0.4685%" y="959.50"></text></g><g><title>`0x7FFAE12B423B (4 samples, 0.03%)</title><rect x="0.2185%" y="933" width="0.0312%" height="15" fill="rgb(226,3,54)" fg:x="28" fg:w="4"/><text x="0.4685%" y="943.50"></text></g><g><title>`0x7FFAE1316225 (4 samples, 0.03%)</title><rect x="0.2185%" y="917" width="0.0312%" height="15" fill="rgb(245,192,40)" fg:x="28" fg:w="4"/><text x="0.4685%" y="927.50"></text></g><g><title>`0x7FFAE09828E6 (4 samples, 0.03%)</title><rect x="0.2185%" y="901" width="0.0312%" height="15" fill="rgb(238,167,29)" fg:x="28" fg:w="4"/><text x="0.4685%" y="911.50"></text></g><g><title>`0x7FFAE3735D80 (4 samples, 0.03%)</title><rect x="0.2185%" y="885" width="0.0312%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="4"/><text x="0.4685%" y="895.50"></text></g><g><title>`0x7FFAE36E84E0 (4 samples, 0.03%)</title><rect x="0.2185%" y="869" width="0.0312%" height="15" fill="rgb(231,60,39)" fg:x="28" fg:w="4"/><text x="0.4685%" y="879.50"></text></g><g><title>`0x7FFAE1340046 (5 samples, 0.04%)</title><rect x="0.2185%" y="965" width="0.0390%" height="15" fill="rgb(208,69,12)" fg:x="28" fg:w="5"/><text x="0.4685%" y="975.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::str::iter::Split&lt;ref$ (3 samples, 0.02%)</title><rect x="0.2653%" y="789" width="0.0234%" height="15" fill="rgb(235,93,37)" fg:x="34" fg:w="3"/><text x="0.5153%" y="799.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next(core::str::iter::Split&lt;ref$ (3 samples, 0.02%)</title><rect x="0.2653%" y="773" width="0.0234%" height="15" fill="rgb(213,116,39)" fg:x="34" fg:w="3"/><text x="0.5153%" y="783.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (3 samples, 0.02%)</title><rect x="0.2653%" y="757" width="0.0234%" height="15" fill="rgb(222,207,29)" fg:x="34" fg:w="3"/><text x="0.5153%" y="767.50"></text></g><g><title>ant_colony.exe`core::str::pattern::impl$33::next_match (3 samples, 0.02%)</title><rect x="0.2653%" y="741" width="0.0234%" height="15" fill="rgb(206,96,30)" fg:x="34" fg:w="3"/><text x="0.5153%" y="751.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (3 samples, 0.02%)</title><rect x="0.2653%" y="725" width="0.0234%" height="15" fill="rgb(218,138,4)" fg:x="34" fg:w="3"/><text x="0.5153%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (2 samples, 0.02%)</title><rect x="0.2887%" y="789" width="0.0156%" height="15" fill="rgb(250,191,14)" fg:x="37" fg:w="2"/><text x="0.5387%" y="799.50"></text></g><g><title>ant_colony.exe`std::fs::impl$8::read_to_string (2 samples, 0.02%)</title><rect x="0.2887%" y="773" width="0.0156%" height="15" fill="rgb(239,60,40)" fg:x="37" fg:w="2"/><text x="0.5387%" y="783.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_to_string (2 samples, 0.02%)</title><rect x="0.2887%" y="757" width="0.0156%" height="15" fill="rgb(206,27,48)" fg:x="37" fg:w="2"/><text x="0.5387%" y="767.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_string (2 samples, 0.02%)</title><rect x="0.2887%" y="741" width="0.0156%" height="15" fill="rgb(225,35,8)" fg:x="37" fg:w="2"/><text x="0.5387%" y="751.50"></text></g><g><title>ant_colony.exe`std::io::append_to_string (2 samples, 0.02%)</title><rect x="0.2887%" y="725" width="0.0156%" height="15" fill="rgb(250,213,24)" fg:x="37" fg:w="2"/><text x="0.5387%" y="735.50"></text></g><g><title>ant_colony.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (2 samples, 0.02%)</title><rect x="0.2887%" y="709" width="0.0156%" height="15" fill="rgb(247,123,22)" fg:x="37" fg:w="2"/><text x="0.5387%" y="719.50"></text></g><g><title>ant_colony.exe`std::fs::impl$5::read_buf (2 samples, 0.02%)</title><rect x="0.2887%" y="693" width="0.0156%" height="15" fill="rgb(231,138,38)" fg:x="37" fg:w="2"/><text x="0.5387%" y="703.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::read_buf (2 samples, 0.02%)</title><rect x="0.2887%" y="677" width="0.0156%" height="15" fill="rgb(231,145,46)" fg:x="37" fg:w="2"/><text x="0.5387%" y="687.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::read_buf (2 samples, 0.02%)</title><rect x="0.2887%" y="661" width="0.0156%" height="15" fill="rgb(251,118,11)" fg:x="37" fg:w="2"/><text x="0.5387%" y="671.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_read (2 samples, 0.02%)</title><rect x="0.2887%" y="645" width="0.0156%" height="15" fill="rgb(217,147,25)" fg:x="37" fg:w="2"/><text x="0.5387%" y="655.50"></text></g><g><title>`0x7FFAE3841BC4 (2 samples, 0.02%)</title><rect x="0.2887%" y="629" width="0.0156%" height="15" fill="rgb(247,81,37)" fg:x="37" fg:w="2"/><text x="0.5387%" y="639.50"></text></g><g><title>`0x7FFAE36EFBC0 (2 samples, 0.02%)</title><rect x="0.3824%" y="565" width="0.0156%" height="15" fill="rgb(209,12,38)" fg:x="49" fg:w="2"/><text x="0.6324%" y="575.50"></text></g><g><title>`0x7FFAE36EFFFF (10 samples, 0.08%)</title><rect x="0.3980%" y="565" width="0.0780%" height="15" fill="rgb(227,1,9)" fg:x="51" fg:w="10"/><text x="0.6480%" y="575.50"></text></g><g><title>`0x7FFAE36EF2A4 (18 samples, 0.14%)</title><rect x="0.3434%" y="581" width="0.1405%" height="15" fill="rgb(248,47,43)" fg:x="44" fg:w="18"/><text x="0.5934%" y="591.50"></text></g><g><title>`0x7FFAE36EF164 (20 samples, 0.16%)</title><rect x="0.3356%" y="597" width="0.1561%" height="15" fill="rgb(221,10,30)" fg:x="43" fg:w="20"/><text x="0.5856%" y="607.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity (21 samples, 0.16%)</title><rect x="0.3356%" y="677" width="0.1639%" height="15" fill="rgb(210,229,1)" fg:x="43" fg:w="21"/><text x="0.5856%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity_in (21 samples, 0.16%)</title><rect x="0.3356%" y="661" width="0.1639%" height="15" fill="rgb(222,148,37)" fg:x="43" fg:w="21"/><text x="0.5856%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::with_capacity_in (21 samples, 0.16%)</title><rect x="0.3356%" y="645" width="0.1639%" height="15" fill="rgb(234,67,33)" fg:x="43" fg:w="21"/><text x="0.5856%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (21 samples, 0.16%)</title><rect x="0.3356%" y="629" width="0.1639%" height="15" fill="rgb(247,98,35)" fg:x="43" fg:w="21"/><text x="0.5856%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (21 samples, 0.16%)</title><rect x="0.3356%" y="613" width="0.1639%" height="15" fill="rgb(247,138,52)" fg:x="43" fg:w="21"/><text x="0.5856%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;*, core::str::iter::Split&lt;ref$ (17 samples, 0.13%)</title><rect x="0.4995%" y="677" width="0.1327%" height="15" fill="rgb(213,79,30)" fg:x="64" fg:w="17"/><text x="0.7495%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::extend_desugared(core::str::iter::Split&lt;ref$ (17 samples, 0.13%)</title><rect x="0.4995%" y="661" width="0.1327%" height="15" fill="rgb(246,177,23)" fg:x="64" fg:w="17"/><text x="0.7495%" y="671.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next&lt;ref$&lt;str$&gt; &gt;(core::str::iter::Split&lt;ref$ (16 samples, 0.12%)</title><rect x="0.5073%" y="645" width="0.1249%" height="15" fill="rgb(230,62,27)" fg:x="65" fg:w="16"/><text x="0.7573%" y="655.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (15 samples, 0.12%)</title><rect x="0.5151%" y="629" width="0.1171%" height="15" fill="rgb(216,154,8)" fg:x="66" fg:w="15"/><text x="0.7651%" y="639.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (13 samples, 0.10%)</title><rect x="0.5307%" y="613" width="0.1015%" height="15" fill="rgb(244,35,45)" fg:x="68" fg:w="13"/><text x="0.7807%" y="623.50"></text></g><g><title>ant_colony.exe`core::slice::impl$0::get(ref$&lt;slice2$ (4 samples, 0.03%)</title><rect x="0.6009%" y="597" width="0.0312%" height="15" fill="rgb(251,115,12)" fg:x="77" fg:w="4"/><text x="0.8509%" y="607.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$ (4 samples, 0.03%)</title><rect x="0.6009%" y="581" width="0.0312%" height="15" fill="rgb(240,54,50)" fg:x="77" fg:w="4"/><text x="0.8509%" y="591.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next&lt;enum2$&lt;core::str::pattern::MatchOnly&gt; &gt;(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (3 samples, 0.02%)</title><rect x="0.6477%" y="645" width="0.0234%" height="15" fill="rgb(233,84,52)" fg:x="83" fg:w="3"/><text x="0.8977%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (46 samples, 0.36%)</title><rect x="0.3200%" y="741" width="0.3590%" height="15" fill="rgb(207,117,47)" fg:x="41" fg:w="46"/><text x="0.5700%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_slice (46 samples, 0.36%)</title><rect x="0.3200%" y="725" width="0.3590%" height="15" fill="rgb(249,43,39)" fg:x="41" fg:w="46"/><text x="0.5700%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;str$&gt;,core::str::iter::Split&lt;ref$&lt;str$&gt; &gt; &gt;(core::str::iter::Split&lt;ref$ (45 samples, 0.35%)</title><rect x="0.3278%" y="709" width="0.3512%" height="15" fill="rgb(209,38,44)" fg:x="42" fg:w="45"/><text x="0.5778%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::str::iter::Split&lt;ref$ (44 samples, 0.34%)</title><rect x="0.3356%" y="693" width="0.3434%" height="15" fill="rgb(236,212,23)" fg:x="43" fg:w="44"/><text x="0.5856%" y="703.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next&lt;ref$&lt;str$&gt; &gt;(core::str::iter::Split&lt;ref$ (6 samples, 0.05%)</title><rect x="0.6321%" y="677" width="0.0468%" height="15" fill="rgb(242,79,21)" fg:x="81" fg:w="6"/><text x="0.8821%" y="687.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (5 samples, 0.04%)</title><rect x="0.6399%" y="661" width="0.0390%" height="15" fill="rgb(211,96,35)" fg:x="82" fg:w="5"/><text x="0.8899%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;ref$ (51 samples, 0.40%)</title><rect x="0.3200%" y="757" width="0.3980%" height="15" fill="rgb(253,215,40)" fg:x="41" fg:w="51"/><text x="0.5700%" y="767.50"></text></g><g><title>ant_colony.exe`core::num::impl$31::from_str(ref$ (5 samples, 0.04%)</title><rect x="0.6789%" y="741" width="0.0390%" height="15" fill="rgb(211,81,21)" fg:x="87" fg:w="5"/><text x="0.9289%" y="751.50"></text></g><g><title>ant_colony.exe`core::num::impl$32::from_str_radix(ref$ (5 samples, 0.04%)</title><rect x="0.6789%" y="725" width="0.0390%" height="15" fill="rgb(208,190,38)" fg:x="87" fg:w="5"/><text x="0.9289%" y="735.50"></text></g><g><title>ant_colony.exe`core::num::impl$32::from_ascii_radix(ref$&lt;slice2$ (5 samples, 0.04%)</title><rect x="0.6789%" y="709" width="0.0390%" height="15" fill="rgb(235,213,38)" fg:x="87" fg:w="5"/><text x="0.9289%" y="719.50"></text></g><g><title>`0x7FFAE3725FC4 (17 samples, 0.13%)</title><rect x="0.7258%" y="581" width="0.1327%" height="15" fill="rgb(237,122,38)" fg:x="93" fg:w="17"/><text x="0.9758%" y="591.50"></text></g><g><title>`0x7FFAE38481EC (17 samples, 0.13%)</title><rect x="0.7258%" y="565" width="0.1327%" height="15" fill="rgb(244,218,35)" fg:x="93" fg:w="17"/><text x="0.9758%" y="575.50"></text></g><g><title>`0x7FFAE3728613 (2 samples, 0.02%)</title><rect x="0.8584%" y="549" width="0.0156%" height="15" fill="rgb(240,68,47)" fg:x="110" fg:w="2"/><text x="1.1084%" y="559.50"></text></g><g><title>`0x7FFAE3841E04 (2 samples, 0.02%)</title><rect x="0.8584%" y="533" width="0.0156%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="2"/><text x="1.1084%" y="543.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::new_empty (22 samples, 0.17%)</title><rect x="0.7180%" y="757" width="0.1717%" height="15" fill="rgb(235,124,12)" fg:x="92" fg:w="22"/><text x="0.9680%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (22 samples, 0.17%)</title><rect x="0.7180%" y="741" width="0.1717%" height="15" fill="rgb(224,169,11)" fg:x="92" fg:w="22"/><text x="0.9680%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (22 samples, 0.17%)</title><rect x="0.7180%" y="725" width="0.1717%" height="15" fill="rgb(250,166,2)" fg:x="92" fg:w="22"/><text x="0.9680%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::with_capacity_zeroed_in (22 samples, 0.17%)</title><rect x="0.7180%" y="709" width="0.1717%" height="15" fill="rgb(242,216,29)" fg:x="92" fg:w="22"/><text x="0.9680%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (22 samples, 0.17%)</title><rect x="0.7180%" y="693" width="0.1717%" height="15" fill="rgb(230,116,27)" fg:x="92" fg:w="22"/><text x="0.9680%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (22 samples, 0.17%)</title><rect x="0.7180%" y="677" width="0.1717%" height="15" fill="rgb(228,99,48)" fg:x="92" fg:w="22"/><text x="0.9680%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (22 samples, 0.17%)</title><rect x="0.7180%" y="661" width="0.1717%" height="15" fill="rgb(253,11,6)" fg:x="92" fg:w="22"/><text x="0.9680%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (22 samples, 0.17%)</title><rect x="0.7180%" y="645" width="0.1717%" height="15" fill="rgb(247,143,39)" fg:x="92" fg:w="22"/><text x="0.9680%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (22 samples, 0.17%)</title><rect x="0.7180%" y="629" width="0.1717%" height="15" fill="rgb(236,97,10)" fg:x="92" fg:w="22"/><text x="0.9680%" y="639.50"></text></g><g><title>`0x7FFAE36EF164 (22 samples, 0.17%)</title><rect x="0.7180%" y="613" width="0.1717%" height="15" fill="rgb(233,208,19)" fg:x="92" fg:w="22"/><text x="0.9680%" y="623.50"></text></g><g><title>`0x7FFAE36EF591 (22 samples, 0.17%)</title><rect x="0.7180%" y="597" width="0.1717%" height="15" fill="rgb(216,164,2)" fg:x="92" fg:w="22"/><text x="0.9680%" y="607.50"></text></g><g><title>`0x7FFAE37269A2 (4 samples, 0.03%)</title><rect x="0.8584%" y="581" width="0.0312%" height="15" fill="rgb(220,129,5)" fg:x="110" fg:w="4"/><text x="1.1084%" y="591.50"></text></g><g><title>`0x7FFAE3727D7F (4 samples, 0.03%)</title><rect x="0.8584%" y="565" width="0.0312%" height="15" fill="rgb(242,17,10)" fg:x="110" fg:w="4"/><text x="1.1084%" y="575.50"></text></g><g><title>`0x7FFAE37286F4 (2 samples, 0.02%)</title><rect x="0.8740%" y="549" width="0.0156%" height="15" fill="rgb(242,107,0)" fg:x="112" fg:w="2"/><text x="1.1240%" y="559.50"></text></g><g><title>`0x7FFAE372822A (2 samples, 0.02%)</title><rect x="0.8740%" y="533" width="0.0156%" height="15" fill="rgb(251,28,31)" fg:x="112" fg:w="2"/><text x="1.1240%" y="543.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (5 samples, 0.04%)</title><rect x="0.8975%" y="757" width="0.0390%" height="15" fill="rgb(233,223,10)" fg:x="115" fg:w="5"/><text x="1.1475%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (5 samples, 0.04%)</title><rect x="0.8975%" y="741" width="0.0390%" height="15" fill="rgb(215,21,27)" fg:x="115" fg:w="5"/><text x="1.1475%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;ref$ (5 samples, 0.04%)</title><rect x="0.8975%" y="725" width="0.0390%" height="15" fill="rgb(232,23,21)" fg:x="115" fg:w="5"/><text x="1.1475%" y="735.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (4 samples, 0.03%)</title><rect x="0.9053%" y="709" width="0.0312%" height="15" fill="rgb(244,5,23)" fg:x="116" fg:w="4"/><text x="1.1553%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index (2 samples, 0.02%)</title><rect x="0.9833%" y="709" width="0.0156%" height="15" fill="rgb(226,81,46)" fg:x="126" fg:w="2"/><text x="1.2333%" y="719.50"></text></g><g><title>ant_colony.exe`core::str::pattern::StrSearcher::new (5 samples, 0.04%)</title><rect x="0.9833%" y="741" width="0.0390%" height="15" fill="rgb(247,70,30)" fg:x="126" fg:w="5"/><text x="1.2333%" y="751.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::new (5 samples, 0.04%)</title><rect x="0.9833%" y="725" width="0.0390%" height="15" fill="rgb(212,68,19)" fg:x="126" fg:w="5"/><text x="1.2333%" y="735.50"></text></g><g><title>ant_colony.exe`core::str::impl$0::split(ref$&lt;str$&gt;, ref$ (12 samples, 0.09%)</title><rect x="0.9365%" y="757" width="0.0936%" height="15" fill="rgb(240,187,13)" fg:x="120" fg:w="12"/><text x="1.1865%" y="767.50"></text></g><g><title>`0x7FFAE3775543 (3 samples, 0.02%)</title><rect x="1.0457%" y="725" width="0.0234%" height="15" fill="rgb(223,113,26)" fg:x="134" fg:w="3"/><text x="1.2957%" y="735.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;::expect(enum2$&lt;core::option::Option&lt;tuple$&lt;f64,ant_colony::graph::Graph&gt; &gt; &gt;, ref$ (101 samples, 0.79%)</title><rect x="0.3044%" y="789" width="0.7882%" height="15" fill="rgb(206,192,2)" fg:x="39" fg:w="101"/><text x="0.5544%" y="799.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::from_string (101 samples, 0.79%)</title><rect x="0.3044%" y="773" width="0.7882%" height="15" fill="rgb(241,108,4)" fg:x="39" fg:w="101"/><text x="0.5544%" y="783.50"></text></g><g><title>ant_colony.exe`core::str::iter::impl$61::next(core::str::iter::Split&lt;ref$ (8 samples, 0.06%)</title><rect x="1.0301%" y="757" width="0.0624%" height="15" fill="rgb(247,173,49)" fg:x="132" fg:w="8"/><text x="1.2801%" y="767.50"></text></g><g><title>ant_colony.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (8 samples, 0.06%)</title><rect x="1.0301%" y="741" width="0.0624%" height="15" fill="rgb(224,114,35)" fg:x="132" fg:w="8"/><text x="1.2801%" y="751.50"></text></g><g><title>ant_colony.exe`core::str::pattern::impl$33::next_match (2 samples, 0.02%)</title><rect x="1.0769%" y="725" width="0.0156%" height="15" fill="rgb(245,159,27)" fg:x="138" fg:w="2"/><text x="1.3269%" y="735.50"></text></g><g><title>ant_colony.exe`core::str::pattern::TwoWaySearcher::next(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2 samples, 0.02%)</title><rect x="1.0769%" y="709" width="0.0156%" height="15" fill="rgb(245,172,44)" fg:x="138" fg:w="2"/><text x="1.3269%" y="719.50"></text></g><g><title>ant_colony.exe`ant_colony::get_graphs (107 samples, 0.84%)</title><rect x="0.2653%" y="805" width="0.8350%" height="15" fill="rgb(236,23,11)" fg:x="34" fg:w="107"/><text x="0.5153%" y="815.50"></text></g><g><title>`0x7FFAE12FF85B (3 samples, 0.02%)</title><rect x="1.4281%" y="757" width="0.0234%" height="15" fill="rgb(205,117,38)" fg:x="183" fg:w="3"/><text x="1.6781%" y="767.50"></text></g><g><title>`0x7FFAE12FF8C1 (6 samples, 0.05%)</title><rect x="1.4671%" y="757" width="0.0468%" height="15" fill="rgb(237,72,25)" fg:x="188" fg:w="6"/><text x="1.7171%" y="767.50"></text></g><g><title>`0x7FFAE12FF8FA (2 samples, 0.02%)</title><rect x="1.5140%" y="757" width="0.0156%" height="15" fill="rgb(244,70,9)" fg:x="194" fg:w="2"/><text x="1.7640%" y="767.50"></text></g><g><title>`0x7FFAE12FF92B (2 samples, 0.02%)</title><rect x="1.5296%" y="757" width="0.0156%" height="15" fill="rgb(217,125,39)" fg:x="196" fg:w="2"/><text x="1.7796%" y="767.50"></text></g><g><title>`0x7FFAE12FF948 (3 samples, 0.02%)</title><rect x="1.5452%" y="757" width="0.0234%" height="15" fill="rgb(235,36,10)" fg:x="198" fg:w="3"/><text x="1.7952%" y="767.50"></text></g><g><title>`0x7FFAE12FF975 (5 samples, 0.04%)</title><rect x="1.5686%" y="757" width="0.0390%" height="15" fill="rgb(251,123,47)" fg:x="201" fg:w="5"/><text x="1.8186%" y="767.50"></text></g><g><title>`0x7FFAE12FF9C5 (2 samples, 0.02%)</title><rect x="1.6154%" y="757" width="0.0156%" height="15" fill="rgb(221,13,13)" fg:x="207" fg:w="2"/><text x="1.8654%" y="767.50"></text></g><g><title>`0x7FFAE12FF9F5 (5 samples, 0.04%)</title><rect x="1.6310%" y="757" width="0.0390%" height="15" fill="rgb(238,131,9)" fg:x="209" fg:w="5"/><text x="1.8810%" y="767.50"></text></g><g><title>`0x7FFAE12FFA17 (5 samples, 0.04%)</title><rect x="1.6700%" y="757" width="0.0390%" height="15" fill="rgb(211,50,8)" fg:x="214" fg:w="5"/><text x="1.9200%" y="767.50"></text></g><g><title>`0x7FFAE12FFA45 (4 samples, 0.03%)</title><rect x="1.7091%" y="757" width="0.0312%" height="15" fill="rgb(245,182,24)" fg:x="219" fg:w="4"/><text x="1.9591%" y="767.50"></text></g><g><title>`0x7FFAE12FFA7F (7 samples, 0.05%)</title><rect x="1.7403%" y="757" width="0.0546%" height="15" fill="rgb(242,14,37)" fg:x="223" fg:w="7"/><text x="1.9903%" y="767.50"></text></g><g><title>`0x7FFAE12FFA8B (2 samples, 0.02%)</title><rect x="1.7949%" y="757" width="0.0156%" height="15" fill="rgb(246,228,12)" fg:x="230" fg:w="2"/><text x="2.0449%" y="767.50"></text></g><g><title>`0x7FFAE12FFA93 (3 samples, 0.02%)</title><rect x="1.8105%" y="757" width="0.0234%" height="15" fill="rgb(213,55,15)" fg:x="232" fg:w="3"/><text x="2.0605%" y="767.50"></text></g><g><title>`0x7FFAE12FFA9F (7 samples, 0.05%)</title><rect x="1.8339%" y="757" width="0.0546%" height="15" fill="rgb(209,9,3)" fg:x="235" fg:w="7"/><text x="2.0839%" y="767.50"></text></g><g><title>`0x7FFAE12FFAA3 (10 samples, 0.08%)</title><rect x="1.8886%" y="757" width="0.0780%" height="15" fill="rgb(230,59,30)" fg:x="242" fg:w="10"/><text x="2.1386%" y="767.50"></text></g><g><title>`0x7FFAE12FFAA7 (4 samples, 0.03%)</title><rect x="1.9666%" y="757" width="0.0312%" height="15" fill="rgb(209,121,21)" fg:x="252" fg:w="4"/><text x="2.2166%" y="767.50"></text></g><g><title>`0x7FFAE12FFAAF (9 samples, 0.07%)</title><rect x="1.9978%" y="757" width="0.0702%" height="15" fill="rgb(220,109,13)" fg:x="256" fg:w="9"/><text x="2.2478%" y="767.50"></text></g><g><title>`0x7FFAE12FFAB7 (7 samples, 0.05%)</title><rect x="2.0681%" y="757" width="0.0546%" height="15" fill="rgb(232,18,1)" fg:x="265" fg:w="7"/><text x="2.3181%" y="767.50"></text></g><g><title>`0x7FFAE12FFABF (15 samples, 0.12%)</title><rect x="2.1227%" y="757" width="0.1171%" height="15" fill="rgb(215,41,42)" fg:x="272" fg:w="15"/><text x="2.3727%" y="767.50"></text></g><g><title>`0x7FFAE12FFAE3 (3 samples, 0.02%)</title><rect x="2.2475%" y="757" width="0.0234%" height="15" fill="rgb(224,123,36)" fg:x="288" fg:w="3"/><text x="2.4975%" y="767.50"></text></g><g><title>`0x7FFAE12FFAF9 (4 samples, 0.03%)</title><rect x="2.2710%" y="757" width="0.0312%" height="15" fill="rgb(240,125,3)" fg:x="291" fg:w="4"/><text x="2.5210%" y="767.50"></text></g><g><title>`0x7FFAE12FFAFD (2 samples, 0.02%)</title><rect x="2.3022%" y="757" width="0.0156%" height="15" fill="rgb(205,98,50)" fg:x="295" fg:w="2"/><text x="2.5522%" y="767.50"></text></g><g><title>`0x7FFAE12FFB01 (8 samples, 0.06%)</title><rect x="2.3178%" y="757" width="0.0624%" height="15" fill="rgb(205,185,37)" fg:x="297" fg:w="8"/><text x="2.5678%" y="767.50"></text></g><g><title>`0x7FFAE12FFB0F (4 samples, 0.03%)</title><rect x="2.3802%" y="757" width="0.0312%" height="15" fill="rgb(238,207,15)" fg:x="305" fg:w="4"/><text x="2.6302%" y="767.50"></text></g><g><title>`0x7FFAE12FFB13 (21 samples, 0.16%)</title><rect x="2.4114%" y="757" width="0.1639%" height="15" fill="rgb(213,199,42)" fg:x="309" fg:w="21"/><text x="2.6614%" y="767.50"></text></g><g><title>`0x7FFAE12FFB17 (3 samples, 0.02%)</title><rect x="2.5753%" y="757" width="0.0234%" height="15" fill="rgb(235,201,11)" fg:x="330" fg:w="3"/><text x="2.8253%" y="767.50"></text></g><g><title>`0x7FFAE12FFB38 (2 samples, 0.02%)</title><rect x="2.5987%" y="757" width="0.0156%" height="15" fill="rgb(207,46,11)" fg:x="333" fg:w="2"/><text x="2.8487%" y="767.50"></text></g><g><title>`0x7FFAE12FFB3C (4 samples, 0.03%)</title><rect x="2.6143%" y="757" width="0.0312%" height="15" fill="rgb(241,35,35)" fg:x="335" fg:w="4"/><text x="2.8643%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by(ref_mut$&lt;slice2$&lt;tuple$ (3 samples, 0.02%)</title><rect x="2.6455%" y="757" width="0.0234%" height="15" fill="rgb(243,32,47)" fg:x="339" fg:w="3"/><text x="2.8955%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::slice::stable_sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (3 samples, 0.02%)</title><rect x="2.6455%" y="741" width="0.0234%" height="15" fill="rgb(247,202,23)" fg:x="339" fg:w="3"/><text x="2.8955%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (3 samples, 0.02%)</title><rect x="2.6455%" y="725" width="0.0234%" height="15" fill="rgb(219,102,11)" fg:x="339" fg:w="3"/><text x="2.8955%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left&lt;tuple$&lt;f64,usize&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,usize&gt;,ant_colony::graph::impl$2::launch::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,usize&gt; &gt; &gt;, unsigned long long, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (3 samples, 0.02%)</title><rect x="2.6455%" y="709" width="0.0234%" height="15" fill="rgb(243,110,44)" fg:x="339" fg:w="3"/><text x="2.8955%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;f64,usize&gt;*, tuple$&lt;f64,usize&gt;*, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$ (3 samples, 0.02%)</title><rect x="2.6455%" y="693" width="0.0234%" height="15" fill="rgb(222,74,54)" fg:x="339" fg:w="3"/><text x="2.8955%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by::closure$0(alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,usize&gt;,ant_colony::graph::impl$2::launch::closure_env$0&gt;*, tuple$&lt;f64,usize&gt;*, tuple$ (2 samples, 0.02%)</title><rect x="2.6533%" y="677" width="0.0156%" height="15" fill="rgb(216,99,12)" fg:x="340" fg:w="2"/><text x="2.9033%" y="687.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::impl$2::launch::closure$0(ant_colony::graph::impl$2::launch::closure_env$0*, tuple$&lt;f64,usize&gt;*, tuple$ (2 samples, 0.02%)</title><rect x="2.6533%" y="661" width="0.0156%" height="15" fill="rgb(226,22,26)" fg:x="340" fg:w="2"/><text x="2.9033%" y="671.50"></text></g><g><title>ant_colony.exe`core::tuple::impl$15::partial_cmp(tuple$&lt;f64,usize&gt;*, tuple$ (2 samples, 0.02%)</title><rect x="2.6533%" y="645" width="0.0156%" height="15" fill="rgb(217,163,10)" fg:x="340" fg:w="2"/><text x="2.9033%" y="655.50"></text></g><g><title>`0x7FFAE372A07D (2 samples, 0.02%)</title><rect x="2.7392%" y="581" width="0.0156%" height="15" fill="rgb(213,25,53)" fg:x="351" fg:w="2"/><text x="2.9892%" y="591.50"></text></g><g><title>`0x7FFAE36EF164 (2 samples, 0.02%)</title><rect x="2.7392%" y="565" width="0.0156%" height="15" fill="rgb(252,105,26)" fg:x="351" fg:w="2"/><text x="2.9892%" y="575.50"></text></g><g><title>`0x7FFAE36EF591 (2 samples, 0.02%)</title><rect x="2.7392%" y="549" width="0.0156%" height="15" fill="rgb(220,39,43)" fg:x="351" fg:w="2"/><text x="2.9892%" y="559.50"></text></g><g><title>`0x7FFAE3847344 (2 samples, 0.02%)</title><rect x="2.7548%" y="565" width="0.0156%" height="15" fill="rgb(229,68,48)" fg:x="353" fg:w="2"/><text x="3.0048%" y="575.50"></text></g><g><title>`0x7FFAE3847353 (3 samples, 0.02%)</title><rect x="2.7782%" y="565" width="0.0234%" height="15" fill="rgb(252,8,32)" fg:x="356" fg:w="3"/><text x="3.0282%" y="575.50"></text></g><g><title>`0x7FFAE384735E (3 samples, 0.02%)</title><rect x="2.8016%" y="565" width="0.0234%" height="15" fill="rgb(223,20,43)" fg:x="359" fg:w="3"/><text x="3.0516%" y="575.50"></text></g><g><title>`0x7FFAE3847362 (4 samples, 0.03%)</title><rect x="2.8250%" y="565" width="0.0312%" height="15" fill="rgb(229,81,49)" fg:x="362" fg:w="4"/><text x="3.0750%" y="575.50"></text></g><g><title>`0x7FFAE3847413 (27 samples, 0.21%)</title><rect x="2.8719%" y="565" width="0.2107%" height="15" fill="rgb(236,28,36)" fg:x="368" fg:w="27"/><text x="3.1219%" y="575.50"></text></g><g><title>`0x7FFAE3847417 (18 samples, 0.14%)</title><rect x="3.0826%" y="565" width="0.1405%" height="15" fill="rgb(249,185,26)" fg:x="395" fg:w="18"/><text x="3.3326%" y="575.50"></text></g><g><title>`0x7FFAE372A199 (63 samples, 0.49%)</title><rect x="2.7548%" y="581" width="0.4916%" height="15" fill="rgb(249,174,33)" fg:x="353" fg:w="63"/><text x="3.0048%" y="591.50"></text></g><g><title>`0x7FFAE3709B68 (2 samples, 0.02%)</title><rect x="3.2543%" y="533" width="0.0156%" height="15" fill="rgb(233,201,37)" fg:x="417" fg:w="2"/><text x="3.5043%" y="543.50"></text></g><g><title>`0x7FFAE36F801E (2 samples, 0.02%)</title><rect x="3.2543%" y="517" width="0.0156%" height="15" fill="rgb(221,78,26)" fg:x="417" fg:w="2"/><text x="3.5043%" y="527.50"></text></g><g><title>`0x7FFAE37CB4C9 (2 samples, 0.02%)</title><rect x="3.2543%" y="501" width="0.0156%" height="15" fill="rgb(250,127,30)" fg:x="417" fg:w="2"/><text x="3.5043%" y="511.50"></text></g><g><title>`0x7FFAE3841EC4 (2 samples, 0.02%)</title><rect x="3.2543%" y="485" width="0.0156%" height="15" fill="rgb(230,49,44)" fg:x="417" fg:w="2"/><text x="3.5043%" y="495.50"></text></g><g><title>`0x7FFAE3709D1E (2 samples, 0.02%)</title><rect x="3.2699%" y="533" width="0.0156%" height="15" fill="rgb(229,67,23)" fg:x="419" fg:w="2"/><text x="3.5199%" y="543.50"></text></g><g><title>`0x7FFAE376802F (2 samples, 0.02%)</title><rect x="3.2699%" y="517" width="0.0156%" height="15" fill="rgb(249,83,47)" fg:x="419" fg:w="2"/><text x="3.5199%" y="527.50"></text></g><g><title>`0x7FFAE3841EC4 (2 samples, 0.02%)</title><rect x="3.2699%" y="501" width="0.0156%" height="15" fill="rgb(215,43,3)" fg:x="419" fg:w="2"/><text x="3.5199%" y="511.50"></text></g><g><title>`0x7FFAE36F49D6 (5 samples, 0.04%)</title><rect x="3.2543%" y="549" width="0.0390%" height="15" fill="rgb(238,154,13)" fg:x="417" fg:w="5"/><text x="3.5043%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::grow_one&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt; (80 samples, 0.62%)</title><rect x="2.7314%" y="741" width="0.6243%" height="15" fill="rgb(219,56,2)" fg:x="350" fg:w="80"/><text x="2.9814%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (80 samples, 0.62%)</title><rect x="2.7314%" y="725" width="0.6243%" height="15" fill="rgb(233,0,4)" fg:x="350" fg:w="80"/><text x="2.9814%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (80 samples, 0.62%)</title><rect x="2.7314%" y="709" width="0.6243%" height="15" fill="rgb(235,30,7)" fg:x="350" fg:w="80"/><text x="2.9814%" y="719.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (80 samples, 0.62%)</title><rect x="2.7314%" y="693" width="0.6243%" height="15" fill="rgb(250,79,13)" fg:x="350" fg:w="80"/><text x="2.9814%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (80 samples, 0.62%)</title><rect x="2.7314%" y="677" width="0.6243%" height="15" fill="rgb(211,146,34)" fg:x="350" fg:w="80"/><text x="2.9814%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (80 samples, 0.62%)</title><rect x="2.7314%" y="661" width="0.6243%" height="15" fill="rgb(228,22,38)" fg:x="350" fg:w="80"/><text x="2.9814%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (80 samples, 0.62%)</title><rect x="2.7314%" y="645" width="0.6243%" height="15" fill="rgb(235,168,5)" fg:x="350" fg:w="80"/><text x="2.9814%" y="655.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (80 samples, 0.62%)</title><rect x="2.7314%" y="629" width="0.6243%" height="15" fill="rgb(221,155,16)" fg:x="350" fg:w="80"/><text x="2.9814%" y="639.50"></text></g><g><title>`0x7FFAE3728F8D (80 samples, 0.62%)</title><rect x="2.7314%" y="613" width="0.6243%" height="15" fill="rgb(215,215,53)" fg:x="350" fg:w="80"/><text x="2.9814%" y="623.50"></text></g><g><title>`0x7FFAE3729235 (80 samples, 0.62%)</title><rect x="2.7314%" y="597" width="0.6243%" height="15" fill="rgb(223,4,10)" fg:x="350" fg:w="80"/><text x="2.9814%" y="607.50"></text></g><g><title>`0x7FFAE372A1AC (14 samples, 0.11%)</title><rect x="3.2464%" y="581" width="0.1093%" height="15" fill="rgb(234,103,6)" fg:x="416" fg:w="14"/><text x="3.4964%" y="591.50"></text></g><g><title>`0x7FFAE37759E0 (14 samples, 0.11%)</title><rect x="3.2464%" y="565" width="0.1093%" height="15" fill="rgb(227,97,0)" fg:x="416" fg:w="14"/><text x="3.4964%" y="575.50"></text></g><g><title>`0x7FFAE36F5578 (8 samples, 0.06%)</title><rect x="3.2933%" y="549" width="0.0624%" height="15" fill="rgb(234,150,53)" fg:x="422" fg:w="8"/><text x="3.5433%" y="559.50"></text></g><g><title>`0x7FFAE376802F (8 samples, 0.06%)</title><rect x="3.2933%" y="533" width="0.0624%" height="15" fill="rgb(228,201,54)" fg:x="422" fg:w="8"/><text x="3.5433%" y="543.50"></text></g><g><title>`0x7FFAE3841EC4 (8 samples, 0.06%)</title><rect x="3.2933%" y="517" width="0.0624%" height="15" fill="rgb(222,22,37)" fg:x="422" fg:w="8"/><text x="3.5433%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (144 samples, 1.12%)</title><rect x="2.6690%" y="757" width="1.1238%" height="15" fill="rgb(237,53,32)" fg:x="342" fg:w="144"/><text x="2.9190%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::write (55 samples, 0.43%)</title><rect x="3.3635%" y="741" width="0.4292%" height="15" fill="rgb(233,25,53)" fg:x="431" fg:w="55"/><text x="3.6135%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (4 samples, 0.03%)</title><rect x="3.8005%" y="757" width="0.0312%" height="15" fill="rgb(210,40,34)" fg:x="487" fg:w="4"/><text x="4.0505%" y="767.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (2 samples, 0.02%)</title><rect x="3.8161%" y="741" width="0.0156%" height="15" fill="rgb(241,220,44)" fg:x="489" fg:w="2"/><text x="4.0661%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_mut_slice (2 samples, 0.02%)</title><rect x="3.8161%" y="725" width="0.0156%" height="15" fill="rgb(235,28,35)" fg:x="489" fg:w="2"/><text x="4.0661%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="3.8161%" y="709" width="0.0156%" height="15" fill="rgb(210,56,17)" fg:x="489" fg:w="2"/><text x="4.0661%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::ptr (2 samples, 0.02%)</title><rect x="3.8161%" y="693" width="0.0156%" height="15" fill="rgb(224,130,29)" fg:x="489" fg:w="2"/><text x="4.0661%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.02%)</title><rect x="3.8161%" y="677" width="0.0156%" height="15" fill="rgb(235,212,8)" fg:x="489" fg:w="2"/><text x="4.0661%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.02%)</title><rect x="3.8161%" y="661" width="0.0156%" height="15" fill="rgb(223,33,50)" fg:x="489" fg:w="2"/><text x="4.0661%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;array$ (3 samples, 0.02%)</title><rect x="5.6735%" y="741" width="0.0234%" height="15" fill="rgb(219,149,13)" fg:x="727" fg:w="3"/><text x="5.9235%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::iter::Iter&lt;array$&lt;usize,2&gt; &gt;::new(ref$&lt;slice2$&lt;array$ (3 samples, 0.02%)</title><rect x="5.6735%" y="725" width="0.0234%" height="15" fill="rgb(250,156,29)" fg:x="727" fg:w="3"/><text x="5.9235%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (3 samples, 0.02%)</title><rect x="5.6735%" y="709" width="0.0234%" height="15" fill="rgb(216,193,19)" fg:x="727" fg:w="3"/><text x="5.9235%" y="719.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::gain_of_edge (380 samples, 2.97%)</title><rect x="5.6969%" y="741" width="2.9655%" height="15" fill="rgb(216,135,14)" fg:x="730" fg:w="380"/><text x="5.9469%" y="751.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (69 samples, 0.54%)</title><rect x="8.1239%" y="725" width="0.5385%" height="15" fill="rgb(241,47,5)" fg:x="1041" fg:w="69"/><text x="8.3739%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (69 samples, 0.54%)</title><rect x="8.1239%" y="709" width="0.5385%" height="15" fill="rgb(233,42,35)" fg:x="1041" fg:w="69"/><text x="8.3739%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (69 samples, 0.54%)</title><rect x="8.1239%" y="693" width="0.5385%" height="15" fill="rgb(231,13,6)" fg:x="1041" fg:w="69"/><text x="8.3739%" y="703.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (54 samples, 0.42%)</title><rect x="8.6624%" y="709" width="0.4214%" height="15" fill="rgb(207,181,40)" fg:x="1110" fg:w="54"/><text x="8.9124%" y="719.50"></text></g><g><title>ant_colony.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter&lt;array$ (138 samples, 1.08%)</title><rect x="8.6624%" y="741" width="1.0769%" height="15" fill="rgb(254,173,49)" fg:x="1110" fg:w="138"/><text x="8.9124%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (138 samples, 1.08%)</title><rect x="8.6624%" y="725" width="1.0769%" height="15" fill="rgb(221,1,38)" fg:x="1110" fg:w="138"/><text x="8.9124%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (84 samples, 0.66%)</title><rect x="9.0838%" y="709" width="0.6555%" height="15" fill="rgb(206,124,46)" fg:x="1164" fg:w="84"/><text x="9.3338%" y="719.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;array$ (13 samples, 0.10%)</title><rect x="9.9969%" y="725" width="0.1015%" height="15" fill="rgb(249,21,11)" fg:x="1281" fg:w="13"/><text x="10.2469%" y="735.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::get_chosen_edge (1,654 samples, 12.91%)</title><rect x="3.8396%" y="757" width="12.9078%" height="15" fill="rgb(222,201,40)" fg:x="492" fg:w="1654"/><text x="4.0896%" y="767.50">ant_colony.exe`ant_..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (898 samples, 7.01%)</title><rect x="9.7393%" y="741" width="7.0080%" height="15" fill="rgb(235,61,29)" fg:x="1248" fg:w="898"/><text x="9.9893%" y="751.50">ant_colon..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (852 samples, 6.65%)</title><rect x="10.0983%" y="725" width="6.6490%" height="15" fill="rgb(219,207,3)" fg:x="1294" fg:w="852"/><text x="10.3483%" y="735.50">ant_colon..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (2 samples, 0.02%)</title><rect x="16.7785%" y="741" width="0.0156%" height="15" fill="rgb(222,56,46)" fg:x="2150" fg:w="2"/><text x="17.0285%" y="751.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (2 samples, 0.02%)</title><rect x="16.7941%" y="741" width="0.0156%" height="15" fill="rgb(239,76,54)" fg:x="2152" fg:w="2"/><text x="17.0441%" y="751.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::init_origin (10 samples, 0.08%)</title><rect x="16.7473%" y="757" width="0.0780%" height="15" fill="rgb(231,124,27)" fg:x="2146" fg:w="10"/><text x="16.9973%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (4 samples, 0.03%)</title><rect x="16.9268%" y="725" width="0.0312%" height="15" fill="rgb(249,195,6)" fg:x="2169" fg:w="4"/><text x="17.1768%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (70 samples, 0.55%)</title><rect x="16.8332%" y="741" width="0.5463%" height="15" fill="rgb(237,174,47)" fg:x="2157" fg:w="70"/><text x="17.0832%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::read (54 samples, 0.42%)</title><rect x="16.9580%" y="725" width="0.4214%" height="15" fill="rgb(206,201,31)" fg:x="2173" fg:w="54"/><text x="17.2080%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (37 samples, 0.29%)</title><rect x="17.3794%" y="709" width="0.2887%" height="15" fill="rgb(231,57,52)" fg:x="2227" fg:w="37"/><text x="17.6294%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_ptr (37 samples, 0.29%)</title><rect x="17.3794%" y="693" width="0.2887%" height="15" fill="rgb(248,177,22)" fg:x="2227" fg:w="37"/><text x="17.6294%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (37 samples, 0.29%)</title><rect x="17.3794%" y="677" width="0.2887%" height="15" fill="rgb(215,211,37)" fg:x="2227" fg:w="37"/><text x="17.6294%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (37 samples, 0.29%)</title><rect x="17.3794%" y="661" width="0.2887%" height="15" fill="rgb(241,128,51)" fg:x="2227" fg:w="37"/><text x="17.6294%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (37 samples, 0.29%)</title><rect x="17.3794%" y="645" width="0.2887%" height="15" fill="rgb(227,165,31)" fg:x="2227" fg:w="37"/><text x="17.6294%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (38 samples, 0.30%)</title><rect x="17.3794%" y="741" width="0.2966%" height="15" fill="rgb(228,167,24)" fg:x="2227" fg:w="38"/><text x="17.6294%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (38 samples, 0.30%)</title><rect x="17.3794%" y="725" width="0.2966%" height="15" fill="rgb(228,143,12)" fg:x="2227" fg:w="38"/><text x="17.6294%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::set_len (4 samples, 0.03%)</title><rect x="29.8502%" y="709" width="0.0312%" height="15" fill="rgb(249,149,8)" fg:x="3825" fg:w="4"/><text x="30.1002%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::swap_remove (625 samples, 4.88%)</title><rect x="27.2983%" y="725" width="4.8775%" height="15" fill="rgb(243,35,44)" fg:x="3498" fg:w="625"/><text x="27.5483%" y="735.50">ant_co..</text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::add (294 samples, 2.29%)</title><rect x="29.8814%" y="709" width="2.2944%" height="15" fill="rgb(246,89,9)" fg:x="3829" fg:w="294"/><text x="30.1314%" y="719.50">a..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges1 (2,276 samples, 17.76%)</title><rect x="17.6760%" y="741" width="17.7618%" height="15" fill="rgb(233,213,13)" fg:x="2265" fg:w="2276"/><text x="17.9260%" y="751.50">ant_colony.exe`ant_colony::g..</text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;array$ (418 samples, 3.26%)</title><rect x="32.1757%" y="725" width="3.2621%" height="15" fill="rgb(233,141,41)" fg:x="4123" fg:w="418"/><text x="32.4257%" y="735.50">ant..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;array$ (418 samples, 3.26%)</title><rect x="32.1757%" y="709" width="3.2621%" height="15" fill="rgb(239,167,4)" fg:x="4123" fg:w="418"/><text x="32.4257%" y="719.50">ant..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;array$ (418 samples, 3.26%)</title><rect x="32.1757%" y="693" width="3.2621%" height="15" fill="rgb(209,217,16)" fg:x="4123" fg:w="418"/><text x="32.4257%" y="703.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (23 samples, 0.18%)</title><rect x="38.5828%" y="709" width="0.1795%" height="15" fill="rgb(219,88,35)" fg:x="4944" fg:w="23"/><text x="38.8328%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (21 samples, 0.16%)</title><rect x="38.5984%" y="693" width="0.1639%" height="15" fill="rgb(220,193,23)" fg:x="4946" fg:w="21"/><text x="38.8484%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (21 samples, 0.16%)</title><rect x="38.5984%" y="677" width="0.1639%" height="15" fill="rgb(230,90,52)" fg:x="4946" fg:w="21"/><text x="38.8484%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (21 samples, 0.16%)</title><rect x="38.5984%" y="661" width="0.1639%" height="15" fill="rgb(252,106,19)" fg:x="4946" fg:w="21"/><text x="38.8484%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (261 samples, 2.04%)</title><rect x="36.8269%" y="725" width="2.0368%" height="15" fill="rgb(206,74,20)" fg:x="4719" fg:w="261"/><text x="37.0769%" y="735.50">a..</text></g><g><title>ant_colony.exe`core::ptr::write (13 samples, 0.10%)</title><rect x="38.7623%" y="709" width="0.1015%" height="15" fill="rgb(230,138,44)" fg:x="4967" fg:w="13"/><text x="39.0123%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_slice (60 samples, 0.47%)</title><rect x="38.8637%" y="693" width="0.4682%" height="15" fill="rgb(235,182,43)" fg:x="4980" fg:w="60"/><text x="39.1137%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;bool,alloc::alloc::Global&gt;::as_ptr (43 samples, 0.34%)</title><rect x="38.9964%" y="677" width="0.3356%" height="15" fill="rgb(242,16,51)" fg:x="4997" fg:w="43"/><text x="39.2464%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::ptr (43 samples, 0.34%)</title><rect x="38.9964%" y="661" width="0.3356%" height="15" fill="rgb(248,9,4)" fg:x="4997" fg:w="43"/><text x="39.2464%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (43 samples, 0.34%)</title><rect x="38.9964%" y="645" width="0.3356%" height="15" fill="rgb(210,31,22)" fg:x="4997" fg:w="43"/><text x="39.2464%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (43 samples, 0.34%)</title><rect x="38.9964%" y="629" width="0.3356%" height="15" fill="rgb(239,54,39)" fg:x="4997" fg:w="43"/><text x="39.2464%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (73 samples, 0.57%)</title><rect x="38.8637%" y="725" width="0.5697%" height="15" fill="rgb(230,99,41)" fg:x="4980" fg:w="73"/><text x="39.1137%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (73 samples, 0.57%)</title><rect x="38.8637%" y="709" width="0.5697%" height="15" fill="rgb(253,106,12)" fg:x="4980" fg:w="73"/><text x="39.1137%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (13 samples, 0.10%)</title><rect x="39.3320%" y="693" width="0.1015%" height="15" fill="rgb(213,46,41)" fg:x="5040" fg:w="13"/><text x="39.5820%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (4 samples, 0.03%)</title><rect x="40.6118%" y="709" width="0.0312%" height="15" fill="rgb(215,133,35)" fg:x="5204" fg:w="4"/><text x="40.8618%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (4 samples, 0.03%)</title><rect x="40.6118%" y="693" width="0.0312%" height="15" fill="rgb(213,28,5)" fg:x="5204" fg:w="4"/><text x="40.8618%" y="703.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (4 samples, 0.03%)</title><rect x="40.6118%" y="677" width="0.0312%" height="15" fill="rgb(215,77,49)" fg:x="5204" fg:w="4"/><text x="40.8618%" y="687.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (159 samples, 1.24%)</title><rect x="39.4334%" y="725" width="1.2408%" height="15" fill="rgb(248,100,22)" fg:x="5053" fg:w="159"/><text x="39.6834%" y="735.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (4 samples, 0.03%)</title><rect x="40.6430%" y="709" width="0.0312%" height="15" fill="rgb(208,67,9)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (4 samples, 0.03%)</title><rect x="40.6430%" y="693" width="0.0312%" height="15" fill="rgb(219,133,21)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 0.03%)</title><rect x="40.6430%" y="677" width="0.0312%" height="15" fill="rgb(246,46,29)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (4 samples, 0.03%)</title><rect x="40.6430%" y="661" width="0.0312%" height="15" fill="rgb(246,185,52)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.03%)</title><rect x="40.6430%" y="645" width="0.0312%" height="15" fill="rgb(252,136,11)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="40.6430%" y="629" width="0.0312%" height="15" fill="rgb(219,138,53)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="40.6430%" y="613" width="0.0312%" height="15" fill="rgb(211,51,23)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="40.6430%" y="597" width="0.0312%" height="15" fill="rgb(247,221,28)" fg:x="5208" fg:w="4"/><text x="40.8930%" y="607.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges (3,314 samples, 25.86%)</title><rect x="16.8253%" y="757" width="25.8623%" height="15" fill="rgb(251,222,45)" fg:x="2156" fg:w="3314"/><text x="17.0753%" y="767.50">ant_colony.exe`ant_colony::graph::ACO::up..</text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::update_possible_edges2 (929 samples, 7.25%)</title><rect x="35.4378%" y="741" width="7.2499%" height="15" fill="rgb(217,162,53)" fg:x="4541" fg:w="929"/><text x="35.6878%" y="751.50">ant_colony..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (258 samples, 2.01%)</title><rect x="40.6743%" y="725" width="2.0134%" height="15" fill="rgb(229,93,14)" fg:x="5212" fg:w="258"/><text x="40.9243%" y="735.50">a..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (243 samples, 1.90%)</title><rect x="40.7913%" y="709" width="1.8964%" height="15" fill="rgb(209,67,49)" fg:x="5227" fg:w="243"/><text x="41.0413%" y="719.50">a..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (27 samples, 0.21%)</title><rect x="42.8438%" y="741" width="0.2107%" height="15" fill="rgb(213,87,29)" fg:x="5490" fg:w="27"/><text x="43.0938%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (27 samples, 0.21%)</title><rect x="42.8438%" y="725" width="0.2107%" height="15" fill="rgb(205,151,52)" fg:x="5490" fg:w="27"/><text x="43.0938%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (27 samples, 0.21%)</title><rect x="42.8438%" y="709" width="0.2107%" height="15" fill="rgb(253,215,39)" fg:x="5490" fg:w="27"/><text x="43.0938%" y="719.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (124 samples, 0.97%)</title><rect x="43.0545%" y="741" width="0.9677%" height="15" fill="rgb(221,220,41)" fg:x="5517" fg:w="124"/><text x="43.3045%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (10 samples, 0.08%)</title><rect x="43.9441%" y="725" width="0.0780%" height="15" fill="rgb(218,133,21)" fg:x="5631" fg:w="10"/><text x="44.1941%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (10 samples, 0.08%)</title><rect x="43.9441%" y="709" width="0.0780%" height="15" fill="rgb(221,193,43)" fg:x="5631" fg:w="10"/><text x="44.1941%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_slice (10 samples, 0.08%)</title><rect x="43.9441%" y="693" width="0.0780%" height="15" fill="rgb(240,128,52)" fg:x="5631" fg:w="10"/><text x="44.1941%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.03%)</title><rect x="43.9909%" y="677" width="0.0312%" height="15" fill="rgb(253,114,12)" fg:x="5637" fg:w="4"/><text x="44.2409%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="43.9909%" y="661" width="0.0312%" height="15" fill="rgb(215,223,47)" fg:x="5637" fg:w="4"/><text x="44.2409%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="43.9909%" y="645" width="0.0312%" height="15" fill="rgb(248,225,23)" fg:x="5637" fg:w="4"/><text x="44.2409%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="43.9909%" y="629" width="0.0312%" height="15" fill="rgb(250,108,0)" fg:x="5637" fg:w="4"/><text x="44.2409%" y="639.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::add_edge_unckecked (189 samples, 1.47%)</title><rect x="42.6877%" y="757" width="1.4749%" height="15" fill="rgb(228,208,7)" fg:x="5470" fg:w="189"/><text x="42.9377%" y="767.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::incr_neighboor_count_unchecked (18 samples, 0.14%)</title><rect x="44.0222%" y="741" width="0.1405%" height="15" fill="rgb(244,45,10)" fg:x="5641" fg:w="18"/><text x="44.2722%" y="751.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::clear (12 samples, 0.09%)</title><rect x="44.1626%" y="757" width="0.0936%" height="15" fill="rgb(207,125,25)" fg:x="5659" fg:w="12"/><text x="44.4126%" y="767.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (8 samples, 0.06%)</title><rect x="44.1939%" y="741" width="0.0624%" height="15" fill="rgb(210,195,18)" fg:x="5663" fg:w="8"/><text x="44.4439%" y="751.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (8 samples, 0.06%)</title><rect x="44.1939%" y="725" width="0.0624%" height="15" fill="rgb(249,80,12)" fg:x="5663" fg:w="8"/><text x="44.4439%" y="735.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (8 samples, 0.06%)</title><rect x="44.1939%" y="709" width="0.0624%" height="15" fill="rgb(221,65,9)" fg:x="5663" fg:w="8"/><text x="44.4439%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (10 samples, 0.08%)</title><rect x="44.8104%" y="725" width="0.0780%" height="15" fill="rgb(235,49,36)" fg:x="5742" fg:w="10"/><text x="45.0604%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (10 samples, 0.08%)</title><rect x="44.8104%" y="709" width="0.0780%" height="15" fill="rgb(225,32,20)" fg:x="5742" fg:w="10"/><text x="45.0604%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (10 samples, 0.08%)</title><rect x="44.8104%" y="693" width="0.0780%" height="15" fill="rgb(215,141,46)" fg:x="5742" fg:w="10"/><text x="45.0604%" y="703.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx2(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (96 samples, 0.75%)</title><rect x="44.2563%" y="741" width="0.7492%" height="15" fill="rgb(250,160,47)" fg:x="5671" fg:w="96"/><text x="44.5063%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (15 samples, 0.12%)</title><rect x="44.8884%" y="725" width="0.1171%" height="15" fill="rgb(216,222,40)" fg:x="5752" fg:w="15"/><text x="45.1384%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (14 samples, 0.11%)</title><rect x="44.8962%" y="709" width="0.1093%" height="15" fill="rgb(234,217,39)" fg:x="5753" fg:w="14"/><text x="45.1462%" y="719.50"></text></g><g><title>`0x7FFAAE7628A4 (11 samples, 0.09%)</title><rect x="45.1069%" y="725" width="0.0858%" height="15" fill="rgb(207,178,40)" fg:x="5780" fg:w="11"/><text x="45.3569%" y="735.50"></text></g><g><title>`0x7FFAAE7628A9 (4 samples, 0.03%)</title><rect x="45.1928%" y="725" width="0.0312%" height="15" fill="rgb(221,136,13)" fg:x="5791" fg:w="4"/><text x="45.4428%" y="735.50"></text></g><g><title>`0x7FFAAE7628AE (11 samples, 0.09%)</title><rect x="45.2240%" y="725" width="0.0858%" height="15" fill="rgb(249,199,10)" fg:x="5795" fg:w="11"/><text x="45.4740%" y="735.50"></text></g><g><title>`0x7FFAAE7628B3 (3 samples, 0.02%)</title><rect x="45.3098%" y="725" width="0.0234%" height="15" fill="rgb(249,222,13)" fg:x="5806" fg:w="3"/><text x="45.5598%" y="735.50"></text></g><g><title>`0x7FFAAE7628BB (4 samples, 0.03%)</title><rect x="45.3332%" y="725" width="0.0312%" height="15" fill="rgb(244,185,38)" fg:x="5809" fg:w="4"/><text x="45.5832%" y="735.50"></text></g><g><title>`0x7FFAAE7628C3 (2 samples, 0.02%)</title><rect x="45.3644%" y="725" width="0.0156%" height="15" fill="rgb(236,202,9)" fg:x="5813" fg:w="2"/><text x="45.6144%" y="735.50"></text></g><g><title>`0x7FFAAE7628CB (3 samples, 0.02%)</title><rect x="45.3801%" y="725" width="0.0234%" height="15" fill="rgb(250,229,37)" fg:x="5815" fg:w="3"/><text x="45.6301%" y="735.50"></text></g><g><title>`0x7FFAAE7628D3 (4 samples, 0.03%)</title><rect x="45.4035%" y="725" width="0.0312%" height="15" fill="rgb(206,174,23)" fg:x="5818" fg:w="4"/><text x="45.6535%" y="735.50"></text></g><g><title>`0x7FFAAE762901 (2 samples, 0.02%)</title><rect x="45.4503%" y="725" width="0.0156%" height="15" fill="rgb(211,33,43)" fg:x="5824" fg:w="2"/><text x="45.7003%" y="735.50"></text></g><g><title>`0x7FFAE2FA4980 (2 samples, 0.02%)</title><rect x="45.4737%" y="661" width="0.0156%" height="15" fill="rgb(245,58,50)" fg:x="5827" fg:w="2"/><text x="45.7237%" y="671.50"></text></g><g><title>`0x7FFAE37753C0 (3 samples, 0.02%)</title><rect x="45.4893%" y="661" width="0.0234%" height="15" fill="rgb(244,68,36)" fg:x="5829" fg:w="3"/><text x="45.7393%" y="671.50"></text></g><g><title>`0x7FFAE37753C5 (2 samples, 0.02%)</title><rect x="45.5127%" y="661" width="0.0156%" height="15" fill="rgb(232,229,15)" fg:x="5832" fg:w="2"/><text x="45.7627%" y="671.50"></text></g><g><title>`0x7FFAE37753D0 (2 samples, 0.02%)</title><rect x="45.5361%" y="661" width="0.0156%" height="15" fill="rgb(254,30,23)" fg:x="5835" fg:w="2"/><text x="45.7861%" y="671.50"></text></g><g><title>`0x7FFAE37753D7 (2 samples, 0.02%)</title><rect x="45.5517%" y="661" width="0.0156%" height="15" fill="rgb(235,160,14)" fg:x="5837" fg:w="2"/><text x="45.8017%" y="671.50"></text></g><g><title>`0x7FFAE37753E0 (2 samples, 0.02%)</title><rect x="45.5673%" y="661" width="0.0156%" height="15" fill="rgb(212,155,44)" fg:x="5839" fg:w="2"/><text x="45.8173%" y="671.50"></text></g><g><title>`0x7FFAE37753FD (2 samples, 0.02%)</title><rect x="45.6064%" y="661" width="0.0156%" height="15" fill="rgb(226,2,50)" fg:x="5844" fg:w="2"/><text x="45.8564%" y="671.50"></text></g><g><title>`0x7FFAE3775403 (2 samples, 0.02%)</title><rect x="45.6220%" y="661" width="0.0156%" height="15" fill="rgb(234,177,6)" fg:x="5846" fg:w="2"/><text x="45.8720%" y="671.50"></text></g><g><title>`0x7FFAE377540A (2 samples, 0.02%)</title><rect x="45.6376%" y="661" width="0.0156%" height="15" fill="rgb(217,24,9)" fg:x="5848" fg:w="2"/><text x="45.8876%" y="671.50"></text></g><g><title>`0x7FFAE3775421 (3 samples, 0.02%)</title><rect x="45.6610%" y="661" width="0.0234%" height="15" fill="rgb(220,13,46)" fg:x="5851" fg:w="3"/><text x="45.9110%" y="671.50"></text></g><g><title>`0x7FFAE3775447 (5 samples, 0.04%)</title><rect x="45.7000%" y="661" width="0.0390%" height="15" fill="rgb(239,221,27)" fg:x="5856" fg:w="5"/><text x="45.9500%" y="671.50"></text></g><g><title>`0x7FFAE377544B (6 samples, 0.05%)</title><rect x="45.7390%" y="661" width="0.0468%" height="15" fill="rgb(222,198,25)" fg:x="5861" fg:w="6"/><text x="45.9890%" y="671.50"></text></g><g><title>`0x7FFAE3775451 (2 samples, 0.02%)</title><rect x="45.7859%" y="661" width="0.0156%" height="15" fill="rgb(211,99,13)" fg:x="5867" fg:w="2"/><text x="46.0359%" y="671.50"></text></g><g><title>`0x7FFAE377545E (2 samples, 0.02%)</title><rect x="45.8015%" y="661" width="0.0156%" height="15" fill="rgb(232,111,31)" fg:x="5869" fg:w="2"/><text x="46.0515%" y="671.50"></text></g><g><title>`0x7FFAE3775464 (2 samples, 0.02%)</title><rect x="45.8171%" y="661" width="0.0156%" height="15" fill="rgb(245,82,37)" fg:x="5871" fg:w="2"/><text x="46.0671%" y="671.50"></text></g><g><title>`0x7FFAE377549D (22 samples, 0.17%)</title><rect x="45.8483%" y="661" width="0.1717%" height="15" fill="rgb(227,149,46)" fg:x="5875" fg:w="22"/><text x="46.0983%" y="671.50"></text></g><g><title>`0x7FFAE37754B4 (21 samples, 0.16%)</title><rect x="46.0200%" y="661" width="0.1639%" height="15" fill="rgb(218,36,50)" fg:x="5897" fg:w="21"/><text x="46.2700%" y="671.50"></text></g><g><title>`0x7FFAE37754B8 (32 samples, 0.25%)</title><rect x="46.1839%" y="661" width="0.2497%" height="15" fill="rgb(226,80,48)" fg:x="5918" fg:w="32"/><text x="46.4339%" y="671.50"></text></g><g><title>`0x7FFAE37754C5 (5 samples, 0.04%)</title><rect x="46.4336%" y="661" width="0.0390%" height="15" fill="rgb(238,224,15)" fg:x="5950" fg:w="5"/><text x="46.6836%" y="671.50"></text></g><g><title>`0x7FFAE37754CA (5 samples, 0.04%)</title><rect x="46.4726%" y="661" width="0.0390%" height="15" fill="rgb(241,136,10)" fg:x="5955" fg:w="5"/><text x="46.7226%" y="671.50"></text></g><g><title>`0x7FFAE37754CE (11 samples, 0.09%)</title><rect x="46.5116%" y="661" width="0.0858%" height="15" fill="rgb(208,32,45)" fg:x="5960" fg:w="11"/><text x="46.7616%" y="671.50"></text></g><g><title>`0x7FFAE37754D7 (4 samples, 0.03%)</title><rect x="46.5975%" y="661" width="0.0312%" height="15" fill="rgb(207,135,9)" fg:x="5971" fg:w="4"/><text x="46.8475%" y="671.50"></text></g><g><title>`0x7FFAE37754E0 (2 samples, 0.02%)</title><rect x="46.6287%" y="661" width="0.0156%" height="15" fill="rgb(206,86,44)" fg:x="5975" fg:w="2"/><text x="46.8787%" y="671.50"></text></g><g><title>`0x7FFAE377550A (2 samples, 0.02%)</title><rect x="46.6443%" y="661" width="0.0156%" height="15" fill="rgb(245,177,15)" fg:x="5977" fg:w="2"/><text x="46.8943%" y="671.50"></text></g><g><title>`0x7FFAE377550F (8 samples, 0.06%)</title><rect x="46.6599%" y="661" width="0.0624%" height="15" fill="rgb(206,64,50)" fg:x="5979" fg:w="8"/><text x="46.9099%" y="671.50"></text></g><g><title>`0x7FFAE377552D (2 samples, 0.02%)</title><rect x="46.7223%" y="661" width="0.0156%" height="15" fill="rgb(234,36,40)" fg:x="5987" fg:w="2"/><text x="46.9723%" y="671.50"></text></g><g><title>`0x7FFAE3775543 (72 samples, 0.56%)</title><rect x="46.7379%" y="661" width="0.5619%" height="15" fill="rgb(213,64,8)" fg:x="5989" fg:w="72"/><text x="46.9879%" y="671.50"></text></g><g><title>`0x7FFAE3775563 (4 samples, 0.03%)</title><rect x="47.2998%" y="661" width="0.0312%" height="15" fill="rgb(210,75,36)" fg:x="6061" fg:w="4"/><text x="47.5498%" y="671.50"></text></g><g><title>`0x7FFAE37755AB (3 samples, 0.02%)</title><rect x="47.3310%" y="661" width="0.0234%" height="15" fill="rgb(229,88,21)" fg:x="6065" fg:w="3"/><text x="47.5810%" y="671.50"></text></g><g><title>`0x7FFAE37755BF (5 samples, 0.04%)</title><rect x="47.3545%" y="661" width="0.0390%" height="15" fill="rgb(252,204,47)" fg:x="6068" fg:w="5"/><text x="47.6045%" y="671.50"></text></g><g><title>`0x7FFAE377564A (3 samples, 0.02%)</title><rect x="47.3935%" y="661" width="0.0234%" height="15" fill="rgb(208,77,27)" fg:x="6073" fg:w="3"/><text x="47.6435%" y="671.50"></text></g><g><title>`0x7FFAE3775659 (20 samples, 0.16%)</title><rect x="47.4247%" y="661" width="0.1561%" height="15" fill="rgb(221,76,26)" fg:x="6077" fg:w="20"/><text x="47.6747%" y="671.50"></text></g><g><title>`0x7FFAE3775748 (10 samples, 0.08%)</title><rect x="47.5808%" y="661" width="0.0780%" height="15" fill="rgb(225,139,18)" fg:x="6097" fg:w="10"/><text x="47.8308%" y="671.50"></text></g><g><title>`0x7FFAE3775752 (6 samples, 0.05%)</title><rect x="47.6588%" y="661" width="0.0468%" height="15" fill="rgb(230,137,11)" fg:x="6107" fg:w="6"/><text x="47.9088%" y="671.50"></text></g><g><title>`0x7FFAE37759F4 (5 samples, 0.04%)</title><rect x="47.7134%" y="661" width="0.0390%" height="15" fill="rgb(212,28,1)" fg:x="6114" fg:w="5"/><text x="47.9634%" y="671.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_dealloc (3 samples, 0.02%)</title><rect x="47.7525%" y="661" width="0.0234%" height="15" fill="rgb(248,164,17)" fg:x="6119" fg:w="3"/><text x="48.0025%" y="671.50"></text></g><g><title>`0x7FFAE36EE69B (2 samples, 0.02%)</title><rect x="71.7418%" y="565" width="0.0156%" height="15" fill="rgb(222,171,42)" fg:x="9193" fg:w="2"/><text x="71.9918%" y="575.50"></text></g><g><title>`0x7FFAE36EE6B2 (5 samples, 0.04%)</title><rect x="71.7575%" y="565" width="0.0390%" height="15" fill="rgb(243,84,45)" fg:x="9195" fg:w="5"/><text x="72.0075%" y="575.50"></text></g><g><title>`0x7FFAE36EF15D (6 samples, 0.05%)</title><rect x="71.7965%" y="565" width="0.0468%" height="15" fill="rgb(252,49,23)" fg:x="9200" fg:w="6"/><text x="72.0465%" y="575.50"></text></g><g><title>`0x7FFAE36EF1C0 (3 samples, 0.02%)</title><rect x="71.8511%" y="549" width="0.0234%" height="15" fill="rgb(215,19,7)" fg:x="9207" fg:w="3"/><text x="72.1011%" y="559.50"></text></g><g><title>`0x7FFAE36EF1D7 (2 samples, 0.02%)</title><rect x="71.8745%" y="549" width="0.0156%" height="15" fill="rgb(238,81,41)" fg:x="9210" fg:w="2"/><text x="72.1245%" y="559.50"></text></g><g><title>`0x7FFAE36EF1FA (8 samples, 0.06%)</title><rect x="71.8901%" y="549" width="0.0624%" height="15" fill="rgb(210,199,37)" fg:x="9212" fg:w="8"/><text x="72.1401%" y="559.50"></text></g><g><title>`0x7FFAE36EF21F (4 samples, 0.03%)</title><rect x="71.9526%" y="549" width="0.0312%" height="15" fill="rgb(244,192,49)" fg:x="9220" fg:w="4"/><text x="72.2026%" y="559.50"></text></g><g><title>`0x7FFAE36EF24E (3 samples, 0.02%)</title><rect x="71.9838%" y="549" width="0.0234%" height="15" fill="rgb(226,211,11)" fg:x="9224" fg:w="3"/><text x="72.2338%" y="559.50"></text></g><g><title>`0x7FFAE36EF26B (8 samples, 0.06%)</title><rect x="72.0150%" y="549" width="0.0624%" height="15" fill="rgb(236,162,54)" fg:x="9228" fg:w="8"/><text x="72.2650%" y="559.50"></text></g><g><title>`0x7FFAE36EF29B (5 samples, 0.04%)</title><rect x="72.0774%" y="549" width="0.0390%" height="15" fill="rgb(220,229,9)" fg:x="9236" fg:w="5"/><text x="72.3274%" y="559.50"></text></g><g><title>`0x7FFAE36EF8C0 (4 samples, 0.03%)</title><rect x="72.1164%" y="533" width="0.0312%" height="15" fill="rgb(250,87,22)" fg:x="9241" fg:w="4"/><text x="72.3664%" y="543.50"></text></g><g><title>`0x7FFAE36EF8D5 (2 samples, 0.02%)</title><rect x="72.1477%" y="533" width="0.0156%" height="15" fill="rgb(239,43,17)" fg:x="9245" fg:w="2"/><text x="72.3977%" y="543.50"></text></g><g><title>`0x7FFAE36EF8F5 (9 samples, 0.07%)</title><rect x="72.1633%" y="533" width="0.0702%" height="15" fill="rgb(231,177,25)" fg:x="9247" fg:w="9"/><text x="72.4133%" y="543.50"></text></g><g><title>`0x7FFAE36EF91C (4 samples, 0.03%)</title><rect x="72.2413%" y="533" width="0.0312%" height="15" fill="rgb(219,179,1)" fg:x="9257" fg:w="4"/><text x="72.4913%" y="543.50"></text></g><g><title>`0x7FFAE36EF9A7 (2 samples, 0.02%)</title><rect x="72.2881%" y="533" width="0.0156%" height="15" fill="rgb(238,219,53)" fg:x="9263" fg:w="2"/><text x="72.5381%" y="543.50"></text></g><g><title>`0x7FFAE36EF9AB (5 samples, 0.04%)</title><rect x="72.3037%" y="533" width="0.0390%" height="15" fill="rgb(232,167,36)" fg:x="9265" fg:w="5"/><text x="72.5537%" y="543.50"></text></g><g><title>`0x7FFAE36EF9D6 (2 samples, 0.02%)</title><rect x="72.3428%" y="533" width="0.0156%" height="15" fill="rgb(244,19,51)" fg:x="9270" fg:w="2"/><text x="72.5928%" y="543.50"></text></g><g><title>`0x7FFAE36EFA25 (2 samples, 0.02%)</title><rect x="72.3584%" y="533" width="0.0156%" height="15" fill="rgb(224,6,22)" fg:x="9272" fg:w="2"/><text x="72.6084%" y="543.50"></text></g><g><title>`0x7FFAE36EFA31 (4 samples, 0.03%)</title><rect x="72.3740%" y="533" width="0.0312%" height="15" fill="rgb(224,145,5)" fg:x="9274" fg:w="4"/><text x="72.6240%" y="543.50"></text></g><g><title>`0x7FFAE36EFA38 (3 samples, 0.02%)</title><rect x="72.4052%" y="533" width="0.0234%" height="15" fill="rgb(234,130,49)" fg:x="9278" fg:w="3"/><text x="72.6552%" y="543.50"></text></g><g><title>`0x7FFAE36EFA5B (3 samples, 0.02%)</title><rect x="72.4286%" y="533" width="0.0234%" height="15" fill="rgb(254,6,2)" fg:x="9281" fg:w="3"/><text x="72.6786%" y="543.50"></text></g><g><title>`0x7FFAE36EFA8D (6 samples, 0.05%)</title><rect x="72.4598%" y="533" width="0.0468%" height="15" fill="rgb(208,96,46)" fg:x="9285" fg:w="6"/><text x="72.7098%" y="543.50"></text></g><g><title>`0x7FFAE36EFACE (9 samples, 0.07%)</title><rect x="72.5066%" y="533" width="0.0702%" height="15" fill="rgb(239,3,39)" fg:x="9291" fg:w="9"/><text x="72.7566%" y="543.50"></text></g><g><title>`0x7FFAE36EFB00 (6 samples, 0.05%)</title><rect x="72.5769%" y="533" width="0.0468%" height="15" fill="rgb(233,210,1)" fg:x="9300" fg:w="6"/><text x="72.8269%" y="543.50"></text></g><g><title>`0x7FFAE36EFB2A (6 samples, 0.05%)</title><rect x="72.6237%" y="533" width="0.0468%" height="15" fill="rgb(244,137,37)" fg:x="9306" fg:w="6"/><text x="72.8737%" y="543.50"></text></g><g><title>`0x7FFAE36EFB4E (7 samples, 0.05%)</title><rect x="72.6783%" y="533" width="0.0546%" height="15" fill="rgb(240,136,2)" fg:x="9313" fg:w="7"/><text x="72.9283%" y="543.50"></text></g><g><title>`0x7FFAE36EFB60 (12 samples, 0.09%)</title><rect x="72.7329%" y="533" width="0.0936%" height="15" fill="rgb(239,18,37)" fg:x="9320" fg:w="12"/><text x="72.9829%" y="543.50"></text></g><g><title>`0x7FFAE36EFB77 (5 samples, 0.04%)</title><rect x="72.8266%" y="533" width="0.0390%" height="15" fill="rgb(218,185,22)" fg:x="9332" fg:w="5"/><text x="73.0766%" y="543.50"></text></g><g><title>`0x7FFAE36EFB92 (2 samples, 0.02%)</title><rect x="72.8734%" y="533" width="0.0156%" height="15" fill="rgb(225,218,4)" fg:x="9338" fg:w="2"/><text x="73.1234%" y="543.50"></text></g><g><title>`0x7FFAE36EFBAA (2 samples, 0.02%)</title><rect x="72.8968%" y="533" width="0.0156%" height="15" fill="rgb(230,182,32)" fg:x="9341" fg:w="2"/><text x="73.1468%" y="543.50"></text></g><g><title>`0x7FFAE36EFBB6 (3 samples, 0.02%)</title><rect x="72.9202%" y="533" width="0.0234%" height="15" fill="rgb(242,56,43)" fg:x="9344" fg:w="3"/><text x="73.1702%" y="543.50"></text></g><g><title>`0x7FFAE36EFBC0 (24 samples, 0.19%)</title><rect x="72.9515%" y="533" width="0.1873%" height="15" fill="rgb(233,99,24)" fg:x="9348" fg:w="24"/><text x="73.2015%" y="543.50"></text></g><g><title>`0x7FFAE36EFFF4 (2 samples, 0.02%)</title><rect x="73.1388%" y="533" width="0.0156%" height="15" fill="rgb(234,209,42)" fg:x="9372" fg:w="2"/><text x="73.3888%" y="543.50"></text></g><g><title>`0x7FFAE36EFFFF (120 samples, 0.94%)</title><rect x="73.1544%" y="533" width="0.9365%" height="15" fill="rgb(227,7,12)" fg:x="9374" fg:w="120"/><text x="73.4044%" y="543.50"></text></g><g><title>`0x7FFAE36F001E (7 samples, 0.05%)</title><rect x="74.0908%" y="533" width="0.0546%" height="15" fill="rgb(245,203,43)" fg:x="9494" fg:w="7"/><text x="74.3408%" y="543.50"></text></g><g><title>`0x7FFAE36F0022 (2 samples, 0.02%)</title><rect x="74.1455%" y="533" width="0.0156%" height="15" fill="rgb(238,205,33)" fg:x="9501" fg:w="2"/><text x="74.3955%" y="543.50"></text></g><g><title>`0x7FFAE3848066 (10 samples, 0.08%)</title><rect x="74.1767%" y="517" width="0.0780%" height="15" fill="rgb(231,56,7)" fg:x="9505" fg:w="10"/><text x="74.4267%" y="527.50"></text></g><g><title>`0x7FFAE384810B (3 samples, 0.02%)</title><rect x="74.2625%" y="517" width="0.0234%" height="15" fill="rgb(244,186,29)" fg:x="9516" fg:w="3"/><text x="74.5125%" y="527.50"></text></g><g><title>`0x7FFAE3848111 (10 samples, 0.08%)</title><rect x="74.2859%" y="517" width="0.0780%" height="15" fill="rgb(234,111,31)" fg:x="9519" fg:w="10"/><text x="74.5359%" y="527.50"></text></g><g><title>`0x7FFAE36F002D (32 samples, 0.25%)</title><rect x="74.1611%" y="533" width="0.2497%" height="15" fill="rgb(241,149,10)" fg:x="9503" fg:w="32"/><text x="74.4111%" y="543.50"></text></g><g><title>`0x7FFAE3852030 (5 samples, 0.04%)</title><rect x="74.3718%" y="517" width="0.0390%" height="15" fill="rgb(249,206,44)" fg:x="9530" fg:w="5"/><text x="74.6218%" y="527.50"></text></g><g><title>`0x7FFAE36F003A (2 samples, 0.02%)</title><rect x="74.4108%" y="533" width="0.0156%" height="15" fill="rgb(251,153,30)" fg:x="9535" fg:w="2"/><text x="74.6608%" y="543.50"></text></g><g><title>`0x7FFAE36F003D (7 samples, 0.05%)</title><rect x="74.4264%" y="533" width="0.0546%" height="15" fill="rgb(239,152,38)" fg:x="9537" fg:w="7"/><text x="74.6764%" y="543.50"></text></g><g><title>`0x7FFAE36F0060 (6 samples, 0.05%)</title><rect x="74.4810%" y="533" width="0.0468%" height="15" fill="rgb(249,139,47)" fg:x="9544" fg:w="6"/><text x="74.7310%" y="543.50"></text></g><g><title>`0x7FFAE36EF2A4 (315 samples, 2.46%)</title><rect x="72.1164%" y="549" width="2.4582%" height="15" fill="rgb(244,64,35)" fg:x="9241" fg:w="315"/><text x="72.3664%" y="559.50">`0..</text></g><g><title>`0x7FFAE36F0104 (4 samples, 0.03%)</title><rect x="74.5435%" y="533" width="0.0312%" height="15" fill="rgb(216,46,15)" fg:x="9552" fg:w="4"/><text x="74.7935%" y="543.50"></text></g><g><title>`0x7FFAE36EF2B0 (4 samples, 0.03%)</title><rect x="74.5747%" y="549" width="0.0312%" height="15" fill="rgb(250,74,19)" fg:x="9556" fg:w="4"/><text x="74.8247%" y="559.50"></text></g><g><title>`0x7FFAE36EF35B (7 samples, 0.05%)</title><rect x="74.6059%" y="549" width="0.0546%" height="15" fill="rgb(249,42,33)" fg:x="9560" fg:w="7"/><text x="74.8559%" y="559.50"></text></g><g><title>`0x7FFAE36EF164 (369 samples, 2.88%)</title><rect x="71.8433%" y="565" width="2.8797%" height="15" fill="rgb(242,149,17)" fg:x="9206" fg:w="369"/><text x="72.0933%" y="575.50">`0..</text></g><g><title>`0x7FFAE36EF38C (6 samples, 0.05%)</title><rect x="74.6761%" y="549" width="0.0468%" height="15" fill="rgb(244,29,21)" fg:x="9569" fg:w="6"/><text x="74.9261%" y="559.50"></text></g><g><title>`0x7FFAE36EF167 (5 samples, 0.04%)</title><rect x="74.7230%" y="565" width="0.0390%" height="15" fill="rgb(220,130,37)" fg:x="9575" fg:w="5"/><text x="74.9730%" y="575.50"></text></g><g><title>`0x7FFAE36EF181 (2 samples, 0.02%)</title><rect x="74.7620%" y="565" width="0.0156%" height="15" fill="rgb(211,67,2)" fg:x="9580" fg:w="2"/><text x="75.0120%" y="575.50"></text></g><g><title>`0x7FFAE36EF183 (5 samples, 0.04%)</title><rect x="74.7776%" y="565" width="0.0390%" height="15" fill="rgb(235,68,52)" fg:x="9582" fg:w="5"/><text x="75.0276%" y="575.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_alloc_zeroed (2 samples, 0.02%)</title><rect x="74.8166%" y="565" width="0.0156%" height="15" fill="rgb(246,142,3)" fg:x="9587" fg:w="2"/><text x="75.0666%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (2 samples, 0.02%)</title><rect x="74.8322%" y="565" width="0.0156%" height="15" fill="rgb(241,25,7)" fg:x="9589" fg:w="2"/><text x="75.0822%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="74.8322%" y="549" width="0.0156%" height="15" fill="rgb(242,119,39)" fg:x="9589" fg:w="2"/><text x="75.0822%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (2 samples, 0.02%)</title><rect x="74.8322%" y="533" width="0.0156%" height="15" fill="rgb(241,98,45)" fg:x="9589" fg:w="2"/><text x="75.0822%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::layout_array (7 samples, 0.05%)</title><rect x="74.8478%" y="565" width="0.0546%" height="15" fill="rgb(254,28,30)" fg:x="9591" fg:w="7"/><text x="75.0978%" y="575.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat (7 samples, 0.05%)</title><rect x="74.8478%" y="549" width="0.0546%" height="15" fill="rgb(241,142,54)" fg:x="9591" fg:w="7"/><text x="75.0978%" y="559.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat_packed (7 samples, 0.05%)</title><rect x="74.8478%" y="533" width="0.0546%" height="15" fill="rgb(222,85,15)" fg:x="9591" fg:w="7"/><text x="75.0978%" y="543.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::checked_mul (7 samples, 0.05%)</title><rect x="74.8478%" y="517" width="0.0546%" height="15" fill="rgb(210,85,47)" fg:x="9591" fg:w="7"/><text x="75.0978%" y="527.50"></text></g><g><title>ant_colony.exe`core::intrinsics::unlikely (7 samples, 0.05%)</title><rect x="74.8478%" y="501" width="0.0546%" height="15" fill="rgb(224,206,25)" fg:x="9591" fg:w="7"/><text x="75.0978%" y="511.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_alloc_zeroed (6 samples, 0.05%)</title><rect x="74.9025%" y="565" width="0.0468%" height="15" fill="rgb(243,201,19)" fg:x="9598" fg:w="6"/><text x="75.1525%" y="575.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::alloc_zeroed (6 samples, 0.05%)</title><rect x="74.9025%" y="549" width="0.0468%" height="15" fill="rgb(236,59,4)" fg:x="9598" fg:w="6"/><text x="75.1525%" y="559.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::allocate (6 samples, 0.05%)</title><rect x="74.9025%" y="533" width="0.0468%" height="15" fill="rgb(254,179,45)" fg:x="9598" fg:w="6"/><text x="75.1525%" y="543.50"></text></g><g><title>`0x7FFAE2FA3F90 (6 samples, 0.05%)</title><rect x="75.0507%" y="533" width="0.0468%" height="15" fill="rgb(226,14,10)" fg:x="9617" fg:w="6"/><text x="75.3007%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (432 samples, 3.37%)</title><rect x="71.7418%" y="645" width="3.3713%" height="15" fill="rgb(244,27,41)" fg:x="9193" fg:w="432"/><text x="71.9918%" y="655.50">ant..</text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (432 samples, 3.37%)</title><rect x="71.7418%" y="629" width="3.3713%" height="15" fill="rgb(235,35,32)" fg:x="9193" fg:w="432"/><text x="71.9918%" y="639.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;bool,alloc::alloc::Global&gt;::with_capacity_zeroed_in (432 samples, 3.37%)</title><rect x="71.7418%" y="613" width="3.3713%" height="15" fill="rgb(218,68,31)" fg:x="9193" fg:w="432"/><text x="71.9918%" y="623.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (432 samples, 3.37%)</title><rect x="71.7418%" y="597" width="3.3713%" height="15" fill="rgb(207,120,37)" fg:x="9193" fg:w="432"/><text x="71.9918%" y="607.50">ant..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (432 samples, 3.37%)</title><rect x="71.7418%" y="581" width="3.3713%" height="15" fill="rgb(227,98,0)" fg:x="9193" fg:w="432"/><text x="71.9918%" y="591.50">ant..</text></g><g><title>ant_colony.exe`std::sys::alloc::windows::process_heap_alloc (21 samples, 0.16%)</title><rect x="74.9493%" y="565" width="0.1639%" height="15" fill="rgb(207,7,3)" fg:x="9604" fg:w="21"/><text x="75.1993%" y="575.50"></text></g><g><title>ant_colony.exe`core::intrinsics::unlikely (10 samples, 0.08%)</title><rect x="75.0351%" y="549" width="0.0780%" height="15" fill="rgb(206,98,19)" fg:x="9615" fg:w="10"/><text x="75.2851%" y="559.50"></text></g><g><title>`0x7FFAE2FA3F9D (2 samples, 0.02%)</title><rect x="75.0975%" y="533" width="0.0156%" height="15" fill="rgb(217,5,26)" fg:x="9623" fg:w="2"/><text x="75.3475%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (571 samples, 4.46%)</title><rect x="75.1132%" y="645" width="4.4561%" height="15" fill="rgb(235,190,38)" fg:x="9625" fg:w="571"/><text x="75.3632%" y="655.50">ant_c..</text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (571 samples, 4.46%)</title><rect x="75.1132%" y="629" width="4.4561%" height="15" fill="rgb(247,86,24)" fg:x="9625" fg:w="571"/><text x="75.3632%" y="639.50">ant_c..</text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (571 samples, 4.46%)</title><rect x="75.1132%" y="613" width="4.4561%" height="15" fill="rgb(205,101,16)" fg:x="9625" fg:w="571"/><text x="75.3632%" y="623.50">ant_c..</text></g><g><title>ant_colony.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec (136 samples, 1.06%)</title><rect x="79.5692%" y="645" width="1.0613%" height="15" fill="rgb(246,168,33)" fg:x="10196" fg:w="136"/><text x="79.8192%" y="655.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$ (136 samples, 1.06%)</title><rect x="79.5692%" y="629" width="1.0613%" height="15" fill="rgb(231,114,1)" fg:x="10196" fg:w="136"/><text x="79.8192%" y="639.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index_mut(unsigned long long, ref_mut$&lt;slice2$ (136 samples, 1.06%)</title><rect x="79.5692%" y="613" width="1.0613%" height="15" fill="rgb(207,184,53)" fg:x="10196" fg:w="136"/><text x="79.8192%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;*, core::ops::range::Range (54 samples, 0.42%)</title><rect x="82.1445%" y="629" width="0.4214%" height="15" fill="rgb(224,95,51)" fg:x="10526" fg:w="54"/><text x="82.3945%" y="639.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;usize&gt; &gt;, core::ops::range::Range (54 samples, 0.42%)</title><rect x="82.1445%" y="613" width="0.4214%" height="15" fill="rgb(212,188,45)" fg:x="10526" fg:w="54"/><text x="82.3945%" y="623.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (54 samples, 0.42%)</title><rect x="82.1445%" y="597" width="0.4214%" height="15" fill="rgb(223,154,38)" fg:x="10526" fg:w="54"/><text x="82.3945%" y="607.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighbors (333 samples, 2.60%)</title><rect x="80.6306%" y="645" width="2.5987%" height="15" fill="rgb(251,22,52)" fg:x="10332" fg:w="333"/><text x="80.8806%" y="655.50">an..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_neighboor_count_unchecked (85 samples, 0.66%)</title><rect x="82.5659%" y="629" width="0.6633%" height="15" fill="rgb(229,209,22)" fg:x="10580" fg:w="85"/><text x="82.8159%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec (26 samples, 0.20%)</title><rect x="83.0264%" y="613" width="0.2029%" height="15" fill="rgb(234,138,34)" fg:x="10639" fg:w="26"/><text x="83.2764%" y="623.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$0::index(ref$&lt;slice2$ (26 samples, 0.20%)</title><rect x="83.0264%" y="597" width="0.2029%" height="15" fill="rgb(212,95,11)" fg:x="10639" fg:w="26"/><text x="83.2764%" y="607.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (26 samples, 0.20%)</title><rect x="83.0264%" y="581" width="0.2029%" height="15" fill="rgb(240,179,47)" fg:x="10639" fg:w="26"/><text x="83.2764%" y="591.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (35 samples, 0.27%)</title><rect x="83.2293%" y="645" width="0.2731%" height="15" fill="rgb(240,163,11)" fg:x="10665" fg:w="35"/><text x="83.4793%" y="655.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (35 samples, 0.27%)</title><rect x="83.2293%" y="629" width="0.2731%" height="15" fill="rgb(236,37,12)" fg:x="10665" fg:w="35"/><text x="83.4793%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (35 samples, 0.27%)</title><rect x="83.2293%" y="613" width="0.2731%" height="15" fill="rgb(232,164,16)" fg:x="10665" fg:w="35"/><text x="83.4793%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (35 samples, 0.27%)</title><rect x="83.2293%" y="597" width="0.2731%" height="15" fill="rgb(244,205,15)" fg:x="10665" fg:w="35"/><text x="83.4793%" y="607.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (35 samples, 0.27%)</title><rect x="83.2293%" y="581" width="0.2731%" height="15" fill="rgb(223,117,47)" fg:x="10665" fg:w="35"/><text x="83.4793%" y="591.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (35 samples, 0.27%)</title><rect x="83.2293%" y="565" width="0.2731%" height="15" fill="rgb(244,107,35)" fg:x="10665" fg:w="35"/><text x="83.4793%" y="575.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long, alloc::vec::Vec (4,962 samples, 38.72%)</title><rect x="47.7759%" y="661" width="38.7233%" height="15" fill="rgb(205,140,8)" fg:x="6122" fg:w="4962"/><text x="48.0259%" y="671.50">ant_colony.exe`ant_colony::graph::Graph::bfs(unsigned long long..</text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (384 samples, 3.00%)</title><rect x="83.5024%" y="645" width="2.9967%" height="15" fill="rgb(228,84,46)" fg:x="10700" fg:w="384"/><text x="83.7524%" y="655.50">ant..</text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;usize&gt;*, core::ptr::non_null::NonNull (384 samples, 3.00%)</title><rect x="83.5024%" y="629" width="2.9967%" height="15" fill="rgb(254,188,9)" fg:x="10700" fg:w="384"/><text x="83.7524%" y="639.50">ant..</text></g><g><title>`0x7FFAE2FA3F90 (13 samples, 0.10%)</title><rect x="86.5382%" y="629" width="0.1015%" height="15" fill="rgb(206,112,54)" fg:x="11089" fg:w="13"/><text x="86.7882%" y="639.50"></text></g><g><title>`0x7FFAE2FA3F99 (2 samples, 0.02%)</title><rect x="86.6396%" y="629" width="0.0156%" height="15" fill="rgb(216,84,49)" fg:x="11102" fg:w="2"/><text x="86.8896%" y="639.50"></text></g><g><title>`0x7FFAE2FA3F9D (8 samples, 0.06%)</title><rect x="86.6552%" y="629" width="0.0624%" height="15" fill="rgb(214,194,35)" fg:x="11104" fg:w="8"/><text x="86.9052%" y="639.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec (5,442 samples, 42.47%)</title><rect x="44.2563%" y="757" width="42.4692%" height="15" fill="rgb(249,28,3)" fg:x="5671" fg:w="5442"/><text x="44.5063%" y="767.50">ant_colony.exe`ant_colony::graph::Graph::distorsion_approx(alloc::vec..</text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::vec::Vec (5,346 samples, 41.72%)</title><rect x="45.0055%" y="741" width="41.7200%" height="15" fill="rgb(222,56,52)" fg:x="5767" fg:w="5346"/><text x="45.2555%" y="751.50">ant_colony.exe`ant_colony::graph::Graph::update_dist_matrix(alloc::v..</text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (5,286 samples, 41.25%)</title><rect x="45.4737%" y="725" width="41.2518%" height="15" fill="rgb(245,217,50)" fg:x="5827" fg:w="5286"/><text x="45.7237%" y="735.50">ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Ra..</text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (5,286 samples, 41.25%)</title><rect x="45.4737%" y="709" width="41.2518%" height="15" fill="rgb(213,201,24)" fg:x="5827" fg:w="5286"/><text x="45.7237%" y="719.50">ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::rang..</text></g><g><title>ant_colony.exe`core::iter::range::impl$43::forward_unchecked (5,286 samples, 41.25%)</title><rect x="45.4737%" y="693" width="41.2518%" height="15" fill="rgb(248,116,28)" fg:x="5827" fg:w="5286"/><text x="45.7237%" y="703.50">ant_colony.exe`core::iter::range::impl$43::forward_unchecked</text></g><g><title>ant_colony.exe`core::num::impl$11::unchecked_add (5,286 samples, 41.25%)</title><rect x="45.4737%" y="677" width="41.2518%" height="15" fill="rgb(219,72,43)" fg:x="5827" fg:w="5286"/><text x="45.7237%" y="687.50">ant_colony.exe`core::num::impl$11::unchecked_add</text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (29 samples, 0.23%)</title><rect x="86.4991%" y="661" width="0.2263%" height="15" fill="rgb(209,138,14)" fg:x="11084" fg:w="29"/><text x="86.7491%" y="671.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (26 samples, 0.20%)</title><rect x="86.5226%" y="645" width="0.2029%" height="15" fill="rgb(222,18,33)" fg:x="11087" fg:w="26"/><text x="86.7726%" y="655.50"></text></g><g><title>`0x7FFAE36EFBC0 (2 samples, 0.02%)</title><rect x="86.7333%" y="453" width="0.0156%" height="15" fill="rgb(213,199,7)" fg:x="11114" fg:w="2"/><text x="86.9833%" y="463.50"></text></g><g><title>`0x7FFAE3729AEA (3 samples, 0.02%)</title><rect x="86.7333%" y="501" width="0.0234%" height="15" fill="rgb(250,110,10)" fg:x="11114" fg:w="3"/><text x="86.9833%" y="511.50"></text></g><g><title>`0x7FFAE36EF164 (3 samples, 0.02%)</title><rect x="86.7333%" y="485" width="0.0234%" height="15" fill="rgb(248,123,6)" fg:x="11114" fg:w="3"/><text x="86.9833%" y="495.50"></text></g><g><title>`0x7FFAE36EF2A4 (3 samples, 0.02%)</title><rect x="86.7333%" y="469" width="0.0234%" height="15" fill="rgb(206,91,31)" fg:x="11114" fg:w="3"/><text x="86.9833%" y="479.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_edges (4 samples, 0.03%)</title><rect x="86.7333%" y="757" width="0.0312%" height="15" fill="rgb(211,154,13)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::push (4 samples, 0.03%)</title><rect x="86.7333%" y="741" width="0.0312%" height="15" fill="rgb(225,148,7)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.03%)</title><rect x="86.7333%" y="725" width="0.0312%" height="15" fill="rgb(220,160,43)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="86.7333%" y="709" width="0.0312%" height="15" fill="rgb(213,52,39)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="86.7333%" y="693" width="0.0312%" height="15" fill="rgb(243,137,7)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="86.7333%" y="677" width="0.0312%" height="15" fill="rgb(230,79,13)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt;::grow_one&lt;array$&lt;usize,2&gt;,alloc::alloc::Global&gt; (4 samples, 0.03%)</title><rect x="86.7333%" y="661" width="0.0312%" height="15" fill="rgb(247,105,23)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (4 samples, 0.03%)</title><rect x="86.7333%" y="645" width="0.0312%" height="15" fill="rgb(223,179,41)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.03%)</title><rect x="86.7333%" y="629" width="0.0312%" height="15" fill="rgb(218,9,34)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="639.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.03%)</title><rect x="86.7333%" y="613" width="0.0312%" height="15" fill="rgb(222,106,8)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="623.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.03%)</title><rect x="86.7333%" y="597" width="0.0312%" height="15" fill="rgb(211,220,0)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="607.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.03%)</title><rect x="86.7333%" y="581" width="0.0312%" height="15" fill="rgb(229,52,16)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="591.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.03%)</title><rect x="86.7333%" y="565" width="0.0312%" height="15" fill="rgb(212,155,18)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="575.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.03%)</title><rect x="86.7333%" y="549" width="0.0312%" height="15" fill="rgb(242,21,14)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="559.50"></text></g><g><title>`0x7FFAE3728F8D (4 samples, 0.03%)</title><rect x="86.7333%" y="533" width="0.0312%" height="15" fill="rgb(222,19,48)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="543.50"></text></g><g><title>`0x7FFAE3729235 (4 samples, 0.03%)</title><rect x="86.7333%" y="517" width="0.0312%" height="15" fill="rgb(232,45,27)" fg:x="11114" fg:w="4"/><text x="86.9833%" y="527.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (3 samples, 0.02%)</title><rect x="86.7723%" y="757" width="0.0234%" height="15" fill="rgb(249,103,42)" fg:x="11119" fg:w="3"/><text x="87.0223%" y="767.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (3 samples, 0.02%)</title><rect x="86.7723%" y="741" width="0.0234%" height="15" fill="rgb(246,81,33)" fg:x="11119" fg:w="3"/><text x="87.0223%" y="751.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$58::lt (3 samples, 0.02%)</title><rect x="86.7723%" y="725" width="0.0234%" height="15" fill="rgb(252,33,42)" fg:x="11119" fg:w="3"/><text x="87.0223%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::vec::Vec&lt;array$ (12 samples, 0.09%)</title><rect x="86.7957%" y="757" width="0.0936%" height="15" fill="rgb(209,212,41)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::vec::Vec&lt;array$ (12 samples, 0.09%)</title><rect x="86.7957%" y="741" width="0.0936%" height="15" fill="rgb(207,154,6)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;alloc::vec::Vec&lt;array$ (12 samples, 0.09%)</title><rect x="86.7957%" y="725" width="0.0936%" height="15" fill="rgb(223,64,47)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;array$ (12 samples, 0.09%)</title><rect x="86.7957%" y="709" width="0.0936%" height="15" fill="rgb(211,161,38)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="719.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;array$ (12 samples, 0.09%)</title><rect x="86.7957%" y="693" width="0.0936%" height="15" fill="rgb(219,138,40)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;array$ (12 samples, 0.09%)</title><rect x="86.7957%" y="677" width="0.0936%" height="15" fill="rgb(241,228,46)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (12 samples, 0.09%)</title><rect x="86.7957%" y="661" width="0.0936%" height="15" fill="rgb(223,209,38)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (12 samples, 0.09%)</title><rect x="86.7957%" y="645" width="0.0936%" height="15" fill="rgb(236,164,45)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (12 samples, 0.09%)</title><rect x="86.7957%" y="629" width="0.0936%" height="15" fill="rgb(231,15,5)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="639.50"></text></g><g><title>`0x7FFAE37759E0 (12 samples, 0.09%)</title><rect x="86.7957%" y="613" width="0.0936%" height="15" fill="rgb(252,35,15)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="623.50"></text></g><g><title>`0x7FFAE36F5578 (12 samples, 0.09%)</title><rect x="86.7957%" y="597" width="0.0936%" height="15" fill="rgb(248,181,18)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="607.50"></text></g><g><title>`0x7FFAE376802F (12 samples, 0.09%)</title><rect x="86.7957%" y="581" width="0.0936%" height="15" fill="rgb(233,39,42)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="591.50"></text></g><g><title>`0x7FFAE3841EC4 (12 samples, 0.09%)</title><rect x="86.7957%" y="565" width="0.0936%" height="15" fill="rgb(238,110,33)" fg:x="11122" fg:w="12"/><text x="87.0457%" y="575.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="86.8893%" y="757" width="0.0156%" height="15" fill="rgb(233,195,10)" fg:x="11134" fg:w="2"/><text x="87.1393%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 0.02%)</title><rect x="86.8893%" y="741" width="0.0156%" height="15" fill="rgb(254,105,3)" fg:x="11134" fg:w="2"/><text x="87.1393%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2 samples, 0.02%)</title><rect x="86.8893%" y="725" width="0.0156%" height="15" fill="rgb(221,225,9)" fg:x="11134" fg:w="2"/><text x="87.1393%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (2 samples, 0.02%)</title><rect x="86.8893%" y="709" width="0.0156%" height="15" fill="rgb(224,227,45)" fg:x="11134" fg:w="2"/><text x="87.1393%" y="719.50"></text></g><g><title>`0x7FFAAE760D7B (2 samples, 0.02%)</title><rect x="86.8893%" y="693" width="0.0156%" height="15" fill="rgb(229,198,43)" fg:x="11134" fg:w="2"/><text x="87.1393%" y="703.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;array$ (2 samples, 0.02%)</title><rect x="86.9049%" y="757" width="0.0156%" height="15" fill="rgb(206,209,35)" fg:x="11136" fg:w="2"/><text x="87.1549%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;array$&lt;usize,2&gt; &gt;*, core::ptr::non_null::NonNull&lt;array$ (2 samples, 0.02%)</title><rect x="86.9049%" y="741" width="0.0156%" height="15" fill="rgb(245,195,53)" fg:x="11136" fg:w="2"/><text x="87.1549%" y="751.50"></text></g><g><title>ant_colony.exe`pow (4 samples, 0.03%)</title><rect x="86.9206%" y="757" width="0.0312%" height="15" fill="rgb(240,92,26)" fg:x="11138" fg:w="4"/><text x="87.1706%" y="767.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::launch (11,013 samples, 85.95%)</title><rect x="1.1004%" y="773" width="85.9451%" height="15" fill="rgb(207,40,23)" fg:x="141" fg:w="11013"/><text x="1.3504%" y="783.50">ant_colony.exe`ant_colony::graph::ACO::launch</text></g><g><title>ant_colony.exe`rand_xoshiro::xoshiro256plusplus::impl$2::next_u64 (12 samples, 0.09%)</title><rect x="86.9518%" y="757" width="0.0936%" height="15" fill="rgb(223,111,35)" fg:x="11142" fg:w="12"/><text x="87.2018%" y="767.50"></text></g><g><title>ant_colony.exe`core::num::impl$9::rotate_left (2 samples, 0.02%)</title><rect x="87.0298%" y="741" width="0.0156%" height="15" fill="rgb(229,147,28)" fg:x="11152" fg:w="2"/><text x="87.2798%" y="751.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::impl$2::spawn (3 samples, 0.02%)</title><rect x="87.0532%" y="149" width="0.0234%" height="15" fill="rgb(211,29,28)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="159.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn (3 samples, 0.02%)</title><rect x="87.0532%" y="133" width="0.0234%" height="15" fill="rgb(228,72,33)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="143.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn_unchecked&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (3 samples, 0.02%)</title><rect x="87.0532%" y="117" width="0.0234%" height="15" fill="rgb(205,214,31)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="127.50"></text></g><g><title>ant_colony.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, rayon_core::registry::impl$2::spawn::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (3 samples, 0.02%)</title><rect x="87.0532%" y="101" width="0.0234%" height="15" fill="rgb(224,111,15)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="111.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::thread::Thread::new (3 samples, 0.02%)</title><rect x="87.0532%" y="85" width="0.0234%" height="15" fill="rgb(253,21,26)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="95.50"></text></g><g><title>`0x7FFAE2FB313D (3 samples, 0.02%)</title><rect x="87.0532%" y="69" width="0.0234%" height="15" fill="rgb(245,139,43)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="79.50"></text></g><g><title>`0x7FFAE0A40AA9 (3 samples, 0.02%)</title><rect x="87.0532%" y="53" width="0.0234%" height="15" fill="rgb(252,170,7)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="63.50"></text></g><g><title>`0x7FFAE3843414 (3 samples, 0.02%)</title><rect x="87.0532%" y="37" width="0.0234%" height="15" fill="rgb(231,118,14)" fg:x="11155" fg:w="3"/><text x="87.3032%" y="47.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::ACO::new(ant_colony::graph::Graph, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par (5 samples, 0.04%)</title><rect x="87.0454%" y="773" width="0.0390%" height="15" fill="rgb(238,83,0)" fg:x="11154" fg:w="5"/><text x="87.2954%" y="783.50"></text></g><g><title>ant_colony.exe`ant_colony::graph::Graph::get_edge_betweeness_centrality (4 samples, 0.03%)</title><rect x="87.0532%" y="757" width="0.0312%" height="15" fill="rgb(221,39,39)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (4 samples, 0.03%)</title><rect x="87.0532%" y="741" width="0.0312%" height="15" fill="rgb(222,119,46)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="751.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (4 samples, 0.03%)</title><rect x="87.0532%" y="725" width="0.0312%" height="15" fill="rgb(222,165,49)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_zeroed_in (4 samples, 0.03%)</title><rect x="87.0532%" y="709" width="0.0312%" height="15" fill="rgb(219,113,52)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (4 samples, 0.03%)</title><rect x="87.0532%" y="693" width="0.0312%" height="15" fill="rgb(214,7,15)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (4 samples, 0.03%)</title><rect x="87.0532%" y="677" width="0.0312%" height="15" fill="rgb(235,32,4)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::layout_array (4 samples, 0.03%)</title><rect x="87.0532%" y="661" width="0.0312%" height="15" fill="rgb(238,90,54)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="671.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat (4 samples, 0.03%)</title><rect x="87.0532%" y="645" width="0.0312%" height="15" fill="rgb(213,208,19)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="655.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat_packed (4 samples, 0.03%)</title><rect x="87.0532%" y="629" width="0.0312%" height="15" fill="rgb(233,156,4)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="639.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::checked_mul (4 samples, 0.03%)</title><rect x="87.0532%" y="613" width="0.0312%" height="15" fill="rgb(207,194,5)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="623.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::overflowing_mul (4 samples, 0.03%)</title><rect x="87.0532%" y="597" width="0.0312%" height="15" fill="rgb(206,111,30)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="607.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="87.0532%" y="581" width="0.0312%" height="15" fill="rgb(243,70,54)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="591.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (4 samples, 0.03%)</title><rect x="87.0532%" y="565" width="0.0312%" height="15" fill="rgb(242,28,8)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_mut_slice (4 samples, 0.03%)</title><rect x="87.0532%" y="549" width="0.0312%" height="15" fill="rgb(219,106,18)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.03%)</title><rect x="87.0532%" y="533" width="0.0312%" height="15" fill="rgb(244,222,10)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="87.0532%" y="517" width="0.0312%" height="15" fill="rgb(236,179,52)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="87.0532%" y="501" width="0.0312%" height="15" fill="rgb(213,23,39)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="87.0532%" y="485" width="0.0312%" height="15" fill="rgb(238,48,10)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="495.50"></text></g><g><title>ant_colony.exe`rayon::vec::impl$4::with_producer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(rayon::vec::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="87.0532%" y="469" width="0.0312%" height="15" fill="rgb(251,196,23)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="479.50"></text></g><g><title>ant_colony.exe`rayon::vec::impl$7::with_producer(rayon::vec::Drain&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="87.0532%" y="453" width="0.0312%" height="15" fill="rgb(250,152,24)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="463.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge::impl$0::callback(rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex (4 samples, 0.03%)</title><rect x="87.0532%" y="437" width="0.0312%" height="15" fill="rgb(209,150,17)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="447.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer(unsigned long long, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="87.0532%" y="421" width="0.0312%" height="15" fill="rgb(234,202,34)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="431.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::LengthSplitter::new (4 samples, 0.03%)</title><rect x="87.0532%" y="405" width="0.0312%" height="15" fill="rgb(253,148,53)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="415.50"></text></g><g><title>ant_colony.exe`rayon_core::current_num_threads (4 samples, 0.03%)</title><rect x="87.0532%" y="389" width="0.0312%" height="15" fill="rgb(218,129,16)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="399.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::Registry::current_num_threads (4 samples, 0.03%)</title><rect x="87.0532%" y="373" width="0.0312%" height="15" fill="rgb(216,85,19)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (4 samples, 0.03%)</title><rect x="87.0532%" y="357" width="0.0312%" height="15" fill="rgb(235,228,7)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="367.50"></text></g><g><title>ant_colony.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (4 samples, 0.03%)</title><rect x="87.0532%" y="341" width="0.0312%" height="15" fill="rgb(245,175,0)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="351.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (4 samples, 0.03%)</title><rect x="87.0532%" y="325" width="0.0312%" height="15" fill="rgb(208,168,36)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::global_registry (4 samples, 0.03%)</title><rect x="87.0532%" y="309" width="0.0312%" height="15" fill="rgb(246,171,24)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="319.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::set_global_registry(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (4 samples, 0.03%)</title><rect x="87.0532%" y="293" width="0.0312%" height="15" fill="rgb(215,142,24)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="303.50"></text></g><g><title>ant_colony.exe`std::sync::poison::once::Once::call_once(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (4 samples, 0.03%)</title><rect x="87.0532%" y="277" width="0.0312%" height="15" fill="rgb(250,187,7)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="287.50"></text></g><g><title>ant_colony.exe`std::sys::sync::once::futex::Once::call (4 samples, 0.03%)</title><rect x="87.0532%" y="261" width="0.0312%" height="15" fill="rgb(228,66,33)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="271.50"></text></g><g><title>ant_colony.exe`core::cell::Cell::get (4 samples, 0.03%)</title><rect x="87.0532%" y="245" width="0.0312%" height="15" fill="rgb(234,215,21)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="255.50"></text></g><g><title>ant_colony.exe`std::sync::poison::once::impl$2::call_once::closure$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*)()&gt; &gt;(std::sync::poison::once::impl$2::call_once::closure_env$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (4 samples, 0.03%)</title><rect x="87.0532%" y="229" width="0.0312%" height="15" fill="rgb(222,191,20)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="239.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::set_global_registry::closure$0(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (4 samples, 0.03%)</title><rect x="87.0532%" y="213" width="0.0312%" height="15" fill="rgb(245,79,54)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="223.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (4 samples, 0.03%)</title><rect x="87.0532%" y="197" width="0.0312%" height="15" fill="rgb(240,10,37)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="207.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::default_global_registry (4 samples, 0.03%)</title><rect x="87.0532%" y="181" width="0.0312%" height="15" fill="rgb(214,192,32)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="191.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::Registry::new&lt;rayon_core::registry::DefaultSpawn&gt;(rayon_core::ThreadPoolBuilder (4 samples, 0.03%)</title><rect x="87.0532%" y="165" width="0.0312%" height="15" fill="rgb(209,36,54)" fg:x="11155" fg:w="4"/><text x="87.3032%" y="175.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (3 samples, 0.02%)</title><rect x="87.1157%" y="549" width="0.0234%" height="15" fill="rgb(220,10,11)" fg:x="11163" fg:w="3"/><text x="87.3657%" y="559.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (6 samples, 0.05%)</title><rect x="87.1079%" y="565" width="0.0468%" height="15" fill="rgb(221,106,17)" fg:x="11162" fg:w="6"/><text x="87.3579%" y="575.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::stable_partition(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned long long, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.1391%" y="549" width="0.0156%" height="15" fill="rgb(251,142,44)" fg:x="11166" fg:w="2"/><text x="87.3891%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by::closure$0(alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt;*, tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;*, tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.1391%" y="533" width="0.0156%" height="15" fill="rgb(238,13,15)" fg:x="11166" fg:w="2"/><text x="87.3891%" y="543.50"></text></g><g><title>ant_colony.exe`ant_colony::greedy::greedy_algo::closure$1(ant_colony::greedy::greedy_algo::closure_env$1*, tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;*, tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.1391%" y="517" width="0.0156%" height="15" fill="rgb(208,107,27)" fg:x="11166" fg:w="2"/><text x="87.3891%" y="527.50"></text></g><g><title>ant_colony.exe`core::tuple::impl$15::partial_cmp(tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;*, tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.1391%" y="501" width="0.0156%" height="15" fill="rgb(205,136,37)" fg:x="11166" fg:w="2"/><text x="87.3891%" y="511.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$54::partial_cmp (2 samples, 0.02%)</title><rect x="87.1391%" y="485" width="0.0156%" height="15" fill="rgb(250,205,27)" fg:x="11166" fg:w="2"/><text x="87.3891%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (10 samples, 0.08%)</title><rect x="87.0922%" y="693" width="0.0780%" height="15" fill="rgb(210,80,43)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="703.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (10 samples, 0.08%)</title><rect x="87.0922%" y="677" width="0.0780%" height="15" fill="rgb(247,160,36)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (10 samples, 0.08%)</title><rect x="87.0922%" y="661" width="0.0780%" height="15" fill="rgb(234,13,49)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (10 samples, 0.08%)</title><rect x="87.0922%" y="645" width="0.0780%" height="15" fill="rgb(234,122,0)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="655.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.08%)</title><rect x="87.0922%" y="629" width="0.0780%" height="15" fill="rgb(207,146,38)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="639.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (10 samples, 0.08%)</title><rect x="87.0922%" y="613" width="0.0780%" height="15" fill="rgb(207,177,25)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="623.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::drift::sort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (10 samples, 0.08%)</title><rect x="87.0922%" y="597" width="0.0780%" height="15" fill="rgb(211,178,42)" fg:x="11160" fg:w="10"/><text x="87.3422%" y="607.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (9 samples, 0.07%)</title><rect x="87.1000%" y="581" width="0.0702%" height="15" fill="rgb(230,69,54)" fg:x="11161" fg:w="9"/><text x="87.3500%" y="591.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::stable_partition(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned long long, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.1547%" y="565" width="0.0156%" height="15" fill="rgb(214,135,41)" fg:x="11168" fg:w="2"/><text x="87.4047%" y="575.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (4 samples, 0.03%)</title><rect x="87.1859%" y="645" width="0.0312%" height="15" fill="rgb(237,67,25)" fg:x="11172" fg:w="4"/><text x="87.4359%" y="655.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (3 samples, 0.02%)</title><rect x="87.1937%" y="629" width="0.0234%" height="15" fill="rgb(222,189,50)" fg:x="11173" fg:w="3"/><text x="87.4437%" y="639.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.2015%" y="613" width="0.0156%" height="15" fill="rgb(245,148,34)" fg:x="11174" fg:w="2"/><text x="87.4515%" y="623.50"></text></g><g><title>ant_colony.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="87.2015%" y="597" width="0.0156%" height="15" fill="rgb(222,29,6)" fg:x="11174" fg:w="2"/><text x="87.4515%" y="607.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (5 samples, 0.04%)</title><rect x="87.1859%" y="661" width="0.0390%" height="15" fill="rgb(221,189,43)" fg:x="11172" fg:w="5"/><text x="87.4359%" y="671.50"></text></g><g><title>ant_colony.exe`alloc::slice::impl$0::sort_by(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (20 samples, 0.16%)</title><rect x="87.0922%" y="757" width="0.1561%" height="15" fill="rgb(207,36,27)" fg:x="11160" fg:w="20"/><text x="87.3422%" y="767.50"></text></g><g><title>ant_colony.exe`alloc::slice::stable_sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (20 samples, 0.16%)</title><rect x="87.0922%" y="741" width="0.1561%" height="15" fill="rgb(217,90,24)" fg:x="11160" fg:w="20"/><text x="87.3422%" y="751.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (20 samples, 0.16%)</title><rect x="87.0922%" y="725" width="0.1561%" height="15" fill="rgb(224,66,35)" fg:x="11160" fg:w="20"/><text x="87.3422%" y="735.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::driftsort_main&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt;,alloc::vec::Vec&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::alloc::Global&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (20 samples, 0.16%)</title><rect x="87.0922%" y="709" width="0.1561%" height="15" fill="rgb(221,13,50)" fg:x="11160" fg:w="20"/><text x="87.3422%" y="719.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::drift::sort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (10 samples, 0.08%)</title><rect x="87.1703%" y="693" width="0.0780%" height="15" fill="rgb(236,68,49)" fg:x="11170" fg:w="10"/><text x="87.4203%" y="703.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::quicksort&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt;,ant_colony::greedy::greedy_algo::closure_env$1&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned int, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (9 samples, 0.07%)</title><rect x="87.1781%" y="677" width="0.0702%" height="15" fill="rgb(229,146,28)" fg:x="11171" fg:w="9"/><text x="87.4281%" y="687.50"></text></g><g><title>ant_colony.exe`core::slice::sort::stable::quicksort::stable_partition(ref_mut$&lt;slice2$&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex&lt;u32&gt; &gt; &gt; &gt; &gt;, unsigned long long, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;tuple$&lt;f64,petgraph::graph_impl::EdgeIndex (3 samples, 0.02%)</title><rect x="87.2249%" y="661" width="0.0234%" height="15" fill="rgb(225,31,38)" fg:x="11177" fg:w="3"/><text x="87.4749%" y="671.50"></text></g><g><title>ant_colony.exe`petgraph::algo::connected_components&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="87.2561%" y="757" width="0.0156%" height="15" fill="rgb(250,208,3)" fg:x="11181" fg:w="2"/><text x="87.5061%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="87.2873%" y="565" width="0.0156%" height="15" fill="rgb(246,54,23)" fg:x="11185" fg:w="2"/><text x="87.5373%" y="575.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="87.2873%" y="549" width="0.0156%" height="15" fill="rgb(243,76,11)" fg:x="11185" fg:w="2"/><text x="87.5373%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$17::drop(hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="87.2873%" y="533" width="0.0156%" height="15" fill="rgb(245,21,50)" fg:x="11185" fg:w="2"/><text x="87.5373%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.02%)</title><rect x="87.2873%" y="517" width="0.0156%" height="15" fill="rgb(228,9,43)" fg:x="11185" fg:w="2"/><text x="87.5373%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::is_empty_singleton (2 samples, 0.02%)</title><rect x="87.2873%" y="501" width="0.0156%" height="15" fill="rgb(208,100,47)" fg:x="11185" fg:w="2"/><text x="87.5373%" y="511.50"></text></g><g><title>`0x7FFAE37753CE (2 samples, 0.02%)</title><rect x="87.3108%" y="341" width="0.0156%" height="15" fill="rgb(232,26,8)" fg:x="11188" fg:w="2"/><text x="87.5608%" y="351.50"></text></g><g><title>`0x7FFAE37753E0 (2 samples, 0.02%)</title><rect x="87.3264%" y="341" width="0.0156%" height="15" fill="rgb(216,166,38)" fg:x="11190" fg:w="2"/><text x="87.5764%" y="351.50"></text></g><g><title>`0x7FFAE377540A (4 samples, 0.03%)</title><rect x="87.3420%" y="341" width="0.0312%" height="15" fill="rgb(251,202,51)" fg:x="11192" fg:w="4"/><text x="87.5920%" y="351.50"></text></g><g><title>`0x7FFAE3775436 (2 samples, 0.02%)</title><rect x="87.3810%" y="341" width="0.0156%" height="15" fill="rgb(254,216,34)" fg:x="11197" fg:w="2"/><text x="87.6310%" y="351.50"></text></g><g><title>`0x7FFAE377545E (4 samples, 0.03%)</title><rect x="87.3966%" y="341" width="0.0312%" height="15" fill="rgb(251,32,27)" fg:x="11199" fg:w="4"/><text x="87.6466%" y="351.50"></text></g><g><title>`0x7FFAE3775485 (2 samples, 0.02%)</title><rect x="87.4278%" y="341" width="0.0156%" height="15" fill="rgb(208,127,28)" fg:x="11203" fg:w="2"/><text x="87.6778%" y="351.50"></text></g><g><title>`0x7FFAE37754CE (2 samples, 0.02%)</title><rect x="87.4512%" y="341" width="0.0156%" height="15" fill="rgb(224,137,22)" fg:x="11206" fg:w="2"/><text x="87.7012%" y="351.50"></text></g><g><title>`0x7FFAE37754D1 (2 samples, 0.02%)</title><rect x="87.4668%" y="341" width="0.0156%" height="15" fill="rgb(254,70,32)" fg:x="11208" fg:w="2"/><text x="87.7168%" y="351.50"></text></g><g><title>`0x7FFAE377550F (2 samples, 0.02%)</title><rect x="87.4902%" y="341" width="0.0156%" height="15" fill="rgb(229,75,37)" fg:x="11211" fg:w="2"/><text x="87.7402%" y="351.50"></text></g><g><title>`0x7FFAE3775543 (22 samples, 0.17%)</title><rect x="87.5137%" y="341" width="0.1717%" height="15" fill="rgb(252,64,23)" fg:x="11214" fg:w="22"/><text x="87.7637%" y="351.50"></text></g><g><title>`0x7FFAE3775563 (3 samples, 0.02%)</title><rect x="87.6853%" y="341" width="0.0234%" height="15" fill="rgb(232,162,48)" fg:x="11236" fg:w="3"/><text x="87.9353%" y="351.50"></text></g><g><title>`0x7FFAE3775748 (3 samples, 0.02%)</title><rect x="87.7244%" y="341" width="0.0234%" height="15" fill="rgb(246,160,12)" fg:x="11241" fg:w="3"/><text x="87.9744%" y="351.50"></text></g><g><title>`0x7FFAE3775752 (3 samples, 0.02%)</title><rect x="87.7478%" y="341" width="0.0234%" height="15" fill="rgb(247,166,0)" fg:x="11244" fg:w="3"/><text x="87.9978%" y="351.50"></text></g><g><title>`0x7FFAE3775948 (2 samples, 0.02%)</title><rect x="87.7946%" y="341" width="0.0156%" height="15" fill="rgb(249,219,21)" fg:x="11250" fg:w="2"/><text x="88.0446%" y="351.50"></text></g><g><title>`0x7FFAE377599A (2 samples, 0.02%)</title><rect x="87.8180%" y="341" width="0.0156%" height="15" fill="rgb(205,209,3)" fg:x="11253" fg:w="2"/><text x="88.0680%" y="351.50"></text></g><g><title>`0x7FFAE37759AF (2 samples, 0.02%)</title><rect x="87.8336%" y="341" width="0.0156%" height="15" fill="rgb(243,44,1)" fg:x="11255" fg:w="2"/><text x="88.0836%" y="351.50"></text></g><g><title>`0x7FFAE2FA3F90 (3 samples, 0.02%)</title><rect x="87.8726%" y="309" width="0.0234%" height="15" fill="rgb(206,159,16)" fg:x="11260" fg:w="3"/><text x="88.1226%" y="319.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (77 samples, 0.60%)</title><rect x="87.3029%" y="373" width="0.6009%" height="15" fill="rgb(244,77,30)" fg:x="11187" fg:w="77"/><text x="87.5529%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (77 samples, 0.60%)</title><rect x="87.3029%" y="357" width="0.6009%" height="15" fill="rgb(218,69,12)" fg:x="11187" fg:w="77"/><text x="87.5529%" y="367.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (6 samples, 0.05%)</title><rect x="87.8570%" y="341" width="0.0468%" height="15" fill="rgb(212,87,7)" fg:x="11258" fg:w="6"/><text x="88.1070%" y="351.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (6 samples, 0.05%)</title><rect x="87.8570%" y="325" width="0.0468%" height="15" fill="rgb(245,114,25)" fg:x="11258" fg:w="6"/><text x="88.1070%" y="335.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt; &gt;::drop (78 samples, 0.61%)</title><rect x="87.3029%" y="485" width="0.6087%" height="15" fill="rgb(210,61,42)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (78 samples, 0.61%)</title><rect x="87.3029%" y="469" width="0.6087%" height="15" fill="rgb(211,52,33)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (78 samples, 0.61%)</title><rect x="87.3029%" y="453" width="0.6087%" height="15" fill="rgb(234,58,33)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (78 samples, 0.61%)</title><rect x="87.3029%" y="437" width="0.6087%" height="15" fill="rgb(220,115,36)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;petgraph::graph_impl::EdgeIndex (78 samples, 0.61%)</title><rect x="87.3029%" y="421" width="0.6087%" height="15" fill="rgb(243,153,54)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;petgraph::graph_impl::EdgeIndex (78 samples, 0.61%)</title><rect x="87.3029%" y="405" width="0.6087%" height="15" fill="rgb(251,47,18)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (78 samples, 0.61%)</title><rect x="87.3029%" y="389" width="0.6087%" height="15" fill="rgb(242,102,42)" fg:x="11187" fg:w="78"/><text x="87.5529%" y="399.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::drop_elements (82 samples, 0.64%)</title><rect x="87.3029%" y="501" width="0.6399%" height="15" fill="rgb(234,31,38)" fg:x="11187" fg:w="82"/><text x="87.5529%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (4 samples, 0.03%)</title><rect x="87.9117%" y="485" width="0.0312%" height="15" fill="rgb(221,117,51)" fg:x="11265" fg:w="4"/><text x="88.1617%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt; &gt;::next_impl (3 samples, 0.02%)</title><rect x="87.9195%" y="469" width="0.0234%" height="15" fill="rgb(212,20,18)" fg:x="11266" fg:w="3"/><text x="88.1695%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (3 samples, 0.02%)</title><rect x="87.9195%" y="453" width="0.0234%" height="15" fill="rgb(245,133,36)" fg:x="11266" fg:w="3"/><text x="88.1695%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="87.9195%" y="437" width="0.0234%" height="15" fill="rgb(212,6,19)" fg:x="11266" fg:w="3"/><text x="88.1695%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (84 samples, 0.66%)</title><rect x="87.3029%" y="565" width="0.6555%" height="15" fill="rgb(218,1,36)" fg:x="11187" fg:w="84"/><text x="87.5529%" y="575.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (84 samples, 0.66%)</title><rect x="87.3029%" y="549" width="0.6555%" height="15" fill="rgb(246,84,54)" fg:x="11187" fg:w="84"/><text x="87.5529%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$17::drop(hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (84 samples, 0.66%)</title><rect x="87.3029%" y="533" width="0.6555%" height="15" fill="rgb(242,110,6)" fg:x="11187" fg:w="84"/><text x="87.5529%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::drop_inner_table (84 samples, 0.66%)</title><rect x="87.3029%" y="517" width="0.6555%" height="15" fill="rgb(214,47,5)" fg:x="11187" fg:w="84"/><text x="87.5529%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::is_empty_singleton (2 samples, 0.02%)</title><rect x="87.9429%" y="501" width="0.0156%" height="15" fill="rgb(218,159,25)" fg:x="11269" fg:w="2"/><text x="88.1929%" y="511.50"></text></g><g><title>`0x7FFAE3775436 (2 samples, 0.02%)</title><rect x="87.9897%" y="341" width="0.0156%" height="15" fill="rgb(215,211,28)" fg:x="11275" fg:w="2"/><text x="88.2397%" y="351.50"></text></g><g><title>`0x7FFAE3775485 (3 samples, 0.02%)</title><rect x="88.0131%" y="341" width="0.0234%" height="15" fill="rgb(238,59,32)" fg:x="11278" fg:w="3"/><text x="88.2631%" y="351.50"></text></g><g><title>`0x7FFAE37754B4 (3 samples, 0.02%)</title><rect x="88.0443%" y="341" width="0.0234%" height="15" fill="rgb(226,82,3)" fg:x="11282" fg:w="3"/><text x="88.2943%" y="351.50"></text></g><g><title>`0x7FFAE37754B8 (2 samples, 0.02%)</title><rect x="88.0677%" y="341" width="0.0156%" height="15" fill="rgb(240,164,32)" fg:x="11285" fg:w="2"/><text x="88.3177%" y="351.50"></text></g><g><title>`0x7FFAE37754CE (3 samples, 0.02%)</title><rect x="88.0833%" y="341" width="0.0234%" height="15" fill="rgb(232,46,7)" fg:x="11287" fg:w="3"/><text x="88.3333%" y="351.50"></text></g><g><title>`0x7FFAE3775543 (24 samples, 0.19%)</title><rect x="88.1380%" y="341" width="0.1873%" height="15" fill="rgb(229,129,53)" fg:x="11294" fg:w="24"/><text x="88.3880%" y="351.50"></text></g><g><title>`0x7FFAE3775563 (3 samples, 0.02%)</title><rect x="88.3253%" y="341" width="0.0234%" height="15" fill="rgb(234,188,29)" fg:x="11318" fg:w="3"/><text x="88.5753%" y="351.50"></text></g><g><title>`0x7FFAE3775748 (2 samples, 0.02%)</title><rect x="88.3799%" y="341" width="0.0156%" height="15" fill="rgb(246,141,4)" fg:x="11325" fg:w="2"/><text x="88.6299%" y="351.50"></text></g><g><title>`0x7FFAE37759F4 (2 samples, 0.02%)</title><rect x="88.3955%" y="341" width="0.0156%" height="15" fill="rgb(229,23,39)" fg:x="11327" fg:w="2"/><text x="88.6455%" y="351.50"></text></g><g><title>ant_colony.exe`__rustc::__rust_dealloc (2 samples, 0.02%)</title><rect x="88.4345%" y="341" width="0.0156%" height="15" fill="rgb(206,12,3)" fg:x="11332" fg:w="2"/><text x="88.6845%" y="351.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt; &gt;::drop (68 samples, 0.53%)</title><rect x="87.9585%" y="485" width="0.5307%" height="15" fill="rgb(252,226,20)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (68 samples, 0.53%)</title><rect x="87.9585%" y="469" width="0.5307%" height="15" fill="rgb(216,123,35)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (68 samples, 0.53%)</title><rect x="87.9585%" y="453" width="0.5307%" height="15" fill="rgb(212,68,40)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="463.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (68 samples, 0.53%)</title><rect x="87.9585%" y="437" width="0.5307%" height="15" fill="rgb(254,125,32)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex (68 samples, 0.53%)</title><rect x="87.9585%" y="421" width="0.5307%" height="15" fill="rgb(253,97,22)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex (68 samples, 0.53%)</title><rect x="87.9585%" y="405" width="0.5307%" height="15" fill="rgb(241,101,14)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (68 samples, 0.53%)</title><rect x="87.9585%" y="389" width="0.5307%" height="15" fill="rgb(238,103,29)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (68 samples, 0.53%)</title><rect x="87.9585%" y="373" width="0.5307%" height="15" fill="rgb(233,195,47)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="383.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (68 samples, 0.53%)</title><rect x="87.9585%" y="357" width="0.5307%" height="15" fill="rgb(246,218,30)" fg:x="11271" fg:w="68"/><text x="88.2085%" y="367.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (5 samples, 0.04%)</title><rect x="88.4501%" y="341" width="0.0390%" height="15" fill="rgb(219,145,47)" fg:x="11334" fg:w="5"/><text x="88.7001%" y="351.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::dealloc (5 samples, 0.04%)</title><rect x="88.4501%" y="325" width="0.0390%" height="15" fill="rgb(243,12,26)" fg:x="11334" fg:w="5"/><text x="88.7001%" y="335.50"></text></g><g><title>`0x7FFAE2FA3F90 (2 samples, 0.02%)</title><rect x="88.4735%" y="309" width="0.0156%" height="15" fill="rgb(214,87,16)" fg:x="11337" fg:w="2"/><text x="88.7235%" y="319.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::drop_elements (69 samples, 0.54%)</title><rect x="87.9585%" y="501" width="0.5385%" height="15" fill="rgb(208,99,42)" fg:x="11271" fg:w="69"/><text x="88.2085%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (157 samples, 1.23%)</title><rect x="87.2873%" y="581" width="1.2252%" height="15" fill="rgb(253,99,2)" fg:x="11185" fg:w="157"/><text x="87.5373%" y="591.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (71 samples, 0.55%)</title><rect x="87.9585%" y="565" width="0.5541%" height="15" fill="rgb(220,168,23)" fg:x="11271" fg:w="71"/><text x="88.2085%" y="575.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (71 samples, 0.55%)</title><rect x="87.9585%" y="549" width="0.5541%" height="15" fill="rgb(242,38,24)" fg:x="11271" fg:w="71"/><text x="88.2085%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$17::drop(hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (71 samples, 0.55%)</title><rect x="87.9585%" y="533" width="0.5541%" height="15" fill="rgb(225,182,9)" fg:x="11271" fg:w="71"/><text x="88.2085%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::drop_inner_table (71 samples, 0.55%)</title><rect x="87.9585%" y="517" width="0.5541%" height="15" fill="rgb(243,178,37)" fg:x="11271" fg:w="71"/><text x="88.2085%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::is_empty_singleton (2 samples, 0.02%)</title><rect x="88.4970%" y="501" width="0.0156%" height="15" fill="rgb(232,139,19)" fg:x="11340" fg:w="2"/><text x="88.7470%" y="511.50"></text></g><g><title>`0x7FFAE36EF164 (2 samples, 0.02%)</title><rect x="88.6218%" y="437" width="0.0156%" height="15" fill="rgb(225,201,24)" fg:x="11356" fg:w="2"/><text x="88.8718%" y="447.50"></text></g><g><title>ant_colony.exe`alloc::vec::from_elem (3 samples, 0.02%)</title><rect x="88.6218%" y="565" width="0.0234%" height="15" fill="rgb(221,47,46)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::vec::spec_from_elem::impl$1::from_elem (3 samples, 0.02%)</title><rect x="88.6218%" y="549" width="0.0234%" height="15" fill="rgb(249,23,13)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;f64,alloc::alloc::Global&gt;::with_capacity_zeroed_in (3 samples, 0.02%)</title><rect x="88.6218%" y="533" width="0.0234%" height="15" fill="rgb(219,9,5)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (3 samples, 0.02%)</title><rect x="88.6218%" y="517" width="0.0234%" height="15" fill="rgb(254,171,16)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.02%)</title><rect x="88.6218%" y="501" width="0.0234%" height="15" fill="rgb(230,171,20)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::allocate_zeroed (3 samples, 0.02%)</title><rect x="88.6218%" y="485" width="0.0234%" height="15" fill="rgb(210,71,41)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="88.6218%" y="469" width="0.0234%" height="15" fill="rgb(206,173,20)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::alloc::alloc_zeroed (3 samples, 0.02%)</title><rect x="88.6218%" y="453" width="0.0234%" height="15" fill="rgb(233,88,34)" fg:x="11356" fg:w="3"/><text x="88.8718%" y="463.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_slice (4 samples, 0.03%)</title><rect x="88.6608%" y="533" width="0.0312%" height="15" fill="rgb(223,209,46)" fg:x="11361" fg:w="4"/><text x="88.9108%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.03%)</title><rect x="88.6608%" y="517" width="0.0312%" height="15" fill="rgb(250,43,18)" fg:x="11361" fg:w="4"/><text x="88.9108%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="88.6608%" y="501" width="0.0312%" height="15" fill="rgb(208,13,10)" fg:x="11361" fg:w="4"/><text x="88.9108%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.03%)</title><rect x="88.6608%" y="485" width="0.0312%" height="15" fill="rgb(212,200,36)" fg:x="11361" fg:w="4"/><text x="88.9108%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.03%)</title><rect x="88.6608%" y="469" width="0.0312%" height="15" fill="rgb(225,90,30)" fg:x="11361" fg:w="4"/><text x="88.9108%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (8 samples, 0.06%)</title><rect x="88.6608%" y="549" width="0.0624%" height="15" fill="rgb(236,182,39)" fg:x="11361" fg:w="8"/><text x="88.9108%" y="559.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;enum2$&lt;core::option::Option (4 samples, 0.03%)</title><rect x="88.6921%" y="533" width="0.0312%" height="15" fill="rgb(212,144,35)" fg:x="11365" fg:w="4"/><text x="88.9421%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;enum2$&lt;core::option::Option (13 samples, 0.10%)</title><rect x="88.6530%" y="565" width="0.1015%" height="15" fill="rgb(228,63,44)" fg:x="11360" fg:w="13"/><text x="88.9030%" y="575.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::accumulate_edges::closure$0(rustworkx_core::centrality::accumulate_edges::closure_env$0&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="88.7233%" y="549" width="0.0312%" height="15" fill="rgb(228,109,6)" fg:x="11369" fg:w="4"/><text x="88.9733%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="88.7545%" y="565" width="0.0156%" height="15" fill="rgb(238,117,24)" fg:x="11373" fg:w="2"/><text x="89.0045%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="88.7545%" y="549" width="0.0156%" height="15" fill="rgb(242,26,26)" fg:x="11373" fg:w="2"/><text x="89.0045%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::as_slice (2 samples, 0.02%)</title><rect x="88.7545%" y="533" width="0.0156%" height="15" fill="rgb(221,92,48)" fg:x="11373" fg:w="2"/><text x="89.0045%" y="543.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$6::next(core::ops::range::Range (3 samples, 0.02%)</title><rect x="88.7701%" y="565" width="0.0234%" height="15" fill="rgb(209,209,32)" fg:x="11375" fg:w="3"/><text x="89.0201%" y="575.50"></text></g><g><title>ant_colony.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (3 samples, 0.02%)</title><rect x="88.7701%" y="549" width="0.0234%" height="15" fill="rgb(221,70,22)" fg:x="11375" fg:w="3"/><text x="89.0201%" y="559.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(std::sync::poison::rwlock::RwLockWriteGuard&lt;ref_mut$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (22 samples, 0.17%)</title><rect x="88.7935%" y="565" width="0.1717%" height="15" fill="rgb(248,145,5)" fg:x="11378" fg:w="22"/><text x="89.0435%" y="575.50"></text></g><g><title>ant_colony.exe`std::sync::poison::rwlock::impl$32::drop(std::sync::poison::rwlock::RwLockWriteGuard&lt;ref_mut$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option (22 samples, 0.17%)</title><rect x="88.7935%" y="549" width="0.1717%" height="15" fill="rgb(226,116,26)" fg:x="11378" fg:w="22"/><text x="89.0435%" y="559.50"></text></g><g><title>ant_colony.exe`std::sys::sync::rwlock::futex::RwLock::write_unlock (22 samples, 0.17%)</title><rect x="88.7935%" y="533" width="0.1717%" height="15" fill="rgb(244,5,17)" fg:x="11378" fg:w="22"/><text x="89.0435%" y="543.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="88.9652%" y="565" width="0.0156%" height="15" fill="rgb(252,159,33)" fg:x="11400" fg:w="2"/><text x="89.2152%" y="575.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;*, core::ptr::non_null::NonNull&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="88.9652%" y="549" width="0.0156%" height="15" fill="rgb(206,71,0)" fg:x="11400" fg:w="2"/><text x="89.2152%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (3 samples, 0.02%)</title><rect x="88.9964%" y="533" width="0.0234%" height="15" fill="rgb(233,118,54)" fg:x="11404" fg:w="3"/><text x="89.2464%" y="543.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (3 samples, 0.02%)</title><rect x="88.9964%" y="517" width="0.0234%" height="15" fill="rgb(234,83,48)" fg:x="11404" fg:w="3"/><text x="89.2464%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::load (2 samples, 0.02%)</title><rect x="89.0198%" y="485" width="0.0156%" height="15" fill="rgb(228,3,54)" fg:x="11407" fg:w="2"/><text x="89.2698%" y="495.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="89.0198%" y="469" width="0.0156%" height="15" fill="rgb(226,155,13)" fg:x="11407" fg:w="2"/><text x="89.2698%" y="479.50"></text></g><g><title>ant_colony.exe`core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="89.0198%" y="453" width="0.0156%" height="15" fill="rgb(241,28,37)" fg:x="11407" fg:w="2"/><text x="89.2698%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get(petgraph::graph_impl::NodeIndex (9 samples, 0.07%)</title><rect x="88.9808%" y="565" width="0.0702%" height="15" fill="rgb(233,93,10)" fg:x="11402" fg:w="9"/><text x="89.2308%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner(petgraph::graph_impl::NodeIndex (9 samples, 0.07%)</title><rect x="88.9808%" y="549" width="0.0702%" height="15" fill="rgb(225,113,19)" fg:x="11402" fg:w="9"/><text x="89.2308%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (4 samples, 0.03%)</title><rect x="89.0198%" y="533" width="0.0312%" height="15" fill="rgb(241,2,18)" fg:x="11407" fg:w="4"/><text x="89.2698%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (4 samples, 0.03%)</title><rect x="89.0198%" y="517" width="0.0312%" height="15" fill="rgb(228,207,21)" fg:x="11407" fg:w="4"/><text x="89.2698%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (4 samples, 0.03%)</title><rect x="89.0198%" y="501" width="0.0312%" height="15" fill="rgb(213,211,35)" fg:x="11407" fg:w="4"/><text x="89.2698%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (11 samples, 0.09%)</title><rect x="89.0666%" y="533" width="0.0858%" height="15" fill="rgb(209,83,10)" fg:x="11413" fg:w="11"/><text x="89.3166%" y="543.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (11 samples, 0.09%)</title><rect x="89.0666%" y="517" width="0.0858%" height="15" fill="rgb(209,164,1)" fg:x="11413" fg:w="11"/><text x="89.3166%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (2 samples, 0.02%)</title><rect x="89.1525%" y="485" width="0.0156%" height="15" fill="rgb(213,184,43)" fg:x="11424" fg:w="2"/><text x="89.4025%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="89.1525%" y="469" width="0.0156%" height="15" fill="rgb(231,61,34)" fg:x="11424" fg:w="2"/><text x="89.4025%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get(petgraph::graph_impl::NodeIndex (19 samples, 0.15%)</title><rect x="89.0510%" y="565" width="0.1483%" height="15" fill="rgb(235,75,3)" fg:x="11411" fg:w="19"/><text x="89.3010%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner(petgraph::graph_impl::NodeIndex (19 samples, 0.15%)</title><rect x="89.0510%" y="549" width="0.1483%" height="15" fill="rgb(220,106,47)" fg:x="11411" fg:w="19"/><text x="89.3010%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="89.1525%" y="533" width="0.0468%" height="15" fill="rgb(210,196,33)" fg:x="11424" fg:w="6"/><text x="89.4025%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="89.1525%" y="517" width="0.0468%" height="15" fill="rgb(229,154,42)" fg:x="11424" fg:w="6"/><text x="89.4025%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (6 samples, 0.05%)</title><rect x="89.1525%" y="501" width="0.0468%" height="15" fill="rgb(228,114,26)" fg:x="11424" fg:w="6"/><text x="89.4025%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (3 samples, 0.02%)</title><rect x="89.1759%" y="485" width="0.0234%" height="15" fill="rgb(208,144,1)" fg:x="11427" fg:w="3"/><text x="89.4259%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (9 samples, 0.07%)</title><rect x="89.1993%" y="517" width="0.0702%" height="15" fill="rgb(239,112,37)" fg:x="11430" fg:w="9"/><text x="89.4493%" y="527.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (9 samples, 0.07%)</title><rect x="89.1993%" y="501" width="0.0702%" height="15" fill="rgb(210,96,50)" fg:x="11430" fg:w="9"/><text x="89.4493%" y="511.50"></text></g><g><title>ant_colony.exe`foldhash::folded_multiply (2 samples, 0.02%)</title><rect x="89.2539%" y="485" width="0.0156%" height="15" fill="rgb(222,178,2)" fg:x="11437" fg:w="2"/><text x="89.5039%" y="495.50"></text></g><g><title>ant_colony.exe`core::num::impl$10::wrapping_mul (2 samples, 0.02%)</title><rect x="89.2539%" y="469" width="0.0156%" height="15" fill="rgb(226,74,18)" fg:x="11437" fg:w="2"/><text x="89.5039%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (5 samples, 0.04%)</title><rect x="89.2695%" y="469" width="0.0390%" height="15" fill="rgb(225,67,54)" fg:x="11439" fg:w="5"/><text x="89.5195%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (5 samples, 0.04%)</title><rect x="89.2695%" y="453" width="0.0390%" height="15" fill="rgb(251,92,32)" fg:x="11439" fg:w="5"/><text x="89.5195%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (6 samples, 0.05%)</title><rect x="89.3164%" y="469" width="0.0468%" height="15" fill="rgb(228,149,22)" fg:x="11445" fg:w="6"/><text x="89.5664%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::impl$10::index(hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;*, petgraph::graph_impl::NodeIndex (22 samples, 0.17%)</title><rect x="89.1993%" y="565" width="0.1717%" height="15" fill="rgb(243,54,13)" fg:x="11430" fg:w="22"/><text x="89.4493%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get(petgraph::graph_impl::NodeIndex (22 samples, 0.17%)</title><rect x="89.1993%" y="549" width="0.1717%" height="15" fill="rgb(243,180,28)" fg:x="11430" fg:w="22"/><text x="89.4493%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner(petgraph::graph_impl::NodeIndex (22 samples, 0.17%)</title><rect x="89.1993%" y="533" width="0.1717%" height="15" fill="rgb(208,167,24)" fg:x="11430" fg:w="22"/><text x="89.4493%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (13 samples, 0.10%)</title><rect x="89.2695%" y="517" width="0.1015%" height="15" fill="rgb(245,73,45)" fg:x="11439" fg:w="13"/><text x="89.5195%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (13 samples, 0.10%)</title><rect x="89.2695%" y="501" width="0.1015%" height="15" fill="rgb(237,203,48)" fg:x="11439" fg:w="13"/><text x="89.5195%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (13 samples, 0.10%)</title><rect x="89.2695%" y="485" width="0.1015%" height="15" fill="rgb(211,197,16)" fg:x="11439" fg:w="13"/><text x="89.5195%" y="495.50"></text></g><g><title>ant_colony.exe`rustworkx_core::centrality::accumulate_edges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;(std::sync::poison::rwlock::RwLock&lt;ref_mut$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;*, unsigned long long, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;*, petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (137 samples, 1.07%)</title><rect x="88.5126%" y="581" width="1.0691%" height="15" fill="rgb(243,99,51)" fg:x="11342" fg:w="137"/><text x="88.7626%" y="591.50"></text></g><g><title>ant_colony.exe`std::sync::poison::rwlock::RwLock&lt;ref_mut$&lt;alloc::vec::Vec&lt;enum2$&lt;core::option::Option&lt;f64&gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;::write (27 samples, 0.21%)</title><rect x="89.3710%" y="565" width="0.2107%" height="15" fill="rgb(215,123,29)" fg:x="11452" fg:w="27"/><text x="89.6210%" y="575.50"></text></g><g><title>ant_colony.exe`std::sys::sync::rwlock::futex::RwLock::write (26 samples, 0.20%)</title><rect x="89.3788%" y="549" width="0.2029%" height="15" fill="rgb(239,186,37)" fg:x="11453" fg:w="26"/><text x="89.6288%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::is_empty (2 samples, 0.02%)</title><rect x="89.7534%" y="549" width="0.0156%" height="15" fill="rgb(252,136,39)" fg:x="11501" fg:w="2"/><text x="90.0034%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::pop_front (8 samples, 0.06%)</title><rect x="89.7222%" y="565" width="0.0624%" height="15" fill="rgb(223,213,32)" fg:x="11497" fg:w="8"/><text x="89.9722%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::to_physical_idx (2 samples, 0.02%)</title><rect x="89.7690%" y="549" width="0.0156%" height="15" fill="rgb(233,115,5)" fg:x="11503" fg:w="2"/><text x="90.0190%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::wrap_add (2 samples, 0.02%)</title><rect x="89.7690%" y="533" width="0.0156%" height="15" fill="rgb(207,226,44)" fg:x="11503" fg:w="2"/><text x="90.0190%" y="543.50"></text></g><g><title>ant_colony.exe`core::num::impl$11::wrapping_add (2 samples, 0.02%)</title><rect x="89.7690%" y="517" width="0.0156%" height="15" fill="rgb(208,126,0)" fg:x="11503" fg:w="2"/><text x="90.0190%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::is_full (8 samples, 0.06%)</title><rect x="89.8158%" y="549" width="0.0624%" height="15" fill="rgb(244,66,21)" fg:x="11509" fg:w="8"/><text x="90.0658%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::capacity (4 samples, 0.03%)</title><rect x="89.8470%" y="533" width="0.0312%" height="15" fill="rgb(222,97,12)" fg:x="11513" fg:w="4"/><text x="90.0970%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::capacity (4 samples, 0.03%)</title><rect x="89.8470%" y="517" width="0.0312%" height="15" fill="rgb(219,213,19)" fg:x="11513" fg:w="4"/><text x="90.0970%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::capacity (4 samples, 0.03%)</title><rect x="89.8470%" y="501" width="0.0312%" height="15" fill="rgb(252,169,30)" fg:x="11513" fg:w="4"/><text x="90.0970%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::push_back(petgraph::graph_impl::NodeIndex (15 samples, 0.12%)</title><rect x="89.7846%" y="565" width="0.1171%" height="15" fill="rgb(206,32,51)" fg:x="11505" fg:w="15"/><text x="90.0346%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::to_physical_idx (3 samples, 0.02%)</title><rect x="89.8783%" y="549" width="0.0234%" height="15" fill="rgb(250,172,42)" fg:x="11517" fg:w="3"/><text x="90.1283%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::wrap_add (2 samples, 0.02%)</title><rect x="89.8861%" y="533" width="0.0156%" height="15" fill="rgb(209,34,43)" fg:x="11518" fg:w="2"/><text x="90.1361%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::capacity (2 samples, 0.02%)</title><rect x="89.8861%" y="517" width="0.0156%" height="15" fill="rgb(223,11,35)" fg:x="11518" fg:w="2"/><text x="90.1361%" y="527.50"></text></g><g><title>`0x7FFAE36EF2A4 (2 samples, 0.02%)</title><rect x="89.9095%" y="469" width="0.0156%" height="15" fill="rgb(251,219,26)" fg:x="11521" fg:w="2"/><text x="90.1595%" y="479.50"></text></g><g><title>`0x7FFAE36EF164 (4 samples, 0.03%)</title><rect x="89.9017%" y="485" width="0.0312%" height="15" fill="rgb(231,119,3)" fg:x="11520" fg:w="4"/><text x="90.1517%" y="495.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::with_capacity (6 samples, 0.05%)</title><rect x="89.9017%" y="565" width="0.0468%" height="15" fill="rgb(216,97,11)" fg:x="11520" fg:w="6"/><text x="90.1517%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::collections::vec_deque::VecDeque&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.05%)</title><rect x="89.9017%" y="549" width="0.0468%" height="15" fill="rgb(223,59,9)" fg:x="11520" fg:w="6"/><text x="90.1517%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.05%)</title><rect x="89.9017%" y="533" width="0.0468%" height="15" fill="rgb(233,93,31)" fg:x="11520" fg:w="6"/><text x="90.1517%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.05%)</title><rect x="89.9017%" y="517" width="0.0468%" height="15" fill="rgb(239,81,33)" fg:x="11520" fg:w="6"/><text x="90.1517%" y="527.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.05%)</title><rect x="89.9017%" y="501" width="0.0468%" height="15" fill="rgb(213,120,34)" fg:x="11520" fg:w="6"/><text x="90.1517%" y="511.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::process_heap_alloc (2 samples, 0.02%)</title><rect x="89.9329%" y="485" width="0.0156%" height="15" fill="rgb(243,49,53)" fg:x="11524" fg:w="2"/><text x="90.1829%" y="495.50"></text></g><g><title>ant_colony.exe`core::cmp::max (2 samples, 0.02%)</title><rect x="90.0031%" y="501" width="0.0156%" height="15" fill="rgb(247,216,33)" fg:x="11533" fg:w="2"/><text x="90.2531%" y="511.50"></text></g><g><title>ant_colony.exe`core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="90.0031%" y="485" width="0.0156%" height="15" fill="rgb(226,26,14)" fg:x="11533" fg:w="2"/><text x="90.2531%" y="495.50"></text></g><g><title>`0x7FFAE36EE69B (2 samples, 0.02%)</title><rect x="90.0656%" y="421" width="0.0156%" height="15" fill="rgb(215,49,53)" fg:x="11541" fg:w="2"/><text x="90.3156%" y="431.50"></text></g><g><title>`0x7FFAE36EE6B2 (2 samples, 0.02%)</title><rect x="90.0812%" y="421" width="0.0156%" height="15" fill="rgb(245,162,40)" fg:x="11543" fg:w="2"/><text x="90.3312%" y="431.50"></text></g><g><title>`0x7FFAE36EF1D7 (5 samples, 0.04%)</title><rect x="90.1046%" y="405" width="0.0390%" height="15" fill="rgb(229,68,17)" fg:x="11546" fg:w="5"/><text x="90.3546%" y="415.50"></text></g><g><title>`0x7FFAE36EF21F (5 samples, 0.04%)</title><rect x="90.1514%" y="405" width="0.0390%" height="15" fill="rgb(213,182,10)" fg:x="11552" fg:w="5"/><text x="90.4014%" y="415.50"></text></g><g><title>`0x7FFAE36EF24E (2 samples, 0.02%)</title><rect x="90.1904%" y="405" width="0.0156%" height="15" fill="rgb(245,125,30)" fg:x="11557" fg:w="2"/><text x="90.4404%" y="415.50"></text></g><g><title>`0x7FFAE36EF26B (2 samples, 0.02%)</title><rect x="90.2060%" y="405" width="0.0156%" height="15" fill="rgb(232,202,2)" fg:x="11559" fg:w="2"/><text x="90.4560%" y="415.50"></text></g><g><title>`0x7FFAE36EF8F5 (3 samples, 0.02%)</title><rect x="90.2294%" y="389" width="0.0234%" height="15" fill="rgb(237,140,51)" fg:x="11562" fg:w="3"/><text x="90.4794%" y="399.50"></text></g><g><title>`0x7FFAE36EF9AB (3 samples, 0.02%)</title><rect x="90.2607%" y="389" width="0.0234%" height="15" fill="rgb(236,157,25)" fg:x="11566" fg:w="3"/><text x="90.5107%" y="399.50"></text></g><g><title>`0x7FFAE36EFA31 (3 samples, 0.02%)</title><rect x="90.2919%" y="389" width="0.0234%" height="15" fill="rgb(219,209,0)" fg:x="11570" fg:w="3"/><text x="90.5419%" y="399.50"></text></g><g><title>`0x7FFAE36EFA77 (2 samples, 0.02%)</title><rect x="90.3387%" y="389" width="0.0156%" height="15" fill="rgb(240,116,54)" fg:x="11576" fg:w="2"/><text x="90.5887%" y="399.50"></text></g><g><title>`0x7FFAE36EFA8D (2 samples, 0.02%)</title><rect x="90.3543%" y="389" width="0.0156%" height="15" fill="rgb(216,10,36)" fg:x="11578" fg:w="2"/><text x="90.6043%" y="399.50"></text></g><g><title>`0x7FFAE36EFACE (2 samples, 0.02%)</title><rect x="90.3699%" y="389" width="0.0156%" height="15" fill="rgb(222,72,44)" fg:x="11580" fg:w="2"/><text x="90.6199%" y="399.50"></text></g><g><title>`0x7FFAE36EFB00 (3 samples, 0.02%)</title><rect x="90.3855%" y="389" width="0.0234%" height="15" fill="rgb(232,159,9)" fg:x="11582" fg:w="3"/><text x="90.6355%" y="399.50"></text></g><g><title>`0x7FFAE36EFB2A (2 samples, 0.02%)</title><rect x="90.4089%" y="389" width="0.0156%" height="15" fill="rgb(210,39,32)" fg:x="11585" fg:w="2"/><text x="90.6589%" y="399.50"></text></g><g><title>`0x7FFAE36EFB60 (3 samples, 0.02%)</title><rect x="90.4245%" y="389" width="0.0234%" height="15" fill="rgb(216,194,45)" fg:x="11587" fg:w="3"/><text x="90.6745%" y="399.50"></text></g><g><title>`0x7FFAE36EFB80 (2 samples, 0.02%)</title><rect x="90.4636%" y="389" width="0.0156%" height="15" fill="rgb(218,18,35)" fg:x="11592" fg:w="2"/><text x="90.7136%" y="399.50"></text></g><g><title>`0x7FFAE36EFBAF (2 samples, 0.02%)</title><rect x="90.5026%" y="389" width="0.0156%" height="15" fill="rgb(207,83,51)" fg:x="11597" fg:w="2"/><text x="90.7526%" y="399.50"></text></g><g><title>`0x7FFAE36EFBC0 (5 samples, 0.04%)</title><rect x="90.5338%" y="389" width="0.0390%" height="15" fill="rgb(225,63,43)" fg:x="11601" fg:w="5"/><text x="90.7838%" y="399.50"></text></g><g><title>`0x7FFAE36EFD53 (2 samples, 0.02%)</title><rect x="90.6040%" y="389" width="0.0156%" height="15" fill="rgb(207,57,36)" fg:x="11610" fg:w="2"/><text x="90.8540%" y="399.50"></text></g><g><title>`0x7FFAE36EFDB2 (2 samples, 0.02%)</title><rect x="90.6274%" y="389" width="0.0156%" height="15" fill="rgb(216,99,33)" fg:x="11613" fg:w="2"/><text x="90.8774%" y="399.50"></text></g><g><title>`0x7FFAE36EFFFF (24 samples, 0.19%)</title><rect x="90.6587%" y="389" width="0.1873%" height="15" fill="rgb(225,42,16)" fg:x="11617" fg:w="24"/><text x="90.9087%" y="399.50"></text></g><g><title>`0x7FFAE36EF2A4 (87 samples, 0.68%)</title><rect x="90.2216%" y="405" width="0.6789%" height="15" fill="rgb(220,201,45)" fg:x="11561" fg:w="87"/><text x="90.4716%" y="415.50"></text></g><g><title>`0x7FFAE36EF34C (3 samples, 0.02%)</title><rect x="90.9006%" y="405" width="0.0234%" height="15" fill="rgb(225,33,4)" fg:x="11648" fg:w="3"/><text x="91.1506%" y="415.50"></text></g><g><title>`0x7FFAE36EF379 (2 samples, 0.02%)</title><rect x="90.9318%" y="405" width="0.0156%" height="15" fill="rgb(224,33,50)" fg:x="11652" fg:w="2"/><text x="91.1818%" y="415.50"></text></g><g><title>`0x7FFAE36EF398 (2 samples, 0.02%)</title><rect x="90.9474%" y="405" width="0.0156%" height="15" fill="rgb(246,198,51)" fg:x="11654" fg:w="2"/><text x="91.1974%" y="415.50"></text></g><g><title>`0x7FFAE36EF164 (112 samples, 0.87%)</title><rect x="90.0968%" y="421" width="0.8740%" height="15" fill="rgb(205,22,4)" fg:x="11545" fg:w="112"/><text x="90.3468%" y="431.50"></text></g><g><title>`0x7FFAE36EF17D (4 samples, 0.03%)</title><rect x="90.9708%" y="421" width="0.0312%" height="15" fill="rgb(206,3,8)" fg:x="11657" fg:w="4"/><text x="91.2208%" y="431.50"></text></g><g><title>`0x7FFAE36EFFFF (7 samples, 0.05%)</title><rect x="91.0723%" y="341" width="0.0546%" height="15" fill="rgb(251,23,15)" fg:x="11670" fg:w="7"/><text x="91.3223%" y="351.50"></text></g><g><title>`0x7FFAE3729AEA (13 samples, 0.10%)</title><rect x="91.0332%" y="389" width="0.1015%" height="15" fill="rgb(252,88,28)" fg:x="11665" fg:w="13"/><text x="91.2832%" y="399.50"></text></g><g><title>`0x7FFAE36EF164 (12 samples, 0.09%)</title><rect x="91.0410%" y="373" width="0.0936%" height="15" fill="rgb(212,127,14)" fg:x="11666" fg:w="12"/><text x="91.2910%" y="383.50"></text></g><g><title>`0x7FFAE36EF2A4 (11 samples, 0.09%)</title><rect x="91.0489%" y="357" width="0.0858%" height="15" fill="rgb(247,145,37)" fg:x="11667" fg:w="11"/><text x="91.2989%" y="367.50"></text></g><g><title>`0x7FFAE3729B4B (7 samples, 0.05%)</title><rect x="91.1347%" y="389" width="0.0546%" height="15" fill="rgb(209,117,53)" fg:x="11678" fg:w="7"/><text x="91.3847%" y="399.50"></text></g><g><title>`0x7FFAE3728F8D (25 samples, 0.20%)</title><rect x="91.0098%" y="421" width="0.1951%" height="15" fill="rgb(212,90,42)" fg:x="11662" fg:w="25"/><text x="91.2598%" y="431.50"></text></g><g><title>`0x7FFAE3729235 (23 samples, 0.18%)</title><rect x="91.0254%" y="405" width="0.1795%" height="15" fill="rgb(218,164,37)" fg:x="11664" fg:w="23"/><text x="91.2754%" y="415.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.02%)</title><rect x="91.2127%" y="421" width="0.0156%" height="15" fill="rgb(246,65,34)" fg:x="11688" fg:w="2"/><text x="91.4627%" y="431.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::alloc (2 samples, 0.02%)</title><rect x="91.2127%" y="405" width="0.0156%" height="15" fill="rgb(231,100,33)" fg:x="11688" fg:w="2"/><text x="91.4627%" y="415.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::allocate (2 samples, 0.02%)</title><rect x="91.2127%" y="389" width="0.0156%" height="15" fill="rgb(228,126,14)" fg:x="11688" fg:w="2"/><text x="91.4627%" y="399.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (157 samples, 1.23%)</title><rect x="90.0577%" y="469" width="1.2252%" height="15" fill="rgb(215,173,21)" fg:x="11540" fg:w="157"/><text x="90.3077%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (157 samples, 1.23%)</title><rect x="90.0577%" y="453" width="1.2252%" height="15" fill="rgb(210,6,40)" fg:x="11540" fg:w="157"/><text x="90.3077%" y="463.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (157 samples, 1.23%)</title><rect x="90.0577%" y="437" width="1.2252%" height="15" fill="rgb(212,48,18)" fg:x="11540" fg:w="157"/><text x="90.3077%" y="447.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::process_heap_alloc (6 samples, 0.05%)</title><rect x="91.2361%" y="421" width="0.0468%" height="15" fill="rgb(230,214,11)" fg:x="11691" fg:w="6"/><text x="91.4861%" y="431.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::push(petgraph::graph_impl::EdgeIndex (174 samples, 1.36%)</title><rect x="89.9485%" y="565" width="1.3579%" height="15" fill="rgb(254,105,39)" fg:x="11526" fg:w="174"/><text x="90.1985%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::grow_one&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; (172 samples, 1.34%)</title><rect x="89.9641%" y="549" width="1.3423%" height="15" fill="rgb(245,158,5)" fg:x="11528" fg:w="172"/><text x="90.2141%" y="559.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (169 samples, 1.32%)</title><rect x="89.9875%" y="533" width="1.3189%" height="15" fill="rgb(249,208,11)" fg:x="11531" fg:w="169"/><text x="90.2375%" y="543.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (169 samples, 1.32%)</title><rect x="89.9875%" y="517" width="1.3189%" height="15" fill="rgb(210,39,28)" fg:x="11531" fg:w="169"/><text x="90.2375%" y="527.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (165 samples, 1.29%)</title><rect x="90.0187%" y="501" width="1.2877%" height="15" fill="rgb(211,56,53)" fg:x="11535" fg:w="165"/><text x="90.2687%" y="511.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (165 samples, 1.29%)</title><rect x="90.0187%" y="485" width="1.2877%" height="15" fill="rgb(226,201,30)" fg:x="11535" fg:w="165"/><text x="90.2687%" y="495.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (3 samples, 0.02%)</title><rect x="91.2830%" y="469" width="0.0234%" height="15" fill="rgb(239,101,34)" fg:x="11697" fg:w="3"/><text x="91.5330%" y="479.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::layout_array (3 samples, 0.02%)</title><rect x="91.5015%" y="437" width="0.0234%" height="15" fill="rgb(226,209,5)" fg:x="11725" fg:w="3"/><text x="91.7515%" y="447.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::repeat (3 samples, 0.02%)</title><rect x="91.5015%" y="421" width="0.0234%" height="15" fill="rgb(250,105,47)" fg:x="11725" fg:w="3"/><text x="91.7515%" y="431.50"></text></g><g><title>ant_colony.exe`core::cmp::max (4 samples, 0.03%)</title><rect x="91.5249%" y="437" width="0.0312%" height="15" fill="rgb(230,72,3)" fg:x="11728" fg:w="4"/><text x="91.7749%" y="447.50"></text></g><g><title>ant_colony.exe`core::cmp::Ord::max (4 samples, 0.03%)</title><rect x="91.5249%" y="421" width="0.0312%" height="15" fill="rgb(232,218,39)" fg:x="11728" fg:w="4"/><text x="91.7749%" y="431.50"></text></g><g><title>`0x7FFAE36EE69B (4 samples, 0.03%)</title><rect x="91.6342%" y="357" width="0.0312%" height="15" fill="rgb(248,166,6)" fg:x="11742" fg:w="4"/><text x="91.8842%" y="367.50"></text></g><g><title>`0x7FFAE36EE6B2 (2 samples, 0.02%)</title><rect x="91.6654%" y="357" width="0.0156%" height="15" fill="rgb(247,89,20)" fg:x="11746" fg:w="2"/><text x="91.9154%" y="367.50"></text></g><g><title>`0x7FFAE36EF15D (4 samples, 0.03%)</title><rect x="91.6810%" y="357" width="0.0312%" height="15" fill="rgb(248,130,54)" fg:x="11748" fg:w="4"/><text x="91.9310%" y="367.50"></text></g><g><title>`0x7FFAE36EF1C0 (2 samples, 0.02%)</title><rect x="91.7122%" y="341" width="0.0156%" height="15" fill="rgb(234,196,4)" fg:x="11752" fg:w="2"/><text x="91.9622%" y="351.50"></text></g><g><title>`0x7FFAE36EF21F (2 samples, 0.02%)</title><rect x="91.7356%" y="341" width="0.0156%" height="15" fill="rgb(250,143,31)" fg:x="11755" fg:w="2"/><text x="91.9856%" y="351.50"></text></g><g><title>`0x7FFAE36EF26B (2 samples, 0.02%)</title><rect x="91.7590%" y="341" width="0.0156%" height="15" fill="rgb(211,110,34)" fg:x="11758" fg:w="2"/><text x="92.0090%" y="351.50"></text></g><g><title>`0x7FFAE36EF8C0 (2 samples, 0.02%)</title><rect x="91.7824%" y="325" width="0.0156%" height="15" fill="rgb(215,124,48)" fg:x="11761" fg:w="2"/><text x="92.0324%" y="335.50"></text></g><g><title>`0x7FFAE36EF9CC (3 samples, 0.02%)</title><rect x="91.8292%" y="325" width="0.0234%" height="15" fill="rgb(216,46,13)" fg:x="11767" fg:w="3"/><text x="92.0792%" y="335.50"></text></g><g><title>`0x7FFAE36EFA25 (2 samples, 0.02%)</title><rect x="91.8683%" y="325" width="0.0156%" height="15" fill="rgb(205,184,25)" fg:x="11772" fg:w="2"/><text x="92.1183%" y="335.50"></text></g><g><title>`0x7FFAE36EFA31 (9 samples, 0.07%)</title><rect x="91.8839%" y="325" width="0.0702%" height="15" fill="rgb(228,1,10)" fg:x="11774" fg:w="9"/><text x="92.1339%" y="335.50"></text></g><g><title>`0x7FFAE36EFA48 (3 samples, 0.02%)</title><rect x="91.9541%" y="325" width="0.0234%" height="15" fill="rgb(213,116,27)" fg:x="11783" fg:w="3"/><text x="92.2041%" y="335.50"></text></g><g><title>`0x7FFAE36EFACE (3 samples, 0.02%)</title><rect x="91.9931%" y="325" width="0.0234%" height="15" fill="rgb(241,95,50)" fg:x="11788" fg:w="3"/><text x="92.2431%" y="335.50"></text></g><g><title>`0x7FFAE36EFB4E (2 samples, 0.02%)</title><rect x="92.0400%" y="325" width="0.0156%" height="15" fill="rgb(238,48,32)" fg:x="11794" fg:w="2"/><text x="92.2900%" y="335.50"></text></g><g><title>`0x7FFAE36EFB7D (3 samples, 0.02%)</title><rect x="92.0790%" y="325" width="0.0234%" height="15" fill="rgb(235,113,49)" fg:x="11799" fg:w="3"/><text x="92.3290%" y="335.50"></text></g><g><title>`0x7FFAE36EFB80 (5 samples, 0.04%)</title><rect x="92.1024%" y="325" width="0.0390%" height="15" fill="rgb(205,127,43)" fg:x="11802" fg:w="5"/><text x="92.3524%" y="335.50"></text></g><g><title>`0x7FFAE36EFBAF (2 samples, 0.02%)</title><rect x="92.1570%" y="325" width="0.0156%" height="15" fill="rgb(250,162,2)" fg:x="11809" fg:w="2"/><text x="92.4070%" y="335.50"></text></g><g><title>`0x7FFAE36EFBC0 (6 samples, 0.05%)</title><rect x="92.1804%" y="325" width="0.0468%" height="15" fill="rgb(220,13,41)" fg:x="11812" fg:w="6"/><text x="92.4304%" y="335.50"></text></g><g><title>`0x7FFAE36EFC26 (3 samples, 0.02%)</title><rect x="92.2273%" y="325" width="0.0234%" height="15" fill="rgb(249,221,25)" fg:x="11818" fg:w="3"/><text x="92.4773%" y="335.50"></text></g><g><title>`0x7FFAE36EFC2F (2 samples, 0.02%)</title><rect x="92.2507%" y="325" width="0.0156%" height="15" fill="rgb(215,208,19)" fg:x="11821" fg:w="2"/><text x="92.5007%" y="335.50"></text></g><g><title>`0x7FFAE36EFC3B (2 samples, 0.02%)</title><rect x="92.2663%" y="325" width="0.0156%" height="15" fill="rgb(236,175,2)" fg:x="11823" fg:w="2"/><text x="92.5163%" y="335.50"></text></g><g><title>`0x7FFAE36EFD20 (3 samples, 0.02%)</title><rect x="92.2975%" y="325" width="0.0234%" height="15" fill="rgb(241,52,2)" fg:x="11827" fg:w="3"/><text x="92.5475%" y="335.50"></text></g><g><title>`0x7FFAE3845863 (3 samples, 0.02%)</title><rect x="92.2975%" y="309" width="0.0234%" height="15" fill="rgb(248,140,14)" fg:x="11827" fg:w="3"/><text x="92.5475%" y="319.50"></text></g><g><title>`0x7FFAE36EFD78 (2 samples, 0.02%)</title><rect x="92.3209%" y="325" width="0.0156%" height="15" fill="rgb(253,22,42)" fg:x="11830" fg:w="2"/><text x="92.5709%" y="335.50"></text></g><g><title>`0x7FFAE36EFFFF (22 samples, 0.17%)</title><rect x="92.3443%" y="325" width="0.1717%" height="15" fill="rgb(234,61,47)" fg:x="11833" fg:w="22"/><text x="92.5943%" y="335.50"></text></g><g><title>`0x7FFAE36F0104 (3 samples, 0.02%)</title><rect x="92.5316%" y="325" width="0.0234%" height="15" fill="rgb(208,226,15)" fg:x="11857" fg:w="3"/><text x="92.7816%" y="335.50"></text></g><g><title>`0x7FFAE36F0349 (5 samples, 0.04%)</title><rect x="92.5628%" y="325" width="0.0390%" height="15" fill="rgb(217,221,4)" fg:x="11861" fg:w="5"/><text x="92.8128%" y="335.50"></text></g><g><title>`0x7FFAE3845885 (4 samples, 0.03%)</title><rect x="92.5706%" y="309" width="0.0312%" height="15" fill="rgb(212,174,34)" fg:x="11862" fg:w="4"/><text x="92.8206%" y="319.50"></text></g><g><title>`0x7FFAE36F043F (15 samples, 0.12%)</title><rect x="92.6174%" y="325" width="0.1171%" height="15" fill="rgb(253,83,4)" fg:x="11868" fg:w="15"/><text x="92.8674%" y="335.50"></text></g><g><title>`0x7FFAE36F049C (2 samples, 0.02%)</title><rect x="92.7345%" y="325" width="0.0156%" height="15" fill="rgb(250,195,49)" fg:x="11883" fg:w="2"/><text x="92.9845%" y="335.50"></text></g><g><title>`0x7FFAE36EF2A4 (125 samples, 0.98%)</title><rect x="91.7824%" y="341" width="0.9755%" height="15" fill="rgb(241,192,25)" fg:x="11761" fg:w="125"/><text x="92.0324%" y="351.50"></text></g><g><title>`0x7FFAE36EF343 (2 samples, 0.02%)</title><rect x="92.7579%" y="341" width="0.0156%" height="15" fill="rgb(208,124,10)" fg:x="11886" fg:w="2"/><text x="93.0079%" y="351.50"></text></g><g><title>`0x7FFAE36EF164 (138 samples, 1.08%)</title><rect x="91.7122%" y="357" width="1.0769%" height="15" fill="rgb(222,33,0)" fg:x="11752" fg:w="138"/><text x="91.9622%" y="367.50"></text></g><g><title>`0x7FFAE372919C (4 samples, 0.03%)</title><rect x="92.8204%" y="341" width="0.0312%" height="15" fill="rgb(234,209,28)" fg:x="11894" fg:w="4"/><text x="93.0704%" y="351.50"></text></g><g><title>`0x7FFAE3729ABA (2 samples, 0.02%)</title><rect x="92.8984%" y="325" width="0.0156%" height="15" fill="rgb(224,11,23)" fg:x="11904" fg:w="2"/><text x="93.1484%" y="335.50"></text></g><g><title>`0x7FFAE36EFA31 (4 samples, 0.03%)</title><rect x="92.9140%" y="277" width="0.0312%" height="15" fill="rgb(232,99,1)" fg:x="11906" fg:w="4"/><text x="93.1640%" y="287.50"></text></g><g><title>`0x7FFAE36EFFFF (5 samples, 0.04%)</title><rect x="93.0155%" y="277" width="0.0390%" height="15" fill="rgb(237,95,45)" fg:x="11919" fg:w="5"/><text x="93.2655%" y="287.50"></text></g><g><title>`0x7FFAE36EF2A4 (24 samples, 0.19%)</title><rect x="92.9140%" y="293" width="0.1873%" height="15" fill="rgb(208,109,11)" fg:x="11906" fg:w="24"/><text x="93.1640%" y="303.50"></text></g><g><title>`0x7FFAE36F043F (2 samples, 0.02%)</title><rect x="93.0857%" y="277" width="0.0156%" height="15" fill="rgb(216,190,48)" fg:x="11928" fg:w="2"/><text x="93.3357%" y="287.50"></text></g><g><title>`0x7FFAE36EF164 (25 samples, 0.20%)</title><rect x="92.9140%" y="309" width="0.1951%" height="15" fill="rgb(251,171,36)" fg:x="11906" fg:w="25"/><text x="93.1640%" y="319.50"></text></g><g><title>`0x7FFAE3729AEA (26 samples, 0.20%)</title><rect x="92.9140%" y="325" width="0.2029%" height="15" fill="rgb(230,62,22)" fg:x="11906" fg:w="26"/><text x="93.1640%" y="335.50"></text></g><g><title>`0x7FFAE3729B39 (2 samples, 0.02%)</title><rect x="93.1169%" y="325" width="0.0156%" height="15" fill="rgb(225,114,35)" fg:x="11932" fg:w="2"/><text x="93.3669%" y="335.50"></text></g><g><title>`0x7FFAE3775543 (2 samples, 0.02%)</title><rect x="93.1559%" y="309" width="0.0156%" height="15" fill="rgb(215,118,42)" fg:x="11937" fg:w="2"/><text x="93.4059%" y="319.50"></text></g><g><title>`0x7FFAE3775A3D (2 samples, 0.02%)</title><rect x="93.1871%" y="309" width="0.0156%" height="15" fill="rgb(243,119,21)" fg:x="11941" fg:w="2"/><text x="93.4371%" y="319.50"></text></g><g><title>`0x7FFAE3729B4B (13 samples, 0.10%)</title><rect x="93.1325%" y="325" width="0.1015%" height="15" fill="rgb(252,177,53)" fg:x="11934" fg:w="13"/><text x="93.3825%" y="335.50"></text></g><g><title>`0x7FFAE3775DF6 (3 samples, 0.02%)</title><rect x="93.2106%" y="309" width="0.0234%" height="15" fill="rgb(237,209,29)" fg:x="11944" fg:w="3"/><text x="93.4606%" y="319.50"></text></g><g><title>`0x7FFAE3729235 (53 samples, 0.41%)</title><rect x="92.8516%" y="341" width="0.4136%" height="15" fill="rgb(212,65,23)" fg:x="11898" fg:w="53"/><text x="93.1016%" y="351.50"></text></g><g><title>`0x7FFAE3728F8D (60 samples, 0.47%)</title><rect x="92.8125%" y="357" width="0.4682%" height="15" fill="rgb(230,222,46)" fg:x="11893" fg:w="60"/><text x="93.0625%" y="367.50"></text></g><g><title>ant_colony.exe`std::alloc::__default_lib_allocator::__rdl_realloc (2 samples, 0.02%)</title><rect x="93.2964%" y="357" width="0.0156%" height="15" fill="rgb(215,135,32)" fg:x="11955" fg:w="2"/><text x="93.5464%" y="367.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::impl$0::realloc (2 samples, 0.02%)</title><rect x="93.2964%" y="341" width="0.0156%" height="15" fill="rgb(246,101,22)" fg:x="11955" fg:w="2"/><text x="93.5464%" y="351.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (222 samples, 1.73%)</title><rect x="91.6185%" y="405" width="1.7325%" height="15" fill="rgb(206,107,13)" fg:x="11740" fg:w="222"/><text x="91.8685%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (222 samples, 1.73%)</title><rect x="91.6185%" y="389" width="1.7325%" height="15" fill="rgb(250,100,44)" fg:x="11740" fg:w="222"/><text x="91.8685%" y="399.50"></text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (222 samples, 1.73%)</title><rect x="91.6185%" y="373" width="1.7325%" height="15" fill="rgb(231,147,38)" fg:x="11740" fg:w="222"/><text x="91.8685%" y="383.50"></text></g><g><title>ant_colony.exe`std::sys::alloc::windows::process_heap_alloc (5 samples, 0.04%)</title><rect x="93.3120%" y="357" width="0.0390%" height="15" fill="rgb(229,8,40)" fg:x="11957" fg:w="5"/><text x="93.5620%" y="367.50"></text></g><g><title>ant_colony.exe`core::intrinsics::unlikely (3 samples, 0.02%)</title><rect x="93.3276%" y="341" width="0.0234%" height="15" fill="rgb(221,135,30)" fg:x="11959" fg:w="3"/><text x="93.5776%" y="351.50"></text></g><g><title>`0x7FFAE2FA3F90 (3 samples, 0.02%)</title><rect x="93.3276%" y="325" width="0.0234%" height="15" fill="rgb(249,193,18)" fg:x="11959" fg:w="3"/><text x="93.5776%" y="335.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::as_mut_ptr (247 samples, 1.93%)</title><rect x="91.4547%" y="549" width="1.9276%" height="15" fill="rgb(209,133,39)" fg:x="11719" fg:w="247"/><text x="91.7047%" y="559.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::ptr (247 samples, 1.93%)</title><rect x="91.4547%" y="533" width="1.9276%" height="15" fill="rgb(232,100,14)" fg:x="11719" fg:w="247"/><text x="91.7047%" y="543.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (247 samples, 1.93%)</title><rect x="91.4547%" y="517" width="1.9276%" height="15" fill="rgb(224,185,1)" fg:x="11719" fg:w="247"/><text x="91.7047%" y="527.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (247 samples, 1.93%)</title><rect x="91.4547%" y="501" width="1.9276%" height="15" fill="rgb(223,139,8)" fg:x="11719" fg:w="247"/><text x="91.7047%" y="511.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::grow_one&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; (244 samples, 1.90%)</title><rect x="91.4781%" y="485" width="1.9042%" height="15" fill="rgb(232,213,38)" fg:x="11722" fg:w="244"/><text x="91.7281%" y="495.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (242 samples, 1.89%)</title><rect x="91.4937%" y="469" width="1.8886%" height="15" fill="rgb(207,94,22)" fg:x="11724" fg:w="242"/><text x="91.7437%" y="479.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (242 samples, 1.89%)</title><rect x="91.4937%" y="453" width="1.8886%" height="15" fill="rgb(219,183,54)" fg:x="11724" fg:w="242"/><text x="91.7437%" y="463.50">a..</text></g><g><title>ant_colony.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (234 samples, 1.83%)</title><rect x="91.5561%" y="437" width="1.8261%" height="15" fill="rgb(216,185,54)" fg:x="11732" fg:w="234"/><text x="91.8061%" y="447.50">a..</text></g><g><title>ant_colony.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (234 samples, 1.83%)</title><rect x="91.5561%" y="421" width="1.8261%" height="15" fill="rgb(254,217,39)" fg:x="11732" fg:w="234"/><text x="91.8061%" y="431.50">a..</text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (4 samples, 0.03%)</title><rect x="93.3510%" y="405" width="0.0312%" height="15" fill="rgb(240,178,23)" fg:x="11962" fg:w="4"/><text x="93.6010%" y="415.50"></text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;::push(petgraph::graph_impl::NodeIndex (267 samples, 2.08%)</title><rect x="91.3064%" y="565" width="2.0837%" height="15" fill="rgb(218,11,47)" fg:x="11700" fg:w="267"/><text x="91.5564%" y="575.50">a..</text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_none (2 samples, 0.02%)</title><rect x="93.5773%" y="485" width="0.0156%" height="15" fill="rgb(218,51,51)" fg:x="11991" fg:w="2"/><text x="93.8273%" y="495.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_some (2 samples, 0.02%)</title><rect x="93.5773%" y="469" width="0.0156%" height="15" fill="rgb(238,126,27)" fg:x="11991" fg:w="2"/><text x="93.8273%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, petgraph::graph_impl::NodeIndex (9 samples, 0.07%)</title><rect x="93.5617%" y="533" width="0.0702%" height="15" fill="rgb(249,202,22)" fg:x="11989" fg:w="9"/><text x="93.8117%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (9 samples, 0.07%)</title><rect x="93.5617%" y="517" width="0.0702%" height="15" fill="rgb(254,195,49)" fg:x="11989" fg:w="9"/><text x="93.8117%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (9 samples, 0.07%)</title><rect x="93.5617%" y="501" width="0.0702%" height="15" fill="rgb(208,123,14)" fg:x="11989" fg:w="9"/><text x="93.8117%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (3 samples, 0.02%)</title><rect x="93.6086%" y="485" width="0.0234%" height="15" fill="rgb(224,200,8)" fg:x="11995" fg:w="3"/><text x="93.8586%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt; &gt;::write(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (22 samples, 0.17%)</title><rect x="93.6398%" y="517" width="0.1717%" height="15" fill="rgb(217,61,36)" fg:x="11999" fg:w="22"/><text x="93.8898%" y="527.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (22 samples, 0.17%)</title><rect x="93.6398%" y="501" width="0.1717%" height="15" fill="rgb(206,35,45)" fg:x="11999" fg:w="22"/><text x="93.8898%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::write(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (22 samples, 0.17%)</title><rect x="93.6398%" y="485" width="0.1717%" height="15" fill="rgb(217,65,33)" fg:x="11999" fg:w="22"/><text x="93.8898%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::special_is_empty (7 samples, 0.05%)</title><rect x="93.8505%" y="501" width="0.0546%" height="15" fill="rgb(222,158,48)" fg:x="12026" fg:w="7"/><text x="94.1005%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (67 samples, 0.52%)</title><rect x="93.3900%" y="565" width="0.5229%" height="15" fill="rgb(254,2,54)" fg:x="11967" fg:w="67"/><text x="93.6400%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::insert&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;(petgraph::graph_impl::NodeIndex&lt;u32&gt;, alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (66 samples, 0.52%)</title><rect x="93.3978%" y="549" width="0.5151%" height="15" fill="rgb(250,143,38)" fg:x="11968" fg:w="66"/><text x="93.6478%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (35 samples, 0.27%)</title><rect x="93.6398%" y="533" width="0.2731%" height="15" fill="rgb(248,25,0)" fg:x="11999" fg:w="35"/><text x="93.8898%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::record_item_insert_at (13 samples, 0.10%)</title><rect x="93.8115%" y="517" width="0.1015%" height="15" fill="rgb(206,152,27)" fg:x="12021" fg:w="13"/><text x="94.0615%" y="527.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_none (2 samples, 0.02%)</title><rect x="94.1314%" y="485" width="0.0156%" height="15" fill="rgb(240,77,30)" fg:x="12062" fg:w="2"/><text x="94.3814%" y="495.50"></text></g><g><title>ant_colony.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::is_some (2 samples, 0.02%)</title><rect x="94.1314%" y="469" width="0.0156%" height="15" fill="rgb(231,5,3)" fg:x="12062" fg:w="2"/><text x="94.3814%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, petgraph::graph_impl::NodeIndex (7 samples, 0.05%)</title><rect x="94.1236%" y="533" width="0.0546%" height="15" fill="rgb(207,226,32)" fg:x="12061" fg:w="7"/><text x="94.3736%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (7 samples, 0.05%)</title><rect x="94.1236%" y="517" width="0.0546%" height="15" fill="rgb(222,207,47)" fg:x="12061" fg:w="7"/><text x="94.3736%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (6 samples, 0.05%)</title><rect x="94.1314%" y="501" width="0.0468%" height="15" fill="rgb(229,115,45)" fg:x="12062" fg:w="6"/><text x="94.3814%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (3 samples, 0.02%)</title><rect x="94.1548%" y="485" width="0.0234%" height="15" fill="rgb(224,191,6)" fg:x="12065" fg:w="3"/><text x="94.4048%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (3 samples, 0.02%)</title><rect x="94.1782%" y="533" width="0.0234%" height="15" fill="rgb(230,227,24)" fg:x="12068" fg:w="3"/><text x="94.4282%" y="543.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (3 samples, 0.02%)</title><rect x="94.1782%" y="517" width="0.0234%" height="15" fill="rgb(228,80,19)" fg:x="12068" fg:w="3"/><text x="94.4282%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt; &gt;::write(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (34 samples, 0.27%)</title><rect x="94.2017%" y="517" width="0.2653%" height="15" fill="rgb(247,229,0)" fg:x="12071" fg:w="34"/><text x="94.4517%" y="527.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (34 samples, 0.27%)</title><rect x="94.2017%" y="501" width="0.2653%" height="15" fill="rgb(237,194,15)" fg:x="12071" fg:w="34"/><text x="94.4517%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::write(tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (34 samples, 0.27%)</title><rect x="94.2017%" y="485" width="0.2653%" height="15" fill="rgb(219,203,20)" fg:x="12071" fg:w="34"/><text x="94.4517%" y="495.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (79 samples, 0.62%)</title><rect x="93.9129%" y="565" width="0.6165%" height="15" fill="rgb(234,128,8)" fg:x="12034" fg:w="79"/><text x="94.1629%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::insert&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;(petgraph::graph_impl::NodeIndex&lt;u32&gt;, alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (79 samples, 0.62%)</title><rect x="93.9129%" y="549" width="0.6165%" height="15" fill="rgb(248,202,8)" fg:x="12034" fg:w="79"/><text x="94.1629%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (42 samples, 0.33%)</title><rect x="94.2017%" y="533" width="0.3278%" height="15" fill="rgb(206,104,37)" fg:x="12071" fg:w="42"/><text x="94.4517%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::record_item_insert_at (8 samples, 0.06%)</title><rect x="94.4670%" y="517" width="0.0624%" height="15" fill="rgb(223,8,27)" fg:x="12105" fg:w="8"/><text x="94.7170%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::special_is_empty (6 samples, 0.05%)</title><rect x="94.4826%" y="501" width="0.0468%" height="15" fill="rgb(216,217,28)" fg:x="12107" fg:w="6"/><text x="94.7326%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (7 samples, 0.05%)</title><rect x="94.5372%" y="533" width="0.0546%" height="15" fill="rgb(249,199,1)" fg:x="12114" fg:w="7"/><text x="94.7872%" y="543.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (7 samples, 0.05%)</title><rect x="94.5372%" y="517" width="0.0546%" height="15" fill="rgb(240,85,17)" fg:x="12114" fg:w="7"/><text x="94.7872%" y="527.50"></text></g><g><title>ant_colony.exe`foldhash::folded_multiply (7 samples, 0.05%)</title><rect x="94.5372%" y="501" width="0.0546%" height="15" fill="rgb(206,108,45)" fg:x="12114" fg:w="7"/><text x="94.7872%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (2 samples, 0.02%)</title><rect x="94.6309%" y="485" width="0.0156%" height="15" fill="rgb(245,210,41)" fg:x="12126" fg:w="2"/><text x="94.8809%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="94.6309%" y="469" width="0.0156%" height="15" fill="rgb(206,13,37)" fg:x="12126" fg:w="2"/><text x="94.8809%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (2 samples, 0.02%)</title><rect x="94.6465%" y="485" width="0.0156%" height="15" fill="rgb(250,61,18)" fg:x="12128" fg:w="2"/><text x="94.8965%" y="495.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="94.6465%" y="469" width="0.0156%" height="15" fill="rgb(235,172,48)" fg:x="12128" fg:w="2"/><text x="94.8965%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::probe_seq (3 samples, 0.02%)</title><rect x="94.6621%" y="485" width="0.0234%" height="15" fill="rgb(249,201,17)" fg:x="12130" fg:w="3"/><text x="94.9121%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_mut(petgraph::graph_impl::NodeIndex (21 samples, 0.16%)</title><rect x="94.5372%" y="565" width="0.1639%" height="15" fill="rgb(219,208,6)" fg:x="12114" fg:w="21"/><text x="94.7872%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(petgraph::graph_impl::NodeIndex (21 samples, 0.16%)</title><rect x="94.5372%" y="549" width="0.1639%" height="15" fill="rgb(248,31,23)" fg:x="12114" fg:w="21"/><text x="94.7872%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (14 samples, 0.11%)</title><rect x="94.5919%" y="533" width="0.1093%" height="15" fill="rgb(245,15,42)" fg:x="12121" fg:w="14"/><text x="94.8419%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (14 samples, 0.11%)</title><rect x="94.5919%" y="517" width="0.1093%" height="15" fill="rgb(222,217,39)" fg:x="12121" fg:w="14"/><text x="94.8419%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (9 samples, 0.07%)</title><rect x="94.6309%" y="501" width="0.0702%" height="15" fill="rgb(210,219,27)" fg:x="12126" fg:w="9"/><text x="94.8809%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex (2 samples, 0.02%)</title><rect x="94.6855%" y="485" width="0.0156%" height="15" fill="rgb(252,166,36)" fg:x="12133" fg:w="2"/><text x="94.9355%" y="495.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$2::default (2 samples, 0.02%)</title><rect x="94.7011%" y="549" width="0.0156%" height="15" fill="rgb(245,132,34)" fg:x="12135" fg:w="2"/><text x="94.9511%" y="559.50"></text></g><g><title>ant_colony.exe`foldhash::seed::global::GlobalSeed::new (2 samples, 0.02%)</title><rect x="94.7011%" y="533" width="0.0156%" height="15" fill="rgb(236,54,3)" fg:x="12135" fg:w="2"/><text x="94.9511%" y="543.50"></text></g><g><title>ant_colony.exe`core::sync::atomic::AtomicU8::load (2 samples, 0.02%)</title><rect x="94.7011%" y="517" width="0.0156%" height="15" fill="rgb(241,173,43)" fg:x="12135" fg:w="2"/><text x="94.9511%" y="527.50"></text></g><g><title>ant_colony.exe`core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="94.7011%" y="501" width="0.0156%" height="15" fill="rgb(215,190,9)" fg:x="12135" fg:w="2"/><text x="94.9511%" y="511.50"></text></g><g><title>ant_colony.exe`foldhash::seed::gen_per_hasher_seed (2 samples, 0.02%)</title><rect x="94.7011%" y="485" width="0.0156%" height="15" fill="rgb(242,101,16)" fg:x="12135" fg:w="2"/><text x="94.9511%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (4 samples, 0.03%)</title><rect x="94.7011%" y="565" width="0.0312%" height="15" fill="rgb(223,190,21)" fg:x="12135" fg:w="4"/><text x="94.9511%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_and_hasher (2 samples, 0.02%)</title><rect x="94.7167%" y="549" width="0.0156%" height="15" fill="rgb(215,228,25)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (2 samples, 0.02%)</title><rect x="94.7167%" y="533" width="0.0156%" height="15" fill="rgb(225,36,22)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::EdgeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="94.7167%" y="517" width="0.0156%" height="15" fill="rgb(251,106,46)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::fallible_with_capacity&lt;allocator_api2::stable::alloc::global::Global&gt; (2 samples, 0.02%)</title><rect x="94.7167%" y="501" width="0.0156%" height="15" fill="rgb(208,90,1)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="94.7167%" y="485" width="0.0156%" height="15" fill="rgb(243,10,4)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="94.7167%" y="469" width="0.0156%" height="15" fill="rgb(212,137,27)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="479.50"></text></g><g><title>`0x7FFAE36EF164 (2 samples, 0.02%)</title><rect x="94.7167%" y="453" width="0.0156%" height="15" fill="rgb(231,220,49)" fg:x="12137" fg:w="2"/><text x="94.9667%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (4 samples, 0.03%)</title><rect x="94.7323%" y="533" width="0.0312%" height="15" fill="rgb(237,96,20)" fg:x="12139" fg:w="4"/><text x="94.9823%" y="543.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (4 samples, 0.03%)</title><rect x="94.7323%" y="517" width="0.0312%" height="15" fill="rgb(239,229,30)" fg:x="12139" fg:w="4"/><text x="94.9823%" y="527.50"></text></g><g><title>ant_colony.exe`foldhash::folded_multiply (4 samples, 0.03%)</title><rect x="94.7323%" y="501" width="0.0312%" height="15" fill="rgb(219,65,33)" fg:x="12139" fg:w="4"/><text x="94.9823%" y="511.50"></text></g><g><title>ant_colony.exe`core::num::impl$10::wrapping_mul (4 samples, 0.03%)</title><rect x="94.7323%" y="485" width="0.0312%" height="15" fill="rgb(243,134,7)" fg:x="12139" fg:w="4"/><text x="94.9823%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (2 samples, 0.02%)</title><rect x="94.8104%" y="485" width="0.0156%" height="15" fill="rgb(216,177,54)" fg:x="12149" fg:w="2"/><text x="95.0604%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="94.8104%" y="469" width="0.0156%" height="15" fill="rgb(211,160,20)" fg:x="12149" fg:w="2"/><text x="95.0604%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (6 samples, 0.05%)</title><rect x="94.8338%" y="485" width="0.0468%" height="15" fill="rgb(239,85,39)" fg:x="12152" fg:w="6"/><text x="95.0838%" y="495.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.05%)</title><rect x="94.8338%" y="469" width="0.0468%" height="15" fill="rgb(232,125,22)" fg:x="12152" fg:w="6"/><text x="95.0838%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::probe_seq (4 samples, 0.03%)</title><rect x="94.8806%" y="485" width="0.0312%" height="15" fill="rgb(244,57,34)" fg:x="12158" fg:w="4"/><text x="95.1306%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_mut(petgraph::graph_impl::NodeIndex (29 samples, 0.23%)</title><rect x="94.7323%" y="565" width="0.2263%" height="15" fill="rgb(214,203,32)" fg:x="12139" fg:w="29"/><text x="94.9823%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner_mut(petgraph::graph_impl::NodeIndex (29 samples, 0.23%)</title><rect x="94.7323%" y="549" width="0.2263%" height="15" fill="rgb(207,58,43)" fg:x="12139" fg:w="29"/><text x="94.9823%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (25 samples, 0.20%)</title><rect x="94.7635%" y="533" width="0.1951%" height="15" fill="rgb(215,193,15)" fg:x="12143" fg:w="25"/><text x="95.0135%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (25 samples, 0.20%)</title><rect x="94.7635%" y="517" width="0.1951%" height="15" fill="rgb(232,15,44)" fg:x="12143" fg:w="25"/><text x="95.0135%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (19 samples, 0.15%)</title><rect x="94.8104%" y="501" width="0.1483%" height="15" fill="rgb(212,3,48)" fg:x="12149" fg:w="19"/><text x="95.0604%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="94.9118%" y="485" width="0.0468%" height="15" fill="rgb(218,128,7)" fg:x="12162" fg:w="6"/><text x="95.1618%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="94.9118%" y="469" width="0.0468%" height="15" fill="rgb(226,216,39)" fg:x="12162" fg:w="6"/><text x="95.1618%" y="479.50"></text></g><g><title>ant_colony.exe`equivalent::impl$0::equivalent(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="94.9118%" y="453" width="0.0468%" height="15" fill="rgb(243,47,51)" fg:x="12162" fg:w="6"/><text x="95.1618%" y="463.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$77::eq(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="94.9118%" y="437" width="0.0468%" height="15" fill="rgb(241,183,40)" fg:x="12162" fg:w="6"/><text x="95.1618%" y="447.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$24::eq (6 samples, 0.05%)</title><rect x="94.9118%" y="421" width="0.0468%" height="15" fill="rgb(231,217,32)" fg:x="12162" fg:w="6"/><text x="95.1618%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (5 samples, 0.04%)</title><rect x="94.9586%" y="565" width="0.0390%" height="15" fill="rgb(229,61,38)" fg:x="12168" fg:w="5"/><text x="95.2086%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_and_hasher (5 samples, 0.04%)</title><rect x="94.9586%" y="549" width="0.0390%" height="15" fill="rgb(225,210,5)" fg:x="12168" fg:w="5"/><text x="95.2086%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (5 samples, 0.04%)</title><rect x="94.9586%" y="533" width="0.0390%" height="15" fill="rgb(231,79,45)" fg:x="12168" fg:w="5"/><text x="95.2086%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt; &gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_in (5 samples, 0.04%)</title><rect x="94.9586%" y="517" width="0.0390%" height="15" fill="rgb(224,100,7)" fg:x="12168" fg:w="5"/><text x="95.2086%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::fallible_with_capacity&lt;allocator_api2::stable::alloc::global::Global&gt; (4 samples, 0.03%)</title><rect x="94.9664%" y="501" width="0.0312%" height="15" fill="rgb(241,198,18)" fg:x="12169" fg:w="4"/><text x="95.2164%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.03%)</title><rect x="94.9664%" y="485" width="0.0312%" height="15" fill="rgb(252,97,53)" fg:x="12169" fg:w="4"/><text x="95.2164%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.03%)</title><rect x="94.9664%" y="469" width="0.0312%" height="15" fill="rgb(220,88,7)" fg:x="12169" fg:w="4"/><text x="95.2164%" y="479.50"></text></g><g><title>`0x7FFAE36EF164 (4 samples, 0.03%)</title><rect x="94.9664%" y="453" width="0.0312%" height="15" fill="rgb(213,176,14)" fg:x="12169" fg:w="4"/><text x="95.2164%" y="463.50"></text></g><g><title>`0x7FFAE36EF2A4 (4 samples, 0.03%)</title><rect x="94.9664%" y="437" width="0.0312%" height="15" fill="rgb(246,73,7)" fg:x="12169" fg:w="4"/><text x="95.2164%" y="447.50"></text></g><g><title>`0x7FFAE36F043F (2 samples, 0.02%)</title><rect x="94.9821%" y="421" width="0.0156%" height="15" fill="rgb(245,64,36)" fg:x="12171" fg:w="2"/><text x="95.2321%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (8 samples, 0.06%)</title><rect x="94.9977%" y="517" width="0.0624%" height="15" fill="rgb(245,80,10)" fg:x="12173" fg:w="8"/><text x="95.2477%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::insert(petgraph::graph_impl::NodeIndex (10 samples, 0.08%)</title><rect x="94.9977%" y="565" width="0.0780%" height="15" fill="rgb(232,107,50)" fg:x="12173" fg:w="10"/><text x="95.2477%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, petgraph::graph_impl::NodeIndex (10 samples, 0.08%)</title><rect x="94.9977%" y="549" width="0.0780%" height="15" fill="rgb(253,3,0)" fg:x="12173" fg:w="10"/><text x="95.2477%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (10 samples, 0.08%)</title><rect x="94.9977%" y="533" width="0.0780%" height="15" fill="rgb(212,99,53)" fg:x="12173" fg:w="10"/><text x="95.2477%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (2 samples, 0.02%)</title><rect x="95.0601%" y="517" width="0.0156%" height="15" fill="rgb(249,111,54)" fg:x="12181" fg:w="2"/><text x="95.3101%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (2 samples, 0.02%)</title><rect x="95.0991%" y="501" width="0.0156%" height="15" fill="rgb(249,55,30)" fg:x="12186" fg:w="2"/><text x="95.3491%" y="511.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="95.0991%" y="485" width="0.0156%" height="15" fill="rgb(237,47,42)" fg:x="12186" fg:w="2"/><text x="95.3491%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, petgraph::graph_impl::NodeIndex (5 samples, 0.04%)</title><rect x="95.0913%" y="549" width="0.0390%" height="15" fill="rgb(211,20,18)" fg:x="12185" fg:w="5"/><text x="95.3413%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (5 samples, 0.04%)</title><rect x="95.0913%" y="533" width="0.0390%" height="15" fill="rgb(231,203,46)" fg:x="12185" fg:w="5"/><text x="95.3413%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (5 samples, 0.04%)</title><rect x="95.0913%" y="517" width="0.0390%" height="15" fill="rgb(237,142,3)" fg:x="12185" fg:w="5"/><text x="95.3413%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (2 samples, 0.02%)</title><rect x="95.1147%" y="501" width="0.0156%" height="15" fill="rgb(241,107,1)" fg:x="12188" fg:w="2"/><text x="95.3647%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (3 samples, 0.02%)</title><rect x="95.1303%" y="549" width="0.0234%" height="15" fill="rgb(229,83,13)" fg:x="12190" fg:w="3"/><text x="95.3803%" y="559.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (3 samples, 0.02%)</title><rect x="95.1303%" y="533" width="0.0234%" height="15" fill="rgb(241,91,40)" fg:x="12190" fg:w="3"/><text x="95.3803%" y="543.50"></text></g><g><title>ant_colony.exe`foldhash::folded_multiply (3 samples, 0.02%)</title><rect x="95.1303%" y="517" width="0.0234%" height="15" fill="rgb(225,3,45)" fg:x="12190" fg:w="3"/><text x="95.3803%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::insert&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;(petgraph::graph_impl::NodeIndex (13 samples, 0.10%)</title><rect x="95.0757%" y="565" width="0.1015%" height="15" fill="rgb(244,223,14)" fg:x="12183" fg:w="13"/><text x="95.3257%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$&lt;petgraph::graph_impl::NodeIndex (3 samples, 0.02%)</title><rect x="95.1537%" y="549" width="0.0234%" height="15" fill="rgb(224,124,37)" fg:x="12193" fg:w="3"/><text x="95.4037%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::record_item_insert_at (2 samples, 0.02%)</title><rect x="95.1615%" y="533" width="0.0156%" height="15" fill="rgb(251,171,30)" fg:x="12194" fg:w="2"/><text x="95.4115%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::special_is_empty (2 samples, 0.02%)</title><rect x="95.1615%" y="517" width="0.0156%" height="15" fill="rgb(236,46,54)" fg:x="12194" fg:w="2"/><text x="95.4115%" y="527.50"></text></g><g><title>`0x7FFAE36EFBC0 (2 samples, 0.02%)</title><rect x="95.1928%" y="421" width="0.0156%" height="15" fill="rgb(245,213,5)" fg:x="12198" fg:w="2"/><text x="95.4428%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (6 samples, 0.05%)</title><rect x="95.1771%" y="565" width="0.0468%" height="15" fill="rgb(230,144,27)" fg:x="12196" fg:w="6"/><text x="95.4271%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_and_hasher (6 samples, 0.05%)</title><rect x="95.1771%" y="549" width="0.0468%" height="15" fill="rgb(220,86,6)" fg:x="12196" fg:w="6"/><text x="95.4271%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (6 samples, 0.05%)</title><rect x="95.1771%" y="533" width="0.0468%" height="15" fill="rgb(240,20,13)" fg:x="12196" fg:w="6"/><text x="95.4271%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_in (6 samples, 0.05%)</title><rect x="95.1771%" y="517" width="0.0468%" height="15" fill="rgb(217,89,34)" fg:x="12196" fg:w="6"/><text x="95.4271%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::fallible_with_capacity&lt;allocator_api2::stable::alloc::global::Global&gt; (6 samples, 0.05%)</title><rect x="95.1771%" y="501" width="0.0468%" height="15" fill="rgb(229,13,5)" fg:x="12196" fg:w="6"/><text x="95.4271%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::new_uninitialized (6 samples, 0.05%)</title><rect x="95.1771%" y="485" width="0.0468%" height="15" fill="rgb(244,67,35)" fg:x="12196" fg:w="6"/><text x="95.4271%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::alloc::inner::do_alloc (5 samples, 0.04%)</title><rect x="95.1850%" y="469" width="0.0390%" height="15" fill="rgb(221,40,2)" fg:x="12197" fg:w="5"/><text x="95.4350%" y="479.50"></text></g><g><title>`0x7FFAE36EF164 (5 samples, 0.04%)</title><rect x="95.1850%" y="453" width="0.0390%" height="15" fill="rgb(237,157,21)" fg:x="12197" fg:w="5"/><text x="95.4350%" y="463.50"></text></g><g><title>`0x7FFAE36EF2A4 (5 samples, 0.04%)</title><rect x="95.1850%" y="437" width="0.0390%" height="15" fill="rgb(222,94,11)" fg:x="12197" fg:w="5"/><text x="95.4350%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::load (3 samples, 0.02%)</title><rect x="95.2708%" y="501" width="0.0234%" height="15" fill="rgb(249,113,6)" fg:x="12208" fg:w="3"/><text x="95.5208%" y="511.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="95.2708%" y="485" width="0.0234%" height="15" fill="rgb(238,137,36)" fg:x="12208" fg:w="3"/><text x="95.5208%" y="495.50"></text></g><g><title>ant_colony.exe`core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="95.2708%" y="469" width="0.0234%" height="15" fill="rgb(210,102,26)" fg:x="12208" fg:w="3"/><text x="95.5208%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (3 samples, 0.02%)</title><rect x="95.2942%" y="501" width="0.0234%" height="15" fill="rgb(218,30,30)" fg:x="12211" fg:w="3"/><text x="95.5442%" y="511.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.02%)</title><rect x="95.2942%" y="485" width="0.0234%" height="15" fill="rgb(214,67,26)" fg:x="12211" fg:w="3"/><text x="95.5442%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (9 samples, 0.07%)</title><rect x="95.3176%" y="501" width="0.0702%" height="15" fill="rgb(251,9,53)" fg:x="12214" fg:w="9"/><text x="95.5676%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, petgraph::graph_impl::NodeIndex (23 samples, 0.18%)</title><rect x="95.2240%" y="549" width="0.1795%" height="15" fill="rgb(228,204,25)" fg:x="12202" fg:w="23"/><text x="95.4740%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (23 samples, 0.18%)</title><rect x="95.2240%" y="533" width="0.1795%" height="15" fill="rgb(207,153,8)" fg:x="12202" fg:w="23"/><text x="95.4740%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (22 samples, 0.17%)</title><rect x="95.2318%" y="517" width="0.1717%" height="15" fill="rgb(242,9,16)" fg:x="12203" fg:w="22"/><text x="95.4818%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$8::find_or_find_insert_slot::closure$0(hashbrown::raw::impl$8::find_or_find_insert_slot::closure_env$0&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="95.3879%" y="501" width="0.0156%" height="15" fill="rgb(217,211,10)" fg:x="12223" fg:w="2"/><text x="95.6379%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::insert(petgraph::graph_impl::NodeIndex (24 samples, 0.19%)</title><rect x="95.2240%" y="565" width="0.1873%" height="15" fill="rgb(219,228,52)" fg:x="12202" fg:w="24"/><text x="95.4740%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (3 samples, 0.02%)</title><rect x="95.5049%" y="517" width="0.0234%" height="15" fill="rgb(231,92,29)" fg:x="12238" fg:w="3"/><text x="95.7549%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_empty (2 samples, 0.02%)</title><rect x="95.5439%" y="501" width="0.0156%" height="15" fill="rgb(232,8,23)" fg:x="12243" fg:w="2"/><text x="95.7939%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (2 samples, 0.02%)</title><rect x="95.5439%" y="485" width="0.0156%" height="15" fill="rgb(216,211,34)" fg:x="12243" fg:w="2"/><text x="95.7939%" y="495.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="95.5439%" y="469" width="0.0156%" height="15" fill="rgb(236,151,0)" fg:x="12243" fg:w="2"/><text x="95.7939%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (2 samples, 0.02%)</title><rect x="95.5595%" y="501" width="0.0156%" height="15" fill="rgb(209,168,3)" fg:x="12245" fg:w="2"/><text x="95.8095%" y="511.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="95.5595%" y="485" width="0.0156%" height="15" fill="rgb(208,129,28)" fg:x="12245" fg:w="2"/><text x="95.8095%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, petgraph::graph_impl::NodeIndex (11 samples, 0.09%)</title><rect x="95.5049%" y="549" width="0.0858%" height="15" fill="rgb(229,78,22)" fg:x="12238" fg:w="11"/><text x="95.7549%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;, hashbrown::map::make_hasher::closure_env$0&lt;petgraph::graph_impl::NodeIndex (11 samples, 0.09%)</title><rect x="95.5049%" y="533" width="0.0858%" height="15" fill="rgb(228,187,13)" fg:x="12238" fg:w="11"/><text x="95.7549%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (8 samples, 0.06%)</title><rect x="95.5283%" y="517" width="0.0624%" height="15" fill="rgb(240,119,24)" fg:x="12241" fg:w="8"/><text x="95.7783%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (2 samples, 0.02%)</title><rect x="95.5908%" y="533" width="0.0156%" height="15" fill="rgb(209,194,42)" fg:x="12249" fg:w="2"/><text x="95.8408%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="95.5908%" y="517" width="0.0156%" height="15" fill="rgb(247,200,46)" fg:x="12249" fg:w="2"/><text x="95.8408%" y="527.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="95.5908%" y="501" width="0.0156%" height="15" fill="rgb(218,76,16)" fg:x="12249" fg:w="2"/><text x="95.8408%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::insert&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;(petgraph::graph_impl::NodeIndex (27 samples, 0.21%)</title><rect x="95.4113%" y="565" width="0.2107%" height="15" fill="rgb(225,21,48)" fg:x="12226" fg:w="27"/><text x="95.6613%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$&lt;petgraph::graph_impl::NodeIndex (4 samples, 0.03%)</title><rect x="95.5908%" y="549" width="0.0312%" height="15" fill="rgb(239,223,50)" fg:x="12249" fg:w="4"/><text x="95.8408%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::record_item_insert_at (2 samples, 0.02%)</title><rect x="95.6064%" y="533" width="0.0156%" height="15" fill="rgb(244,45,21)" fg:x="12251" fg:w="2"/><text x="95.8564%" y="543.50"></text></g><g><title>`0x7FFAE36EF2A4 (2 samples, 0.02%)</title><rect x="95.6376%" y="437" width="0.0156%" height="15" fill="rgb(232,33,43)" fg:x="12255" fg:w="2"/><text x="95.8876%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (5 samples, 0.04%)</title><rect x="95.6220%" y="565" width="0.0390%" height="15" fill="rgb(209,8,3)" fg:x="12253" fg:w="5"/><text x="95.8720%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_and_hasher (5 samples, 0.04%)</title><rect x="95.6220%" y="549" width="0.0390%" height="15" fill="rgb(214,25,53)" fg:x="12253" fg:w="5"/><text x="95.8720%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity (5 samples, 0.04%)</title><rect x="95.6220%" y="533" width="0.0390%" height="15" fill="rgb(254,186,54)" fg:x="12253" fg:w="5"/><text x="95.8720%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::with_capacity_in (5 samples, 0.04%)</title><rect x="95.6220%" y="517" width="0.0390%" height="15" fill="rgb(208,174,49)" fg:x="12253" fg:w="5"/><text x="95.8720%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::fallible_with_capacity&lt;allocator_api2::stable::alloc::global::Global&gt; (4 samples, 0.03%)</title><rect x="95.6298%" y="501" width="0.0312%" height="15" fill="rgb(233,191,51)" fg:x="12254" fg:w="4"/><text x="95.8798%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.02%)</title><rect x="95.6376%" y="485" width="0.0234%" height="15" fill="rgb(222,134,10)" fg:x="12255" fg:w="3"/><text x="95.8876%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.02%)</title><rect x="95.6376%" y="469" width="0.0234%" height="15" fill="rgb(230,226,20)" fg:x="12255" fg:w="3"/><text x="95.8876%" y="479.50"></text></g><g><title>`0x7FFAE36EF164 (3 samples, 0.02%)</title><rect x="95.6376%" y="453" width="0.0234%" height="15" fill="rgb(251,111,25)" fg:x="12255" fg:w="3"/><text x="95.8876%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (4 samples, 0.03%)</title><rect x="95.8093%" y="517" width="0.0312%" height="15" fill="rgb(224,40,46)" fg:x="12277" fg:w="4"/><text x="96.0593%" y="527.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (4 samples, 0.03%)</title><rect x="95.8093%" y="501" width="0.0312%" height="15" fill="rgb(236,108,47)" fg:x="12277" fg:w="4"/><text x="96.0593%" y="511.50"></text></g><g><title>ant_colony.exe`foldhash::folded_multiply (4 samples, 0.03%)</title><rect x="95.8093%" y="485" width="0.0312%" height="15" fill="rgb(234,93,0)" fg:x="12277" fg:w="4"/><text x="96.0593%" y="495.50"></text></g><g><title>ant_colony.exe`core::num::impl$10::wrapping_mul (3 samples, 0.02%)</title><rect x="95.8171%" y="469" width="0.0234%" height="15" fill="rgb(224,213,32)" fg:x="12278" fg:w="3"/><text x="96.0671%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (5 samples, 0.04%)</title><rect x="95.9497%" y="469" width="0.0390%" height="15" fill="rgb(251,11,48)" fg:x="12295" fg:w="5"/><text x="96.1997%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (5 samples, 0.04%)</title><rect x="95.9497%" y="453" width="0.0390%" height="15" fill="rgb(236,173,5)" fg:x="12295" fg:w="5"/><text x="96.1997%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (4 samples, 0.03%)</title><rect x="95.9575%" y="437" width="0.0312%" height="15" fill="rgb(230,95,12)" fg:x="12296" fg:w="4"/><text x="96.2075%" y="447.50"></text></g><g><title>ant_colony.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (4 samples, 0.03%)</title><rect x="95.9575%" y="421" width="0.0312%" height="15" fill="rgb(232,209,1)" fg:x="12296" fg:w="4"/><text x="96.2075%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::load (5 samples, 0.04%)</title><rect x="95.9888%" y="469" width="0.0390%" height="15" fill="rgb(232,6,1)" fg:x="12300" fg:w="5"/><text x="96.2388%" y="479.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.04%)</title><rect x="95.9888%" y="453" width="0.0390%" height="15" fill="rgb(210,224,50)" fg:x="12300" fg:w="5"/><text x="96.2388%" y="463.50"></text></g><g><title>ant_colony.exe`core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="95.9888%" y="437" width="0.0390%" height="15" fill="rgb(228,127,35)" fg:x="12300" fg:w="5"/><text x="96.2388%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (5 samples, 0.04%)</title><rect x="96.0278%" y="469" width="0.0390%" height="15" fill="rgb(245,102,45)" fg:x="12305" fg:w="5"/><text x="96.2778%" y="479.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.04%)</title><rect x="96.0278%" y="453" width="0.0390%" height="15" fill="rgb(214,1,49)" fg:x="12305" fg:w="5"/><text x="96.2778%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (11 samples, 0.09%)</title><rect x="96.0668%" y="469" width="0.0858%" height="15" fill="rgb(226,163,40)" fg:x="12310" fg:w="11"/><text x="96.3168%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::probe_seq (9 samples, 0.07%)</title><rect x="96.1526%" y="469" width="0.0702%" height="15" fill="rgb(239,212,28)" fg:x="12321" fg:w="9"/><text x="96.4026%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="96.2229%" y="453" width="0.0156%" height="15" fill="rgb(220,20,13)" fg:x="12330" fg:w="2"/><text x="96.4729%" y="463.50"></text></g><g><title>ant_colony.exe`equivalent::impl$0::equivalent(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="96.2229%" y="437" width="0.0156%" height="15" fill="rgb(210,164,35)" fg:x="12330" fg:w="2"/><text x="96.4729%" y="447.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$77::eq(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="96.2229%" y="421" width="0.0156%" height="15" fill="rgb(248,109,41)" fg:x="12330" fg:w="2"/><text x="96.4729%" y="431.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$24::eq (2 samples, 0.02%)</title><rect x="96.2229%" y="405" width="0.0156%" height="15" fill="rgb(238,23,50)" fg:x="12330" fg:w="2"/><text x="96.4729%" y="415.50"></text></g><g><title>ant_colony.exe`hashbrown::map::impl$10::index(hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;*, petgraph::graph_impl::NodeIndex (79 samples, 0.62%)</title><rect x="95.6610%" y="565" width="0.6165%" height="15" fill="rgb(211,48,49)" fg:x="12258" fg:w="79"/><text x="95.9110%" y="575.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get(petgraph::graph_impl::NodeIndex (79 samples, 0.62%)</title><rect x="95.6610%" y="549" width="0.6165%" height="15" fill="rgb(223,36,21)" fg:x="12258" fg:w="79"/><text x="95.9110%" y="559.50"></text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner(petgraph::graph_impl::NodeIndex (79 samples, 0.62%)</title><rect x="95.6610%" y="533" width="0.6165%" height="15" fill="rgb(207,123,46)" fg:x="12258" fg:w="79"/><text x="95.9110%" y="543.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (56 samples, 0.44%)</title><rect x="95.8405%" y="517" width="0.4370%" height="15" fill="rgb(240,218,32)" fg:x="12281" fg:w="56"/><text x="96.0905%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (56 samples, 0.44%)</title><rect x="95.8405%" y="501" width="0.4370%" height="15" fill="rgb(252,5,43)" fg:x="12281" fg:w="56"/><text x="96.0905%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (50 samples, 0.39%)</title><rect x="95.8873%" y="485" width="0.3902%" height="15" fill="rgb(252,84,19)" fg:x="12287" fg:w="50"/><text x="96.1373%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (7 samples, 0.05%)</title><rect x="96.2229%" y="469" width="0.0546%" height="15" fill="rgb(243,152,39)" fg:x="12330" fg:w="7"/><text x="96.4729%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt; &gt;::as_ref (5 samples, 0.04%)</title><rect x="96.2385%" y="453" width="0.0390%" height="15" fill="rgb(234,160,15)" fg:x="12332" fg:w="5"/><text x="96.4885%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,f64&gt; &gt;::as_ptr (5 samples, 0.04%)</title><rect x="96.2385%" y="437" width="0.0390%" height="15" fill="rgb(237,34,20)" fg:x="12332" fg:w="5"/><text x="96.4885%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;petgraph::graph_impl::NodeIndex (5 samples, 0.04%)</title><rect x="96.2385%" y="421" width="0.0390%" height="15" fill="rgb(229,97,13)" fg:x="12332" fg:w="5"/><text x="96.4885%" y="431.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$1::finish (21 samples, 0.16%)</title><rect x="96.3634%" y="501" width="0.1639%" height="15" fill="rgb(234,71,50)" fg:x="12348" fg:w="21"/><text x="96.6134%" y="511.50"></text></g><g><title>ant_colony.exe`foldhash::folded_multiply (16 samples, 0.12%)</title><rect x="96.4024%" y="485" width="0.1249%" height="15" fill="rgb(253,155,4)" fg:x="12353" fg:w="16"/><text x="96.6524%" y="495.50"></text></g><g><title>ant_colony.exe`core::num::impl$10::wrapping_mul (8 samples, 0.06%)</title><rect x="96.4648%" y="469" width="0.0624%" height="15" fill="rgb(222,185,37)" fg:x="12361" fg:w="8"/><text x="96.7148%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::make_hash(foldhash::fast::RandomState*, petgraph::graph_impl::NodeIndex (31 samples, 0.24%)</title><rect x="96.3634%" y="517" width="0.2419%" height="15" fill="rgb(251,177,13)" fg:x="12348" fg:w="31"/><text x="96.6134%" y="527.50"></text></g><g><title>ant_colony.exe`foldhash::fast::impl$3::build_hasher (10 samples, 0.08%)</title><rect x="96.5272%" y="501" width="0.0780%" height="15" fill="rgb(250,179,40)" fg:x="12369" fg:w="10"/><text x="96.7772%" y="511.50"></text></g><g><title>ant_colony.exe`foldhash::fast::FoldHasher::with_seed (10 samples, 0.08%)</title><rect x="96.5272%" y="485" width="0.0780%" height="15" fill="rgb(242,44,2)" fg:x="12369" fg:w="10"/><text x="96.7772%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::impl$2::next (18 samples, 0.14%)</title><rect x="97.1906%" y="469" width="0.1405%" height="15" fill="rgb(216,177,13)" fg:x="12454" fg:w="18"/><text x="97.4406%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::lowest_set_bit (18 samples, 0.14%)</title><rect x="97.1906%" y="453" width="0.1405%" height="15" fill="rgb(216,106,43)" fg:x="12454" fg:w="18"/><text x="97.4406%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (9 samples, 0.07%)</title><rect x="97.2608%" y="437" width="0.0702%" height="15" fill="rgb(216,183,2)" fg:x="12463" fg:w="9"/><text x="97.5108%" y="447.50"></text></g><g><title>ant_colony.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (9 samples, 0.07%)</title><rect x="97.2608%" y="421" width="0.0702%" height="15" fill="rgb(249,75,3)" fg:x="12463" fg:w="9"/><text x="97.5108%" y="431.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::load (7 samples, 0.05%)</title><rect x="97.3310%" y="469" width="0.0546%" height="15" fill="rgb(219,67,39)" fg:x="12472" fg:w="7"/><text x="97.5810%" y="479.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.05%)</title><rect x="97.3310%" y="453" width="0.0546%" height="15" fill="rgb(253,228,2)" fg:x="12472" fg:w="7"/><text x="97.5810%" y="463.50"></text></g><g><title>ant_colony.exe`core::intrinsics::copy_nonoverlapping (7 samples, 0.05%)</title><rect x="97.3310%" y="437" width="0.0546%" height="15" fill="rgb(235,138,27)" fg:x="12472" fg:w="7"/><text x="97.5810%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_empty (3 samples, 0.02%)</title><rect x="97.3857%" y="469" width="0.0234%" height="15" fill="rgb(236,97,51)" fg:x="12479" fg:w="3"/><text x="97.6357%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (3 samples, 0.02%)</title><rect x="97.3857%" y="453" width="0.0234%" height="15" fill="rgb(240,80,30)" fg:x="12479" fg:w="3"/><text x="97.6357%" y="463.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.02%)</title><rect x="97.3857%" y="437" width="0.0234%" height="15" fill="rgb(230,178,19)" fg:x="12479" fg:w="3"/><text x="97.6357%" y="447.50"></text></g><g><title>ant_colony.exe`hashbrown::control::group::sse2::Group::match_tag (21 samples, 0.16%)</title><rect x="97.4091%" y="469" width="0.1639%" height="15" fill="rgb(210,190,27)" fg:x="12482" fg:w="21"/><text x="97.6591%" y="479.50"></text></g><g><title>ant_colony.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (21 samples, 0.16%)</title><rect x="97.4091%" y="453" width="0.1639%" height="15" fill="rgb(222,107,31)" fg:x="12482" fg:w="21"/><text x="97.6591%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::control::tag::Tag::full (15 samples, 0.12%)</title><rect x="97.5730%" y="469" width="0.1171%" height="15" fill="rgb(216,127,34)" fg:x="12503" fg:w="15"/><text x="97.8230%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::probe_seq (37 samples, 0.29%)</title><rect x="97.6900%" y="469" width="0.2887%" height="15" fill="rgb(234,116,52)" fg:x="12518" fg:w="37"/><text x="97.9400%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;*, tuple$&lt;petgraph::graph_impl::NodeIndex (17 samples, 0.13%)</title><rect x="97.9788%" y="453" width="0.1327%" height="15" fill="rgb(222,124,15)" fg:x="12555" fg:w="17"/><text x="98.2288%" y="463.50"></text></g><g><title>ant_colony.exe`equivalent::impl$0::equivalent(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (17 samples, 0.13%)</title><rect x="97.9788%" y="437" width="0.1327%" height="15" fill="rgb(231,179,28)" fg:x="12555" fg:w="17"/><text x="98.2288%" y="447.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$77::eq(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (17 samples, 0.13%)</title><rect x="97.9788%" y="421" width="0.1327%" height="15" fill="rgb(226,93,45)" fg:x="12555" fg:w="17"/><text x="98.2288%" y="431.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$24::eq (17 samples, 0.13%)</title><rect x="97.9788%" y="405" width="0.1327%" height="15" fill="rgb(215,8,51)" fg:x="12555" fg:w="17"/><text x="98.2288%" y="415.50"></text></g><g><title>ant_colony.exe`hashbrown::map::impl$10::index(hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;*, petgraph::graph_impl::NodeIndex (258 samples, 2.01%)</title><rect x="96.2775%" y="565" width="2.0134%" height="15" fill="rgb(223,106,5)" fg:x="12337" fg:w="258"/><text x="96.5275%" y="575.50">a..</text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get(petgraph::graph_impl::NodeIndex (258 samples, 2.01%)</title><rect x="96.2775%" y="549" width="2.0134%" height="15" fill="rgb(250,191,5)" fg:x="12337" fg:w="258"/><text x="96.5275%" y="559.50">a..</text></g><g><title>ant_colony.exe`hashbrown::map::HashMap&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64,foldhash::fast::RandomState,allocator_api2::stable::alloc::global::Global&gt;::get_inner(petgraph::graph_impl::NodeIndex (258 samples, 2.01%)</title><rect x="96.2775%" y="533" width="2.0134%" height="15" fill="rgb(242,132,44)" fg:x="12337" fg:w="258"/><text x="96.5275%" y="543.50">a..</text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (216 samples, 1.69%)</title><rect x="96.6053%" y="517" width="1.6857%" height="15" fill="rgb(251,152,29)" fg:x="12379" fg:w="216"/><text x="96.8553%" y="527.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTable&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (216 samples, 1.69%)</title><rect x="96.6053%" y="501" width="1.6857%" height="15" fill="rgb(218,179,5)" fg:x="12379" fg:w="216"/><text x="96.8553%" y="511.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (164 samples, 1.28%)</title><rect x="97.0111%" y="485" width="1.2799%" height="15" fill="rgb(227,67,19)" fg:x="12431" fg:w="164"/><text x="97.2611%" y="495.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,petgraph::graph_impl::NodeIndex (40 samples, 0.31%)</title><rect x="97.9788%" y="469" width="0.3122%" height="15" fill="rgb(233,119,31)" fg:x="12555" fg:w="40"/><text x="98.2288%" y="479.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt; &gt;::as_ref (23 samples, 0.18%)</title><rect x="98.1114%" y="453" width="0.1795%" height="15" fill="rgb(241,120,22)" fg:x="12572" fg:w="23"/><text x="98.3614%" y="463.50"></text></g><g><title>ant_colony.exe`hashbrown::raw::Bucket&lt;tuple$&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,i64&gt; &gt;::as_ptr (23 samples, 0.18%)</title><rect x="98.1114%" y="437" width="0.1795%" height="15" fill="rgb(224,102,30)" fg:x="12572" fg:w="23"/><text x="98.3614%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;petgraph::graph_impl::NodeIndex (23 samples, 0.18%)</title><rect x="98.1114%" y="421" width="0.1795%" height="15" fill="rgb(210,164,37)" fg:x="12572" fg:w="23"/><text x="98.3614%" y="431.50"></text></g><g><title>ant_colony.exe`core::slice::impl$0::get(ref$&lt;slice2$&lt;petgraph::graph_impl::Edge&lt;tuple$ (7 samples, 0.05%)</title><rect x="98.3534%" y="549" width="0.0546%" height="15" fill="rgb(226,191,16)" fg:x="12603" fg:w="7"/><text x="98.6034%" y="559.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$&lt;petgraph::graph_impl::Edge&lt;tuple$ (7 samples, 0.05%)</title><rect x="98.3534%" y="533" width="0.0546%" height="15" fill="rgb(214,40,45)" fg:x="12603" fg:w="7"/><text x="98.6034%" y="543.50"></text></g><g><title>ant_colony.exe`core::slice::index::get_noubcheck(ptr_const$&lt;slice2$&lt;petgraph::graph_impl::Edge&lt;tuple$ (2 samples, 0.02%)</title><rect x="98.3924%" y="517" width="0.0156%" height="15" fill="rgb(244,29,26)" fg:x="12608" fg:w="2"/><text x="98.6424%" y="527.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::EdgeIndex&lt;u32&gt;::index(petgraph::graph_impl::EdgeIndex (10 samples, 0.08%)</title><rect x="98.4080%" y="549" width="0.0780%" height="15" fill="rgb(216,16,5)" fg:x="12610" fg:w="10"/><text x="98.6580%" y="559.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$1::index (9 samples, 0.07%)</title><rect x="98.4158%" y="533" width="0.0702%" height="15" fill="rgb(249,76,35)" fg:x="12611" fg:w="9"/><text x="98.6658%" y="543.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$27::next(petgraph::graph_impl::Edges&lt;tuple$&lt;&gt;,enum2$ (27 samples, 0.21%)</title><rect x="98.2909%" y="565" width="0.2107%" height="15" fill="rgb(207,11,44)" fg:x="12595" fg:w="27"/><text x="98.5409%" y="575.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$77::eq(petgraph::graph_impl::NodeIndex&lt;u32&gt;*, petgraph::graph_impl::NodeIndex (2 samples, 0.02%)</title><rect x="98.4860%" y="549" width="0.0156%" height="15" fill="rgb(228,190,49)" fg:x="12620" fg:w="2"/><text x="98.7360%" y="559.50"></text></g><g><title>ant_colony.exe`core::cmp::impls::impl$24::eq (2 samples, 0.02%)</title><rect x="98.4860%" y="533" width="0.0156%" height="15" fill="rgb(214,173,12)" fg:x="12620" fg:w="2"/><text x="98.7360%" y="543.50"></text></g><g><title>ant_colony.exe`petgraph::visit::impl$9::edges(petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;**, petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="98.5016%" y="565" width="0.0468%" height="15" fill="rgb(218,26,35)" fg:x="12622" fg:w="6"/><text x="98.7516%" y="575.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::impl$25::edges(petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;*, petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="98.5016%" y="549" width="0.0468%" height="15" fill="rgb(220,200,19)" fg:x="12622" fg:w="6"/><text x="98.7516%" y="559.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;::edges(petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="98.5016%" y="533" width="0.0468%" height="15" fill="rgb(239,95,49)" fg:x="12622" fg:w="6"/><text x="98.7516%" y="543.50"></text></g><g><title>ant_colony.exe`petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;::edges_directed(petgraph::graph_impl::NodeIndex (6 samples, 0.05%)</title><rect x="98.5016%" y="517" width="0.0468%" height="15" fill="rgb(235,85,53)" fg:x="12622" fg:w="6"/><text x="98.7516%" y="527.50"></text></g><g><title>ant_colony.exe`core::slice::impl$0::get(ref$&lt;slice2$&lt;petgraph::graph_impl::Node (4 samples, 0.03%)</title><rect x="98.5172%" y="501" width="0.0312%" height="15" fill="rgb(233,133,31)" fg:x="12624" fg:w="4"/><text x="98.7672%" y="511.50"></text></g><g><title>ant_colony.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$&lt;petgraph::graph_impl::Node (3 samples, 0.02%)</title><rect x="98.5251%" y="485" width="0.0234%" height="15" fill="rgb(218,25,20)" fg:x="12625" fg:w="3"/><text x="98.7751%" y="495.50"></text></g><g><title>ant_colony.exe`enum2$&lt;rayon_cond::CondIterator&lt;rayon::iter::map::Map&lt;rayon::vec::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;::for_each(enum2$&lt;rayon_cond::CondIterator&lt;rayon::iter::map::Map&lt;rayon::vec::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;, rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,446 samples, 11.28%)</title><rect x="87.2717%" y="693" width="11.2845%" height="15" fill="rgb(252,210,38)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="703.50">ant_colony.exe`en..</text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,446 samples, 11.28%)</title><rect x="87.2717%" y="677" width="11.2845%" height="15" fill="rgb(242,134,21)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="687.50">ant_colony.exe`co..</text></g><g><title>ant_colony.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,446 samples, 11.28%)</title><rect x="87.2717%" y="661" width="11.2845%" height="15" fill="rgb(213,28,48)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="671.50">ant_colony.exe`co..</text></g><g><title>ant_colony.exe`alloc::vec::into_iter::impl$5::fold&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global,tuple$&lt;&gt;,core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,alloc::alloc::Global&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,446 samples, 11.28%)</title><rect x="87.2717%" y="645" width="11.2845%" height="15" fill="rgb(250,196,2)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="655.50">ant_colony.exe`al..</text></g><g><title>ant_colony.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt;,rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, petgraph::graph_impl::NodeIndex (1,446 samples, 11.28%)</title><rect x="87.2717%" y="629" width="11.2845%" height="15" fill="rgb(227,5,17)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="639.50">ant_colony.exe`co..</text></g><g><title>ant_colony.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,446 samples, 11.28%)</title><rect x="87.2717%" y="613" width="11.2845%" height="15" fill="rgb(221,226,24)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="623.50">ant_colony.exe`co..</text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality::closure$1(rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;*, rustworkx_core::centrality::ShortestPathDataWithEdges&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,446 samples, 11.28%)</title><rect x="87.2717%" y="597" width="11.2845%" height="15" fill="rgb(211,5,48)" fg:x="11183" fg:w="1446"/><text x="87.5217%" y="607.50">ant_colony.exe`ru..</text></g><g><title>ant_colony.exe`rustworkx_core::centrality::shortest_path_for_edge_centrality&lt;ref$&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;**, petgraph::graph_impl::NodeIndex (1,150 samples, 8.97%)</title><rect x="89.5817%" y="581" width="8.9746%" height="15" fill="rgb(219,150,6)" fg:x="11479" fg:w="1150"/><text x="89.8317%" y="591.50">ant_colony.ex..</text></g><g><title>ant_colony.exe`ant_colony::greedy::greedy_algo (1,471 samples, 11.48%)</title><rect x="87.0844%" y="773" width="11.4796%" height="15" fill="rgb(251,46,16)" fg:x="11159" fg:w="1471"/><text x="87.3344%" y="783.50">ant_colony.exe`an..</text></g><g><title>ant_colony.exe`petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;::edge_indices (1,447 samples, 11.29%)</title><rect x="87.2717%" y="757" width="11.2923%" height="15" fill="rgb(220,204,40)" fg:x="11183" fg:w="1447"/><text x="87.5217%" y="767.50">ant_colony.exe`pe..</text></g><g><title>ant_colony.exe`petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt;::edge_count (1,447 samples, 11.29%)</title><rect x="87.2717%" y="741" width="11.2923%" height="15" fill="rgb(211,85,2)" fg:x="11183" fg:w="1447"/><text x="87.5217%" y="751.50">ant_colony.exe`pe..</text></g><g><title>ant_colony.exe`alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;tuple$&lt;&gt;,u32&gt;,alloc::alloc::Global&gt;::len (1,447 samples, 11.29%)</title><rect x="87.2717%" y="725" width="11.2923%" height="15" fill="rgb(229,17,7)" fg:x="11183" fg:w="1447"/><text x="87.5217%" y="735.50">ant_colony.exe`al..</text></g><g><title>ant_colony.exe`rustworkx_core::centrality::edge_betweenness_centrality&lt;ref$&lt;petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt;(petgraph::graph_impl::Graph&lt;u32,tuple$&lt;&gt;,enum2$ (1,447 samples, 11.29%)</title><rect x="87.2717%" y="709" width="11.2923%" height="15" fill="rgb(239,72,28)" fg:x="11183" fg:w="1447"/><text x="87.5217%" y="719.50">ant_colony.exe`ru..</text></g><g><title>ant_colony.exe`core::fmt::Formatter::write_str (34 samples, 0.27%)</title><rect x="98.5719%" y="565" width="0.2653%" height="15" fill="rgb(230,47,54)" fg:x="12631" fg:w="34"/><text x="98.8219%" y="575.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::fs::File&gt;(std::io::default_write_fmt::Adapter&lt;std::fs::File&gt;*, ref$ (33 samples, 0.26%)</title><rect x="98.5797%" y="549" width="0.2575%" height="15" fill="rgb(214,50,8)" fg:x="12632" fg:w="33"/><text x="98.8297%" y="559.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (33 samples, 0.26%)</title><rect x="98.5797%" y="533" width="0.2575%" height="15" fill="rgb(216,198,43)" fg:x="12632" fg:w="33"/><text x="98.8297%" y="543.50"></text></g><g><title>ant_colony.exe`std::fs::impl$9::write (33 samples, 0.26%)</title><rect x="98.5797%" y="517" width="0.2575%" height="15" fill="rgb(234,20,35)" fg:x="12632" fg:w="33"/><text x="98.8297%" y="527.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_write (33 samples, 0.26%)</title><rect x="98.5797%" y="501" width="0.2575%" height="15" fill="rgb(254,45,19)" fg:x="12632" fg:w="33"/><text x="98.8297%" y="511.50"></text></g><g><title>`0x7FFAE3841C04 (33 samples, 0.26%)</title><rect x="98.5797%" y="485" width="0.2575%" height="15" fill="rgb(219,14,44)" fg:x="12632" fg:w="33"/><text x="98.8297%" y="495.50"></text></g><g><title>ant_colony.exe`core::fmt::Formatter::write_formatted_parts (109 samples, 0.85%)</title><rect x="98.8372%" y="549" width="0.8506%" height="15" fill="rgb(217,220,26)" fg:x="12665" fg:w="109"/><text x="99.0872%" y="559.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::fs::File&gt;(std::io::default_write_fmt::Adapter&lt;std::fs::File&gt;*, ref$ (109 samples, 0.85%)</title><rect x="98.8372%" y="533" width="0.8506%" height="15" fill="rgb(213,158,28)" fg:x="12665" fg:w="109"/><text x="99.0872%" y="543.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (108 samples, 0.84%)</title><rect x="98.8450%" y="517" width="0.8428%" height="15" fill="rgb(252,51,52)" fg:x="12666" fg:w="108"/><text x="99.0950%" y="527.50"></text></g><g><title>ant_colony.exe`std::fs::impl$9::write (108 samples, 0.84%)</title><rect x="98.8450%" y="501" width="0.8428%" height="15" fill="rgb(246,89,16)" fg:x="12666" fg:w="108"/><text x="99.0950%" y="511.50"></text></g><g><title>ant_colony.exe`std::sys::pal::windows::handle::Handle::synchronous_write (107 samples, 0.84%)</title><rect x="98.8528%" y="485" width="0.8350%" height="15" fill="rgb(216,158,49)" fg:x="12667" fg:w="107"/><text x="99.1028%" y="495.50"></text></g><g><title>`0x7FFAE3841C04 (107 samples, 0.84%)</title><rect x="98.8528%" y="469" width="0.8350%" height="15" fill="rgb(236,107,19)" fg:x="12667" fg:w="107"/><text x="99.1028%" y="479.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result&lt;tuple$ (148 samples, 1.15%)</title><rect x="98.5641%" y="773" width="1.1550%" height="15" fill="rgb(228,185,30)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="783.50"></text></g><g><title>ant_colony.exe`std::io::Write::write_fmt&lt;std::fs::File&gt; (148 samples, 1.15%)</title><rect x="98.5641%" y="757" width="1.1550%" height="15" fill="rgb(246,134,8)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="767.50"></text></g><g><title>ant_colony.exe`std::io::default_write_fmt (148 samples, 1.15%)</title><rect x="98.5641%" y="741" width="1.1550%" height="15" fill="rgb(214,143,50)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="751.50"></text></g><g><title>ant_colony.exe`core::fmt::write (148 samples, 1.15%)</title><rect x="98.5641%" y="725" width="1.1550%" height="15" fill="rgb(228,75,8)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$27::fmt&lt;f64,alloc::alloc::Global&gt;(alloc::vec::Vec (148 samples, 1.15%)</title><rect x="98.5641%" y="709" width="1.1550%" height="15" fill="rgb(207,175,4)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="719.50"></text></g><g><title>ant_colony.exe`core::fmt::impl$28::fmt(ref$&lt;slice2$ (148 samples, 1.15%)</title><rect x="98.5641%" y="693" width="1.1550%" height="15" fill="rgb(205,108,24)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="703.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugList::entries(core::slice::iter::Iter (148 samples, 1.15%)</title><rect x="98.5641%" y="677" width="1.1550%" height="15" fill="rgb(244,120,49)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="687.50"></text></g><g><title>ant_colony.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (148 samples, 1.15%)</title><rect x="98.5641%" y="661" width="1.1550%" height="15" fill="rgb(223,47,38)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="671.50"></text></g><g><title>ant_colony.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;f64&gt;*, core::ptr::non_null::NonNull (148 samples, 1.15%)</title><rect x="98.5641%" y="645" width="1.1550%" height="15" fill="rgb(229,179,11)" fg:x="12630" fg:w="148"/><text x="98.8141%" y="655.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugSet::entry (147 samples, 1.15%)</title><rect x="98.5719%" y="629" width="1.1472%" height="15" fill="rgb(231,122,1)" fg:x="12631" fg:w="147"/><text x="98.8219%" y="639.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::DebugInner::entry_with (147 samples, 1.15%)</title><rect x="98.5719%" y="613" width="1.1472%" height="15" fill="rgb(245,119,9)" fg:x="12631" fg:w="147"/><text x="98.8219%" y="623.50"></text></g><g><title>ant_colony.exe`core::result::Result::and_then (147 samples, 1.15%)</title><rect x="98.5719%" y="597" width="1.1472%" height="15" fill="rgb(241,163,25)" fg:x="12631" fg:w="147"/><text x="98.8219%" y="607.50"></text></g><g><title>ant_colony.exe`core::fmt::builders::impl$5::entry_with::closure$0 (147 samples, 1.15%)</title><rect x="98.5719%" y="581" width="1.1472%" height="15" fill="rgb(217,214,3)" fg:x="12631" fg:w="147"/><text x="98.8219%" y="591.50"></text></g><g><title>ant_colony.exe`core::fmt::float::float_to_decimal_common_shortest&lt;f64&gt; (113 samples, 0.88%)</title><rect x="98.8372%" y="565" width="0.8818%" height="15" fill="rgb(240,86,28)" fg:x="12665" fg:w="113"/><text x="99.0872%" y="575.50"></text></g><g><title>ant_colony.exe`core::num::flt2dec::to_shortest_str (4 samples, 0.03%)</title><rect x="99.6878%" y="549" width="0.0312%" height="15" fill="rgb(215,47,9)" fg:x="12774" fg:w="4"/><text x="99.9378%" y="559.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnMut::call_mut (4 samples, 0.03%)</title><rect x="99.6878%" y="533" width="0.0312%" height="15" fill="rgb(252,25,45)" fg:x="12774" fg:w="4"/><text x="99.9378%" y="543.50"></text></g><g><title>ant_colony.exe`core::num::flt2dec::strategy::grisu::format_shortest (4 samples, 0.03%)</title><rect x="99.6878%" y="517" width="0.0312%" height="15" fill="rgb(251,164,9)" fg:x="12774" fg:w="4"/><text x="99.9378%" y="527.50"></text></g><g><title>ant_colony.exe`core::num::flt2dec::strategy::grisu::format_shortest_opt (3 samples, 0.02%)</title><rect x="99.6956%" y="501" width="0.0234%" height="15" fill="rgb(233,194,0)" fg:x="12775" fg:w="3"/><text x="99.9456%" y="511.50"></text></g><g><title>ant_colony.exe`ant_colony::test_on_graphs2(alloc::vec::Vec (12,640 samples, 98.64%)</title><rect x="1.1004%" y="805" width="98.6421%" height="15" fill="rgb(249,111,24)" fg:x="141" fg:w="12640"/><text x="1.3504%" y="815.50">ant_colony.exe`ant_colony::test_on_graphs2(alloc::vec::Vec</text></g><g><title>ant_colony.exe`ant_colony::evaluate_score2(alloc::vec::Vec&lt;ant_colony::graph::Graph,alloc::alloc::Global&gt;*, unsigned long long, unsigned long long, unsigned long long, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par&lt;f64&gt;, ant_colony::graph::Par (12,640 samples, 98.64%)</title><rect x="1.1004%" y="789" width="98.6421%" height="15" fill="rgb(250,223,3)" fg:x="141" fg:w="12640"/><text x="1.3504%" y="799.50">ant_colony.exe`ant_colony::evaluate_score2(alloc::vec::Vec&lt;ant_colony::graph::Graph,alloc::alloc::Global&gt;*, unsigned long long, unsigned long long, unsigned long lon..</text></g><g><title>ant_colony.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;, ref$ (2 samples, 0.02%)</title><rect x="99.7269%" y="773" width="0.0156%" height="15" fill="rgb(236,178,37)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="783.50"></text></g><g><title>ant_colony.exe`std::fs::OpenOptions::_open (2 samples, 0.02%)</title><rect x="99.7269%" y="757" width="0.0156%" height="15" fill="rgb(241,158,50)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="767.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::open (2 samples, 0.02%)</title><rect x="99.7269%" y="741" width="0.0156%" height="15" fill="rgb(213,121,41)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="99.7269%" y="725" width="0.0156%" height="15" fill="rgb(240,92,3)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="735.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="99.7269%" y="709" width="0.0156%" height="15" fill="rgb(205,123,3)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop (2 samples, 0.02%)</title><rect x="99.7269%" y="693" width="0.0156%" height="15" fill="rgb(205,97,47)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="703.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner::deallocate (2 samples, 0.02%)</title><rect x="99.7269%" y="677" width="0.0156%" height="15" fill="rgb(247,152,14)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner::current_memory (2 samples, 0.02%)</title><rect x="99.7269%" y="661" width="0.0156%" height="15" fill="rgb(248,195,53)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="671.50"></text></g><g><title>ant_colony.exe`std::sys::fs::windows::File::open_native (2 samples, 0.02%)</title><rect x="99.7269%" y="645" width="0.0156%" height="15" fill="rgb(226,201,16)" fg:x="12779" fg:w="2"/><text x="99.9769%" y="655.50"></text></g><g><title>`0x7FFAE36F49D6 (10 samples, 0.08%)</title><rect x="99.7425%" y="629" width="0.0780%" height="15" fill="rgb(205,98,0)" fg:x="12781" fg:w="10"/><text x="99.9925%" y="639.50"></text></g><g><title>`0x7FFAE3709B68 (10 samples, 0.08%)</title><rect x="99.7425%" y="613" width="0.0780%" height="15" fill="rgb(214,191,48)" fg:x="12781" fg:w="10"/><text x="99.9925%" y="623.50"></text></g><g><title>`0x7FFAE36F801E (9 samples, 0.07%)</title><rect x="99.7503%" y="597" width="0.0702%" height="15" fill="rgb(237,112,39)" fg:x="12782" fg:w="9"/><text x="100.0003%" y="607.50"></text></g><g><title>`0x7FFAE37CB4C9 (9 samples, 0.07%)</title><rect x="99.7503%" y="581" width="0.0702%" height="15" fill="rgb(247,203,27)" fg:x="12782" fg:w="9"/><text x="100.0003%" y="591.50"></text></g><g><title>`0x7FFAE3841EC4 (9 samples, 0.07%)</title><rect x="99.7503%" y="565" width="0.0702%" height="15" fill="rgb(235,124,28)" fg:x="12782" fg:w="9"/><text x="100.0003%" y="575.50"></text></g><g><title>ant_colony.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (12 samples, 0.09%)</title><rect x="99.7425%" y="677" width="0.0936%" height="15" fill="rgb(208,207,46)" fg:x="12781" fg:w="12"/><text x="99.9925%" y="687.50"></text></g><g><title>ant_colony.exe`alloc::alloc::dealloc (12 samples, 0.09%)</title><rect x="99.7425%" y="661" width="0.0936%" height="15" fill="rgb(234,176,4)" fg:x="12781" fg:w="12"/><text x="99.9925%" y="671.50"></text></g><g><title>`0x7FFAE37759E0 (12 samples, 0.09%)</title><rect x="99.7425%" y="645" width="0.0936%" height="15" fill="rgb(230,133,28)" fg:x="12781" fg:w="12"/><text x="99.9925%" y="655.50"></text></g><g><title>`0x7FFAE36F58E7 (2 samples, 0.02%)</title><rect x="99.8205%" y="629" width="0.0156%" height="15" fill="rgb(211,137,40)" fg:x="12791" fg:w="2"/><text x="100.0705%" y="639.50"></text></g><g><title>`0x7FFAE37092C8 (2 samples, 0.02%)</title><rect x="99.8205%" y="613" width="0.0156%" height="15" fill="rgb(254,35,13)" fg:x="12791" fg:w="2"/><text x="100.0705%" y="623.50"></text></g><g><title>`0x7FFAE3841E04 (2 samples, 0.02%)</title><rect x="99.8205%" y="597" width="0.0156%" height="15" fill="rgb(225,49,51)" fg:x="12791" fg:w="2"/><text x="100.0705%" y="607.50"></text></g><g><title>ant_colony.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (13 samples, 0.10%)</title><rect x="99.7425%" y="789" width="0.1015%" height="15" fill="rgb(251,10,15)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="799.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (13 samples, 0.10%)</title><rect x="99.7425%" y="773" width="0.1015%" height="15" fill="rgb(228,207,15)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="783.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place (13 samples, 0.10%)</title><rect x="99.7425%" y="757" width="0.1015%" height="15" fill="rgb(241,99,19)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="767.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (13 samples, 0.10%)</title><rect x="99.7425%" y="741" width="0.1015%" height="15" fill="rgb(207,104,49)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="751.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (13 samples, 0.10%)</title><rect x="99.7425%" y="725" width="0.1015%" height="15" fill="rgb(234,99,18)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="735.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (13 samples, 0.10%)</title><rect x="99.7425%" y="709" width="0.1015%" height="15" fill="rgb(213,191,49)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="719.50"></text></g><g><title>ant_colony.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (13 samples, 0.10%)</title><rect x="99.7425%" y="693" width="0.1015%" height="15" fill="rgb(210,226,19)" fg:x="12781" fg:w="13"/><text x="99.9925%" y="703.50"></text></g><g><title>ant_colony.exe`__scrt_common_main_seh() (12,768 samples, 99.64%)</title><rect x="0.2107%" y="981" width="99.6410%" height="15" fill="rgb(229,97,18)" fg:x="27" fg:w="12768"/><text x="0.4607%" y="991.50">ant_colony.exe`__scrt_common_main_seh()</text></g><g><title>ant_colony.exe`invoke_main() (12,761 samples, 99.59%)</title><rect x="0.2653%" y="965" width="99.5864%" height="15" fill="rgb(211,167,15)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="975.50">ant_colony.exe`invoke_main()</text></g><g><title>ant_colony.exe`main (12,761 samples, 99.59%)</title><rect x="0.2653%" y="949" width="99.5864%" height="15" fill="rgb(210,169,34)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="959.50">ant_colony.exe`main</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal (12,761 samples, 99.59%)</title><rect x="0.2653%" y="933" width="99.5864%" height="15" fill="rgb(241,121,31)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="943.50">ant_colony.exe`std::rt::lang_start_internal</text></g><g><title>ant_colony.exe`std::panic::catch_unwind (12,761 samples, 99.59%)</title><rect x="0.2653%" y="917" width="99.5864%" height="15" fill="rgb(232,40,11)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="927.50">ant_colony.exe`std::panic::catch_unwind</text></g><g><title>ant_colony.exe`std::panicking::try (12,761 samples, 99.59%)</title><rect x="0.2653%" y="901" width="99.5864%" height="15" fill="rgb(205,86,26)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="911.50">ant_colony.exe`std::panicking::try</text></g><g><title>ant_colony.exe`std::panicking::try::do_call (12,761 samples, 99.59%)</title><rect x="0.2653%" y="885" width="99.5864%" height="15" fill="rgb(231,126,28)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="895.50">ant_colony.exe`std::panicking::try::do_call</text></g><g><title>ant_colony.exe`std::rt::lang_start_internal::closure$0 (12,761 samples, 99.59%)</title><rect x="0.2653%" y="869" width="99.5864%" height="15" fill="rgb(219,221,18)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="879.50">ant_colony.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (12,761 samples, 99.59%)</title><rect x="0.2653%" y="853" width="99.5864%" height="15" fill="rgb(211,40,0)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="863.50">ant_colony.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (12,761 samples, 99.59%)</title><rect x="0.2653%" y="837" width="99.5864%" height="15" fill="rgb(239,85,43)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="847.50">ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>ant_colony.exe`ant_colony::main (12,761 samples, 99.59%)</title><rect x="0.2653%" y="821" width="99.5864%" height="15" fill="rgb(231,55,21)" fg:x="34" fg:w="12761"/><text x="0.5153%" y="831.50">ant_colony.exe`ant_colony::main</text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(alloc::vec::Vec (14 samples, 0.11%)</title><rect x="99.7425%" y="805" width="0.1093%" height="15" fill="rgb(225,184,43)" fg:x="12781" fg:w="14"/><text x="99.9925%" y="815.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="437" width="0.0156%" height="15" fill="rgb(251,158,41)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="447.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="421" width="0.0156%" height="15" fill="rgb(234,159,37)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="431.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="405" width="0.0156%" height="15" fill="rgb(216,204,22)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="415.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="389" width="0.0156%" height="15" fill="rgb(214,17,3)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="399.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="373" width="0.0156%" height="15" fill="rgb(212,111,17)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="383.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="357" width="0.0156%" height="15" fill="rgb(221,157,24)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="367.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="341" width="0.0156%" height="15" fill="rgb(252,16,13)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="351.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="325" width="0.0156%" height="15" fill="rgb(221,62,2)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="335.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="309" width="0.0156%" height="15" fill="rgb(247,87,22)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="319.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="99.8595%" y="293" width="0.0156%" height="15" fill="rgb(215,73,9)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="303.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="277" width="0.0156%" height="15" fill="rgb(207,175,33)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="287.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="261" width="0.0156%" height="15" fill="rgb(243,129,54)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="271.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="245" width="0.0156%" height="15" fill="rgb(227,119,45)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="255.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8595%" y="229" width="0.0156%" height="15" fill="rgb(205,109,36)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="239.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="213" width="0.0156%" height="15" fill="rgb(205,6,39)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="223.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8595%" y="197" width="0.0156%" height="15" fill="rgb(221,32,16)" fg:x="12796" fg:w="2"/><text x="100.1095%" y="207.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8751%" y="277" width="0.0156%" height="15" fill="rgb(228,144,50)" fg:x="12798" fg:w="2"/><text x="100.1251%" y="287.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8751%" y="261" width="0.0156%" height="15" fill="rgb(229,201,53)" fg:x="12798" fg:w="2"/><text x="100.1251%" y="271.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8751%" y="245" width="0.0156%" height="15" fill="rgb(249,153,27)" fg:x="12798" fg:w="2"/><text x="100.1251%" y="255.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8751%" y="229" width="0.0156%" height="15" fill="rgb(227,106,25)" fg:x="12798" fg:w="2"/><text x="100.1251%" y="239.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8751%" y="213" width="0.0156%" height="15" fill="rgb(230,65,29)" fg:x="12798" fg:w="2"/><text x="100.1251%" y="223.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8751%" y="197" width="0.0156%" height="15" fill="rgb(221,57,46)" fg:x="12798" fg:w="2"/><text x="100.1251%" y="207.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(tuple$ (5 samples, 0.04%)</title><rect x="99.8595%" y="645" width="0.0390%" height="15" fill="rgb(229,161,17)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="655.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;tuple$&lt;&gt;,tuple$ (5 samples, 0.04%)</title><rect x="99.8595%" y="629" width="0.0390%" height="15" fill="rgb(222,213,11)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="639.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (5 samples, 0.04%)</title><rect x="99.8595%" y="613" width="0.0390%" height="15" fill="rgb(235,35,13)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="623.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="597" width="0.0390%" height="15" fill="rgb(233,158,34)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="607.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="581" width="0.0390%" height="15" fill="rgb(215,151,48)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="591.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="565" width="0.0390%" height="15" fill="rgb(229,84,14)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="575.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (5 samples, 0.04%)</title><rect x="99.8595%" y="549" width="0.0390%" height="15" fill="rgb(229,68,14)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="559.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="533" width="0.0390%" height="15" fill="rgb(243,106,26)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="543.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="517" width="0.0390%" height="15" fill="rgb(206,45,38)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="527.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="501" width="0.0390%" height="15" fill="rgb(226,6,15)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="511.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (5 samples, 0.04%)</title><rect x="99.8595%" y="485" width="0.0390%" height="15" fill="rgb(232,22,54)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="495.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (5 samples, 0.04%)</title><rect x="99.8595%" y="469" width="0.0390%" height="15" fill="rgb(229,222,32)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="479.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (5 samples, 0.04%)</title><rect x="99.8595%" y="453" width="0.0390%" height="15" fill="rgb(228,62,29)" fg:x="12796" fg:w="5"/><text x="100.1095%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="437" width="0.0234%" height="15" fill="rgb(251,103,34)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="447.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="421" width="0.0234%" height="15" fill="rgb(233,12,30)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="431.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="405" width="0.0234%" height="15" fill="rgb(238,52,0)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="415.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="99.8751%" y="389" width="0.0234%" height="15" fill="rgb(223,98,5)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="399.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="373" width="0.0234%" height="15" fill="rgb(228,75,37)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="383.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="357" width="0.0234%" height="15" fill="rgb(205,115,49)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="367.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="341" width="0.0234%" height="15" fill="rgb(250,154,43)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="351.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8751%" y="325" width="0.0234%" height="15" fill="rgb(226,43,29)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8751%" y="309" width="0.0234%" height="15" fill="rgb(249,228,39)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="319.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8751%" y="293" width="0.0234%" height="15" fill="rgb(216,79,43)" fg:x="12798" fg:w="3"/><text x="100.1251%" y="303.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until (2 samples, 0.02%)</title><rect x="99.8985%" y="421" width="0.0156%" height="15" fill="rgb(228,95,12)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="431.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.02%)</title><rect x="99.8985%" y="405" width="0.0156%" height="15" fill="rgb(249,221,15)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="415.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::execute (2 samples, 0.02%)</title><rect x="99.8985%" y="389" width="0.0156%" height="15" fill="rgb(233,34,13)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="399.50"></text></g><g><title>ant_colony.exe`rayon_core::job::JobRef::execute (2 samples, 0.02%)</title><rect x="99.8985%" y="373" width="0.0156%" height="15" fill="rgb(214,103,39)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="383.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (2 samples, 0.02%)</title><rect x="99.8985%" y="357" width="0.0156%" height="15" fill="rgb(251,126,39)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="367.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.8985%" y="341" width="0.0156%" height="15" fill="rgb(214,216,36)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="351.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.8985%" y="325" width="0.0156%" height="15" fill="rgb(220,221,8)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8985%" y="309" width="0.0156%" height="15" fill="rgb(240,216,3)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="319.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.8985%" y="293" width="0.0156%" height="15" fill="rgb(232,218,17)" fg:x="12801" fg:w="2"/><text x="100.1485%" y="303.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until (3 samples, 0.02%)</title><rect x="99.8985%" y="565" width="0.0234%" height="15" fill="rgb(229,163,45)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="575.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_cold (3 samples, 0.02%)</title><rect x="99.8985%" y="549" width="0.0234%" height="15" fill="rgb(231,110,42)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="559.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::execute (3 samples, 0.02%)</title><rect x="99.8985%" y="533" width="0.0234%" height="15" fill="rgb(208,170,48)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="543.50"></text></g><g><title>ant_colony.exe`rayon_core::job::JobRef::execute (3 samples, 0.02%)</title><rect x="99.8985%" y="517" width="0.0234%" height="15" fill="rgb(239,116,25)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="527.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (3 samples, 0.02%)</title><rect x="99.8985%" y="501" width="0.0234%" height="15" fill="rgb(219,200,50)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="511.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (3 samples, 0.02%)</title><rect x="99.8985%" y="485" width="0.0234%" height="15" fill="rgb(245,200,0)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="495.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (3 samples, 0.02%)</title><rect x="99.8985%" y="469" width="0.0234%" height="15" fill="rgb(245,119,33)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="479.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8985%" y="453" width="0.0234%" height="15" fill="rgb(231,125,12)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.8985%" y="437" width="0.0234%" height="15" fill="rgb(216,96,41)" fg:x="12801" fg:w="3"/><text x="100.1485%" y="447.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9220%" y="309" width="0.0156%" height="15" fill="rgb(248,43,45)" fg:x="12804" fg:w="2"/><text x="100.1720%" y="319.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9220%" y="293" width="0.0156%" height="15" fill="rgb(217,222,7)" fg:x="12804" fg:w="2"/><text x="100.1720%" y="303.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9220%" y="277" width="0.0156%" height="15" fill="rgb(233,28,6)" fg:x="12804" fg:w="2"/><text x="100.1720%" y="287.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9220%" y="261" width="0.0156%" height="15" fill="rgb(231,218,15)" fg:x="12804" fg:w="2"/><text x="100.1720%" y="271.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9220%" y="245" width="0.0156%" height="15" fill="rgb(226,171,48)" fg:x="12804" fg:w="2"/><text x="100.1720%" y="255.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9220%" y="229" width="0.0156%" height="15" fill="rgb(235,201,9)" fg:x="12804" fg:w="2"/><text x="100.1720%" y="239.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.9220%" y="405" width="0.0312%" height="15" fill="rgb(217,80,15)" fg:x="12804" fg:w="4"/><text x="100.1720%" y="415.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (4 samples, 0.03%)</title><rect x="99.9220%" y="389" width="0.0312%" height="15" fill="rgb(219,152,8)" fg:x="12804" fg:w="4"/><text x="100.1720%" y="399.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (4 samples, 0.03%)</title><rect x="99.9220%" y="373" width="0.0312%" height="15" fill="rgb(243,107,38)" fg:x="12804" fg:w="4"/><text x="100.1720%" y="383.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9220%" y="357" width="0.0312%" height="15" fill="rgb(231,17,5)" fg:x="12804" fg:w="4"/><text x="100.1720%" y="367.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.9220%" y="341" width="0.0312%" height="15" fill="rgb(209,25,54)" fg:x="12804" fg:w="4"/><text x="100.1720%" y="351.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (4 samples, 0.03%)</title><rect x="99.9220%" y="325" width="0.0312%" height="15" fill="rgb(219,0,2)" fg:x="12804" fg:w="4"/><text x="100.1720%" y="335.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="309" width="0.0156%" height="15" fill="rgb(246,9,5)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="319.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="293" width="0.0156%" height="15" fill="rgb(226,159,4)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="303.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="277" width="0.0156%" height="15" fill="rgb(219,175,34)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="287.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="99.9376%" y="261" width="0.0156%" height="15" fill="rgb(236,10,46)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="271.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="245" width="0.0156%" height="15" fill="rgb(240,211,16)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="255.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="229" width="0.0156%" height="15" fill="rgb(205,3,43)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="239.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="213" width="0.0156%" height="15" fill="rgb(245,7,22)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="223.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9376%" y="197" width="0.0156%" height="15" fill="rgb(239,132,32)" fg:x="12806" fg:w="2"/><text x="100.1876%" y="207.50"></text></g><g><title>ant_colony.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9610%" y="245" width="0.0156%" height="15" fill="rgb(228,202,34)" fg:x="12809" fg:w="2"/><text x="100.2110%" y="255.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9610%" y="229" width="0.0156%" height="15" fill="rgb(254,200,22)" fg:x="12809" fg:w="2"/><text x="100.2110%" y="239.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (2 samples, 0.02%)</title><rect x="99.9610%" y="213" width="0.0156%" height="15" fill="rgb(219,10,39)" fg:x="12809" fg:w="2"/><text x="100.2110%" y="223.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (2 samples, 0.02%)</title><rect x="99.9610%" y="197" width="0.0156%" height="15" fill="rgb(226,210,39)" fg:x="12809" fg:w="2"/><text x="100.2110%" y="207.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9610%" y="181" width="0.0156%" height="15" fill="rgb(208,219,16)" fg:x="12809" fg:w="2"/><text x="100.2110%" y="191.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (2 samples, 0.02%)</title><rect x="99.9610%" y="165" width="0.0156%" height="15" fill="rgb(216,158,51)" fg:x="12809" fg:w="2"/><text x="100.2110%" y="175.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::execute (16 samples, 0.12%)</title><rect x="99.8595%" y="677" width="0.1249%" height="15" fill="rgb(233,14,44)" fg:x="12796" fg:w="16"/><text x="100.1095%" y="687.50"></text></g><g><title>ant_colony.exe`rayon_core::job::JobRef::execute (16 samples, 0.12%)</title><rect x="99.8595%" y="661" width="0.1249%" height="15" fill="rgb(237,97,39)" fg:x="12796" fg:w="16"/><text x="100.1095%" y="671.50"></text></g><g><title>ant_colony.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (11 samples, 0.09%)</title><rect x="99.8985%" y="645" width="0.0858%" height="15" fill="rgb(218,198,43)" fg:x="12801" fg:w="11"/><text x="100.1485%" y="655.50"></text></g><g><title>ant_colony.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;tuple$ (11 samples, 0.09%)</title><rect x="99.8985%" y="629" width="0.0858%" height="15" fill="rgb(231,104,20)" fg:x="12801" fg:w="11"/><text x="100.1485%" y="639.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (11 samples, 0.09%)</title><rect x="99.8985%" y="613" width="0.0858%" height="15" fill="rgb(254,36,13)" fg:x="12801" fg:w="11"/><text x="100.1485%" y="623.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (11 samples, 0.09%)</title><rect x="99.8985%" y="597" width="0.0858%" height="15" fill="rgb(248,14,50)" fg:x="12801" fg:w="11"/><text x="100.1485%" y="607.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (11 samples, 0.09%)</title><rect x="99.8985%" y="581" width="0.0858%" height="15" fill="rgb(217,107,29)" fg:x="12801" fg:w="11"/><text x="100.1485%" y="591.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="565" width="0.0624%" height="15" fill="rgb(251,169,33)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="575.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="549" width="0.0624%" height="15" fill="rgb(217,108,32)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="559.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="533" width="0.0624%" height="15" fill="rgb(219,66,42)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="543.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (8 samples, 0.06%)</title><rect x="99.9220%" y="517" width="0.0624%" height="15" fill="rgb(206,180,7)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="527.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="501" width="0.0624%" height="15" fill="rgb(208,226,31)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="511.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="485" width="0.0624%" height="15" fill="rgb(218,26,49)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="495.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="469" width="0.0624%" height="15" fill="rgb(233,197,48)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="479.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (8 samples, 0.06%)</title><rect x="99.9220%" y="453" width="0.0624%" height="15" fill="rgb(252,181,51)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="463.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (8 samples, 0.06%)</title><rect x="99.9220%" y="437" width="0.0624%" height="15" fill="rgb(253,90,19)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="447.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (8 samples, 0.06%)</title><rect x="99.9220%" y="421" width="0.0624%" height="15" fill="rgb(215,171,30)" fg:x="12804" fg:w="8"/><text x="100.1720%" y="431.50"></text></g><g><title>ant_colony.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="405" width="0.0312%" height="15" fill="rgb(214,222,9)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="415.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="389" width="0.0312%" height="15" fill="rgb(223,3,22)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="399.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="373" width="0.0312%" height="15" fill="rgb(225,196,46)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="383.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="99.9532%" y="357" width="0.0312%" height="15" fill="rgb(209,110,37)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="367.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="341" width="0.0312%" height="15" fill="rgb(249,89,12)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="351.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;tuple$&lt;&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="325" width="0.0312%" height="15" fill="rgb(226,27,33)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="335.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper::closure$0(rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="309" width="0.0312%" height="15" fill="rgb(213,82,22)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="319.50"></text></g><g><title>ant_colony.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$ (4 samples, 0.03%)</title><rect x="99.9532%" y="293" width="0.0312%" height="15" fill="rgb(248,140,0)" fg:x="12808" fg:w="4"/><text x="100.2032%" y="303.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;tuple$&lt;&gt;,tuple$&lt;&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.9610%" y="277" width="0.0234%" height="15" fill="rgb(228,106,3)" fg:x="12809" fg:w="3"/><text x="100.2110%" y="287.50"></text></g><g><title>ant_colony.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$&lt;&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::vec::DrainProducer&lt;petgraph::graph_impl::NodeIndex&lt;u32&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::for_each::ForEachConsumer&lt;rustworkx_core::centrality::edge_betweenness_centrality::closure_env$1&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt;,rustworkx_core::centrality::edge_betweenness_centrality::closure_env$0&lt;ref$&lt;petgraph::graph_impl::Graph&lt;usize,tuple$&lt;&gt;,enum2$&lt;petgraph::Undirected&gt;,u32&gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,tuple$ (3 samples, 0.02%)</title><rect x="99.9610%" y="261" width="0.0234%" height="15" fill="rgb(209,23,37)" fg:x="12809" fg:w="3"/><text x="100.2110%" y="271.50"></text></g><g><title>all (12,814 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(241,93,50)" fg:x="0" fg:w="12814"/><text x="0.2500%" y="1039.50"></text></g><g><title>`0x7FFAE371C34C (12,788 samples, 99.80%)</title><rect x="0.2029%" y="1013" width="99.7971%" height="15" fill="rgb(253,46,43)" fg:x="26" fg:w="12788"/><text x="0.4529%" y="1023.50">`0x7FFAE371C34C</text></g><g><title>`0x7FFAE2FAE8D7 (12,788 samples, 99.80%)</title><rect x="0.2029%" y="997" width="99.7971%" height="15" fill="rgb(226,206,43)" fg:x="26" fg:w="12788"/><text x="0.4529%" y="1007.50">`0x7FFAE2FAE8D7</text></g><g><title>ant_colony.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (19 samples, 0.15%)</title><rect x="99.8517%" y="981" width="0.1483%" height="15" fill="rgb(217,54,7)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="991.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$28::call_once (19 samples, 0.15%)</title><rect x="99.8517%" y="965" width="0.1483%" height="15" fill="rgb(223,5,52)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="975.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$28::call_once (19 samples, 0.15%)</title><rect x="99.8517%" y="949" width="0.1483%" height="15" fill="rgb(206,52,46)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="959.50"></text></g><g><title>ant_colony.exe`alloc::boxed::impl$8::drop (19 samples, 0.15%)</title><rect x="99.8517%" y="933" width="0.1483%" height="15" fill="rgb(253,136,11)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="943.50"></text></g><g><title>ant_colony.exe`core::alloc::layout::Layout::for_value_raw (19 samples, 0.15%)</title><rect x="99.8517%" y="917" width="0.1483%" height="15" fill="rgb(208,106,33)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="927.50"></text></g><g><title>ant_colony.exe`core::mem::size_of_val_raw (19 samples, 0.15%)</title><rect x="99.8517%" y="901" width="0.1483%" height="15" fill="rgb(206,54,4)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="911.50"></text></g><g><title>ant_colony.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (19 samples, 0.15%)</title><rect x="99.8517%" y="885" width="0.1483%" height="15" fill="rgb(213,3,15)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="895.50"></text></g><g><title>ant_colony.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (19 samples, 0.15%)</title><rect x="99.8517%" y="869" width="0.1483%" height="15" fill="rgb(252,211,39)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="879.50"></text></g><g><title>ant_colony.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (19 samples, 0.15%)</title><rect x="99.8517%" y="853" width="0.1483%" height="15" fill="rgb(223,6,36)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="863.50"></text></g><g><title>ant_colony.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (19 samples, 0.15%)</title><rect x="99.8517%" y="837" width="0.1483%" height="15" fill="rgb(252,169,45)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="847.50"></text></g><g><title>ant_colony.exe`std::panicking::try::do_call (19 samples, 0.15%)</title><rect x="99.8517%" y="821" width="0.1483%" height="15" fill="rgb(212,48,26)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="831.50"></text></g><g><title>ant_colony.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (19 samples, 0.15%)</title><rect x="99.8517%" y="805" width="0.1483%" height="15" fill="rgb(251,102,48)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="815.50"></text></g><g><title>ant_colony.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (19 samples, 0.15%)</title><rect x="99.8517%" y="789" width="0.1483%" height="15" fill="rgb(243,208,16)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="799.50"></text></g><g><title>ant_colony.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (19 samples, 0.15%)</title><rect x="99.8517%" y="773" width="0.1483%" height="15" fill="rgb(219,96,24)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="783.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::ThreadBuilder::run (19 samples, 0.15%)</title><rect x="99.8517%" y="757" width="0.1483%" height="15" fill="rgb(219,33,29)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="767.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::main_loop (19 samples, 0.15%)</title><rect x="99.8517%" y="741" width="0.1483%" height="15" fill="rgb(223,176,5)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="751.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (19 samples, 0.15%)</title><rect x="99.8517%" y="725" width="0.1483%" height="15" fill="rgb(228,140,14)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="735.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until (19 samples, 0.15%)</title><rect x="99.8517%" y="709" width="0.1483%" height="15" fill="rgb(217,179,31)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="719.50"></text></g><g><title>ant_colony.exe`rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.15%)</title><rect x="99.8517%" y="693" width="0.1483%" height="15" fill="rgb(230,9,30)" fg:x="12795" fg:w="19"/><text x="100.1017%" y="703.50"></text></g></svg></svg>